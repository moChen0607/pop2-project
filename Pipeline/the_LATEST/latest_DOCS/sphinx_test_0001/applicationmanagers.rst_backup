
Application Managers
********************
In the checkout system, which leverages both :ref:`fileio` and :ref:`network`,
the code written for these functions are fully 100% native-python. The that
these functions interface with applications using proprietary libraries is to
use custom exceptions which the system can raise to allow/block file access.

When files are being passed to applications for save/load/open, they first go
through an intermediary script which is basically just a glorified try/except
block. The exceptions that are raised are then handled by each application's
respective methods, basically creating application-specific methods without the
need for subclassing.

If this is all still unclear after reading the rest of the docs, be sure to
check out each module's source-code to get a better idea or hop over to the
:ref:`fileio` module and read through its methods.

.. _houmanager:

houmanager
===========
.. automodule:: houmanager
 :members:

.. _mayamanager:

mayamanager
===========
.. automodule:: mayamanager
 :members:

.. _nukemanager:

nukemanager
===========
.. automodule:: nukemanager
 :members:
