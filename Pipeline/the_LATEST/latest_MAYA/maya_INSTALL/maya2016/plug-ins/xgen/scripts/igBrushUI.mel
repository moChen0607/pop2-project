// Copyright (C) 1997-2013 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

/**
 * @file igBrushUI.mel
 * @brief UI methods for each of the iGroom brushes.
 *
 * <b>CONFIDENTIAL INFORMATION: This software is the confidential and
 * proprietary information of Walt Disney Animation Studios ("WDAS").
 * This software may not be used, disclosed, reproduced or distributed
 * for any purpose without prior written authorization and license
 * from WDAS. Reproduction of any section of this software must include
 * this legend and all copyright notices.
 * Copyright Disney Enterprises, Inc. All rights reserved.</b>
 *
 * @author Thomas V Thompson II
 *
 * @version tthompso  05/25/07  Initial Version
 * @version tthompso  07/13/07  New part brush
 *                              Gradient and clear for mask
 * @version tthompso  07/17/07  Eraser upgrade (decouple length, bend, orient)
 * @version tthompso  09/10/07  Smooth upgrade (decouple length, bend, orient)
 */


/**
 * Initialize the brushes at start-up. Doing this here cenralizes all brush
 * related code.
 */
global proc igBrushUI()
{
    global string $igBrushList[];
    if ( size( $igBrushList ) == 0 ) {
        $igBrushList = { "Pose", "Orient", "Bend", "Twist", "Elevation",
                         "Noise", "Length", "Width", "Attract", "Repel",
                         "Part", "Smooth", "Mask", "ClearMask", "Eraser", "Region" };
    }

    // Cleanup old now unused optionVars
    optionVar -rm igBrushFadeIn;
    
    // Initialize the opionVars if they dont exist

    // Base brush attributes
    if ( !`optionVar -exists igBrushSpacing` )
        optionVar -fv igBrushSpacing 0.1;
    if ( !`optionVar -exists igBrushFalloff` )
        optionVar -iv igBrushFalloff 1;
    if ( !`optionVar -exists igBrushMaskUse` )
        optionVar -iv igBrushMaskUse 1;
    // Pose brush
    if ( !`optionVar -exists igBrushPoseOrientMag` )
        optionVar -fv igBrushPoseOrientMag 0.5;
    if ( !`optionVar -exists igBrushPoseBendMag` )
        optionVar -fv igBrushPoseBendMag 0.5;
    // Orient brush
    if ( !`optionVar -exists igBrushOrientMag` )
        optionVar -fv igBrushOrientMag 0.8;
    // Bend brush
    if ( !`optionVar -exists igBrushBendMag` )
        optionVar -fv igBrushBendMag 0.8;
    // Twist brush
    if ( !`optionVar -exists igBrushTwistMag` )
        optionVar -fv igBrushTwistMag 1.0;
    // Elevationt brush
    if ( !`optionVar -exists igBrushElevDegrees` )
        optionVar -fv igBrushElevDegrees 1.0;
    if ( !`optionVar -exists igBrushElevGoalAngle` )
        optionVar -fv igBrushElevGoalAngle 30.0;
    // Noise brush
    if ( !`optionVar -exists igBrushNoiseMidMag` )
        optionVar -fv igBrushNoiseMidMag 0.075;
    if ( !`optionVar -exists igBrushNoiseTipMag` )
        optionVar -fv igBrushNoiseTipMag 0.15;
    if ( !`optionVar -exists igBrushNoiseWidthMag` )
        optionVar -fv igBrushNoiseWidthMag 0.02;
    if ( !`optionVar -exists igBrushNoiseOffNDegrees` )
        optionVar -fv igBrushNoiseOffNDegrees 2.0;
    if ( !`optionVar -exists igBrushNoiseAboutNDegrees` )
        optionVar -fv igBrushNoiseAboutNDegrees 1.5;
    if ( !`optionVar -exists igBrushNoiseTwistDegrees` )
        optionVar -fv igBrushNoiseTwistDegrees 1.0;
    // Length brush
    if ( !`optionVar -exists igBrushLengthIncr` )
        optionVar -fv igBrushLengthIncr 0.1;
    if ( !`optionVar -exists igBrushLengthGoal` )
        optionVar -fv igBrushLengthGoal 5.0;
    // Width brush
    if ( !`optionVar -exists igBrushWidthIncr` )
        optionVar -fv igBrushWidthIncr 0.02;
    if ( !`optionVar -exists igBrushWidthGoal` )
        optionVar -fv igBrushWidthGoal 0.1;
    // Attract brush
    if ( !`optionVar -exists igBrushAttractStyle` )
        optionVar -iv igBrushAttractStyle 1;
    if ( !`optionVar -exists igBrushAttractMag` )
        optionVar -fv igBrushAttractMag 0.9;
    // Repel brush
    if ( !`optionVar -exists igBrushRepelMag` )
        optionVar -fv igBrushRepelMag 0.3;
    // Part brush
    if ( !`optionVar -exists igBrushPartMag` )
        optionVar -fv igBrushPartMag 0.3;
    // Smooth brush
    if ( !`optionVar -exists igBrushSmoothLengthMag` )
        optionVar -fv igBrushSmoothLengthMag 0.2;
    if ( !`optionVar -exists igBrushSmoothBendMag` )
        optionVar -fv igBrushSmoothBendMag 0.2;
    if ( !`optionVar -exists igBrushSmoothOrientMag` )
        optionVar -fv igBrushSmoothOrientMag 0.2;
    // Mask brush
    if ( !`optionVar -exists igBrushMaskMag` )
        optionVar -fv igBrushMaskMag 0.2;
    // Eraser brush
    if ( !`optionVar -exists igBrushEraserLengthMag` )
        optionVar -fv igBrushEraserLengthMag 0.01;
    if ( !`optionVar -exists igBrushEraserBendMag` )
        optionVar -fv igBrushEraserBendMag 0.1;
    if ( !`optionVar -exists igBrushEraserOrientMag` )
        optionVar -fv igBrushEraserOrientMag 0.1;

    // RegionMap brush
    if ( !`optionVar -exists igBrushRegionColor` )
		optionVar -floatValue igBrushRegionColor 1.0;
		optionVar -floatValueAppend igBrushRegionColor 0.0;
		optionVar -floatValueAppend igBrushRegionColor 0.0;
}


/**
 * Update the brush portion of the iGroom UI
 */
global proc igRefreshBrushUI()
{
    global string $igActiveBrush;
    global string $igNewActiveBrush;

    // Unhighlight the currently active
    string $widget = "ig"+$igActiveBrush+"IconButton";
    string $icon = `iconTextButton -query -image1 $widget`;
    $icon = `substitute "On" $icon "Off"`;
    iconTextButton -edit -image1 $icon $widget;

    // Highlight the newly active
    $widget = "ig"+$igNewActiveBrush+"IconButton";
    $icon = `iconTextButton -query -image1 $widget`;
    $icon = `substitute "Off" $icon "On"`;
    iconTextButton -edit -image1 $icon $widget;

    // Make the new brush active
    $igActiveBrush = $igNewActiveBrush;
    
    // First remove the current brush controls
    string $primCtrls[] = `layout -query -childArray igBrushForm`;
    for ( $control in $primCtrls ) {
        deleteUI $control;
    }
    
    // Create the custom form for this brush type.
    setParent igBrushForm;
    eval ( "ig" + $igActiveBrush + "BrushUI" );

    evalDeferred("igBrushContextSelect");
    igFixSizeCB;     
}


/**
 * Base UI component for all brush types.
 */
global proc igBaseBrushUI()
{
    float $sp = `optionVar -query igBrushSpacing`;
    floatSliderGrp -label (uiRes("m_igBrushUI.kSpacing")) -f true -adj 3 -cw 2 50
        -min 0.001 -max 1.0 -pre 3 -step 0.02 -v $sp
        -ann (uiRes("m_igBrushUI.kDistanceBrushEffectAnn"))
        -cc "igBrushUpdateFSlider(\"Spacing\",-1)"
        igBrushSpacingField;

    int $fo = `optionVar -query igBrushFalloff`;
    radioButtonGrp -label (uiRes("m_igBrushUI.kRadiusFalloff")) -nrb 4 -sl $fo
        -cw 2 60 -cw 3 67 -cw 4 68 -cw 5 68
        -ann (uiRes("m_igBrushUI.kTypeOfFalloffRadiusAnn"))
        -la4 (uiRes("m_igBrushUI.kGauss")) 
		(uiRes("m_igBrushUI.kSmooth")) 
		(uiRes("m_igBrushUI.kLinear")) 
		(uiRes("m_igBrushUI.kImpulse"))
        -onc "igBrushUpdateRadio \"Falloff\" -1"
        igBrushFalloffField;

    int $mm = `optionVar -query igBrushMaskUse`;
    radioButtonGrp -label (uiRes("m_igBrushUI.kMaskUse")) -nrb 2 -sl $mm
        -ann (uiRes("m_igBrushUI.kIndicateMask"))
        -la2 (uiRes("m_igBrushUI.kApplyWithin")) 
		(uiRes("m_igBrushUI.kApplyOutside"))
        -onc "igBrushUpdateRadio \"MaskUse\" -1"
        igBrushMaskUseField;

    separator -vis false -h 15;
}


/**
 * POSE - UI for the pose brush attributes.
 */
global proc igPoseBrushInit()
{
    global float $igBrushMagnitude0;
    global float $igBrushMagnitude1;
    $igBrushMagnitude0 = `optionVar -query igBrushPoseOrientMag`;
    $igBrushMagnitude1 = `optionVar -query igBrushPoseBendMag`;
}

global proc igPoseBrushUI()
{
    global float $igBrushMagnitude0;
    global float $igBrushMagnitude1;

    igPoseBrushInit();
    columnLayout -adj on;
    {
        igBaseBrushUI;
        
        floatSliderGrp -label (uiRes("m_igBrushUI.kOrientationMagnitude")) -f true -adj 3 -cw 2 50
            -min 0.0 -max 1.0 -pre 3 -step 0.02 -v $igBrushMagnitude0
            -cc "igBrushUpdateFSlider(\"PoseOrientMag\",0)"
            -ann (uiRes("m_igBrushUI.kAmountToModifyOrientAnn"))
            igBrushPoseOrientMagField;
        
        floatSliderGrp -label (uiRes("m_igBrushUI.kBendMagnitude")) -f true -adj 3 -cw 2 50
            -min 0.0 -max 1.0 -pre 3 -step 0.02 -v $igBrushMagnitude1
            -cc "igBrushUpdateFSlider(\"PoseBendMag\",1)"
            -ann (uiRes("m_igBrushUI.kAmountToModifyBendAnn"))
            igBrushPoseBendMagField;
        
        setParent ..;
    }
}


/**
 * ORIENT - UI for the orientation brush attributes.
 */
global proc igOrientBrushInit()
{
    global float $igBrushMagnitude0;
    $igBrushMagnitude0 = `optionVar -query igBrushOrientMag`;
}

global proc igOrientBrushUI()
{
    global float $igBrushMagnitude0;

    igOrientBrushInit();
    columnLayout -adj on;
    {
        igBaseBrushUI;
        
        floatSliderGrp -label (uiRes("m_igBrushUI.kMagnitude")) -f true -adj 3 -cw 2 50
            -min 0.0 -max 1.0 -pre 3 -step 0.02 -v $igBrushMagnitude0
            -cc "igBrushUpdateFSlider(\"OrientMag\",0)"
            -ann (uiRes("m_igBrushUI.kAmountToModifyPrimOrientAnn"))
            igBrushOrientMagField;
        
        setParent ..;
    }
}


/**
 * BEND - UI for the bend brush attributes.
 */
global proc igBendBrushInit()
{
    global float $igBrushMagnitude0;
    $igBrushMagnitude0 = `optionVar -query igBrushBendMag`;
}

global proc igBendBrushUI()
{
    global float $igBrushMagnitude0;

    igBendBrushInit();
    columnLayout -adj on;
    {
        igBaseBrushUI;
        
        floatSliderGrp -label (uiRes("m_igBrushUI.kMagnitude2")) -f true -adj 3 -cw 2 50
            -min 0.0 -max 1.0 -pre 3 -step 0.02 -v $igBrushMagnitude0
            -cc "igBrushUpdateFSlider(\"BendMag\",0)"
            -ann (uiRes("m_igBrushUI.kAmountToModifyPrimBendAnn"))
            igBrushBendMagField;
        
        setParent ..;
    }
}


/**
 * TWIST - UI for the twist brush attributes.
 */
global proc igTwistBrushInit()
{
    global float $igBrushMagnitude0;
    $igBrushMagnitude0 = `optionVar -query igBrushTwistMag`;
}

global proc igTwistBrushUI()
{
    global float $igBrushMagnitude0;

    igTwistBrushInit();
    columnLayout -adj on;
    {
        igBaseBrushUI;
        
        floatSliderGrp -label (uiRes("m_igBrushUI.kDegrees")) -f true -adj 3 -cw 2 50
            -min 0.0 -max 10.0 -fmx 30.0 -pre 3 -step 0.02
            -v $igBrushMagnitude0
            -cc "igBrushUpdateFSlider(\"TwistMag\",0)"
            -ann (uiRes("m_igBrushUI.kAmountToTwistAroundBaseAnn"))
            igBrushTwistMagField;
        
        setParent ..;
    }
}


/**
 * ELEVATION - UI for the elevation brush attributes.
 */
global proc igElevationBrushInit()
{
    global float $igBrushMagnitude0;
    global float $igBrushMagnitude1;
    $igBrushMagnitude0 = `optionVar -query igBrushElevDegrees`;
    $igBrushMagnitude1 = `optionVar -query igBrushElevGoalAngle`;
}

global proc igElevationBrushUI()
{
    global float $igBrushMagnitude0;
    global float $igBrushMagnitude1;

    igElevationBrushInit();
    columnLayout -adj on;
    {
        igBaseBrushUI;
        
        floatSliderGrp -label (uiRes("m_igBrushUI.kDegrees2")) -f true -adj 3 -cw 2 50
            -min -10.0 -max 10.0 -fmn -90.0 -fmx 90.0 -pre 2 -step 0.5
            -v $igBrushMagnitude0
            -cc "igBrushUpdateFSlider(\"ElevDegrees\",0)"
            -ann (uiRes("m_igBrushUI.kNumberOfDegreesAnn"))
            igBrushElevDegreesField;
        
        floatSliderGrp -label (uiRes("m_igBrushUI.kGoalAngle")) -f true -adj 3 -cw 2 50
            -min 0.0 -max 90.0 -pre 2 -step 0.5 -v $igBrushMagnitude1
            -cc "igBrushUpdateFSlider(\"ElevGoalAngle\",1)"
            -ann (uiRes("m_igBrushUI.kGoalAngleAboveAnn"))
            igBrushElevGoalAngleField;
        
        setParent ..;
    }
}


/**
 * NOISE - UI for the noise brush attributes.
 */
global proc igNoiseBrushInit()
{
    global float $igBrushMagnitude0;
    global float $igBrushMagnitude1;
    global float $igBrushMagnitude2;
    global float $igBrushMagnitude3;
    global float $igBrushMagnitude4;
    global float $igBrushMagnitude5;
    $igBrushMagnitude0 = `optionVar -query igBrushNoiseMidMag`;
    $igBrushMagnitude1 = `optionVar -query igBrushNoiseTipMag`;
    $igBrushMagnitude2 = `optionVar -query igBrushNoiseWidthMag`;
    $igBrushMagnitude3 = `optionVar -query igBrushNoiseOffNDegrees`;
    $igBrushMagnitude4 = `optionVar -query igBrushNoiseAboutNDegrees`;
    $igBrushMagnitude5 = `optionVar -query igBrushNoiseTwistDegrees`;
}

global proc igNoiseBrushUI()
{
    global float $igBrushMagnitude0;
    global float $igBrushMagnitude1;
    global float $igBrushMagnitude2;
    global float $igBrushMagnitude3;
    global float $igBrushMagnitude4;
    global float $igBrushMagnitude5;

    igNoiseBrushInit();
    columnLayout -adj on;
    {
        igBaseBrushUI;
        
        floatSliderGrp -label (uiRes("m_igBrushUI.kMidMagnitude")) -f true -adj 3 -cw 2 50
            -min 0.0 -max 1.0 -pre 3 -step 0.02 -v $igBrushMagnitude0
            -cc "igBrushUpdateFSlider(\"NoiseMidMag\",0)"
            -ann (uiRes("m_igBrushUI.kNoiseFurMidPointAnn"))
            igBrushNoiseMidMagField;
        
        floatSliderGrp -label (uiRes("m_igBrushUI.kTipMagnitude")) -f true -adj 3 -cw 2 50
            -min 0.0 -max 1.0 -pre 3 -step 0.02 -v $igBrushMagnitude1
            -cc "igBrushUpdateFSlider(\"NoiseTipMag\",1)"
            -ann (uiRes("m_igBrushUI.kNoiseFurTipPointAnn"))
            igBrushNoiseTipMagField;
        
        floatSliderGrp -label (uiRes("m_igBrushUI.kWidthMagnitude")) -f true -adj 3 -cw 2 50
            -min 0.0 -max 1.0 -pre 3 -step 0.02 -v $igBrushMagnitude2
            -cc "igBrushUpdateFSlider(\"NoiseWidthMag\",2)"
            -ann (uiRes("m_igBrushUI.kNoiseWidthAnn"))
            igBrushNoiseWidthMagField;
        
        floatSliderGrp -label (uiRes("m_igBrushUI.kOffnDegrees")) -f true -adj 3 -cw 2 50
            -min 0.0 -max 10.0 -fmx 90.0 -pre 3 -step 0.02
            -v $igBrushMagnitude3
            -cc "igBrushUpdateFSlider(\"NoiseOffNDegrees\",3)"
            -ann (uiRes("m_igBrushUI.kNoiseOffTheNormalAnn"))
            igBrushNoiseOffNDegreesField;
        
        floatSliderGrp -label (uiRes("m_igBrushUI.kAboutnDegrees")) -f true -adj 3 -cw 2 50
            -min 0.0 -max 10.0 -fmx 90.0 -pre 3 -step 0.02
            -v $igBrushMagnitude4
            -cc "igBrushUpdateFSlider(\"NoiseAboutNDegrees\",4)"
            -ann (uiRes("m_igBrushUI.kNoiseAboutTheNormalAnn"))
            igBrushNoiseAboutNDegreesField;
        
        floatSliderGrp -label (uiRes("m_igBrushUI.kTwistDegrees")) -f true -adj 3 -cw 2 50
            -min 0.0 -max 10.0 -fmx 90.0 -pre 3 -step 0.02
            -v $igBrushMagnitude5
            -cc "igBrushUpdateFSlider(\"NoiseTwistDegrees\",5)"
            -ann (uiRes("m_igBrushUI.kNoiseTwistPrimitiveAnn"))
            igBrushNoiseTwistDegreesField;
        
        setParent ..;
    }
}


/**
 * LENGTH - UI for the length brush attributes.
 */
global proc igLengthBrushInit()
{
    global float $igBrushMagnitude0;
    global float $igBrushMagnitude1;
    $igBrushMagnitude0 = `optionVar -query igBrushLengthIncr`;
    $igBrushMagnitude1 = `optionVar -query igBrushLengthGoal`;
}

global proc igLengthBrushUI()
{
    global float $igBrushMagnitude0;
    global float $igBrushMagnitude1;

    igLengthBrushInit();
    columnLayout -adj on;
    {
        igBaseBrushUI;
        
        floatSliderGrp -label (uiRes("m_igBrushUI.kIncrement")) -f true -adj 3 -cw 2 50
            -min -1.0 -max 1.0 -pre 3 -step 0.02 -v $igBrushMagnitude0
            -cc "igBrushUpdateFSlider(\"LengthIncr\",0)"
            -ann (uiRes("m_igBrushUI.kIncrLengthAnn"))
            igBrushLengthIncrField;
            
        floatSliderGrp -label (uiRes("m_igBrushUI.kGoalLength")) -f true -adj 3 -cw 2 50
            -min 0.0 -max 1.0 -fmx 10.0
            -pre 3 -step 0.02 -v $igBrushMagnitude1
            -cc "igBrushUpdateFSlider(\"LengthGoal\",1)"
            -ann ((uiRes("m_igBrushUI.kGoalLengthAnn")))
            igBrushLengthGoalField;

        setParent ..;
    }
}


/**
 * WIDTH - UI for the width brush attributes.
 */
global proc igWidthBrushInit()
{
    global float $igBrushMagnitude0;
    global float $igBrushMagnitude1;
    $igBrushMagnitude0 = `optionVar -query igBrushWidthIncr`;
    $igBrushMagnitude1 = `optionVar -query igBrushWidthGoal`;
}

global proc igWidthBrushUI()
{
    global float $igBrushMagnitude0;
    global float $igBrushMagnitude1;

    igWidthBrushInit();
    columnLayout -adj on;
    {
        igBaseBrushUI;
        
        floatSliderGrp -label (uiRes("m_igBrushUI.kIncrement2")) -f true -adj 3 -cw 2 50
            -min -1.0 -max 1.0 -pre 3 -step 0.02 -v $igBrushMagnitude0
            -cc "igBrushUpdateFSlider(\"WidthIncr\",0)"
            -ann (uiRes("m_igBrushUI.kWidthIncrementStrokeAnn"))
            igBrushWidthIncrField;
            
        floatSliderGrp -label (uiRes("m_igBrushUI.kGoalWidth")) -f true -adj 3 -cw 2 50
            -min 0.0 -max 1.0 -fmx 10.0
            -pre 3 -step 0.02 -v $igBrushMagnitude1
            -cc "igBrushUpdateFSlider(\"WidthGoal\",1)"
            -ann (uiRes("m_igBrushUI.kPrimWidthAnn"))
            igBrushWidthGoalField;

        setParent ..;
    }
}


/**
 * ATTRACT - UI for the attract brush attributes.
 */
global proc igAttractBrushInit()
{
    global float $igBrushMagnitude0;
    global float $igBrushMagnitude1;
    $igBrushMagnitude0 = `optionVar -query igBrushAttractStyle`;
    $igBrushMagnitude1 = `optionVar -query igBrushAttractMag`;
}

global proc igAttractBrushUI()
{
    global float $igBrushMagnitude0;
    global float $igBrushMagnitude1;

    igAttractBrushInit();
    columnLayout -adj on;
    {
        igBaseBrushUI;
        
        radioButtonGrp -label (uiRes("m_igBrushUI.kStyle")) -nrb 2 -sl $igBrushMagnitude0
            -la2 "Lock" "Float"
            -onc "igBrushUpdateRadio(\"AttractStyle\",0)"
            -ann (uiRes("m_igBrushUI.kStyleAnn"))
            igBrushAttractStyleField;

        floatSliderGrp -label (uiRes("m_igBrushUI.kMagnitude3")) -f true -adj 3 -cw 2 50
            -min 0.0 -max 1.0 -pre 3 -step 0.02 -v $igBrushMagnitude1
            -cc "igBrushUpdateFSlider(\"AttractMag\",1)"
            -ann (uiRes("m_igBrushUI.kMagnitudeAnn"))
            igBrushAttractMagField;
        
        setParent ..;
    }
}


/**
 * REPEL - UI for the repel brush attributes.
 */
global proc igRepelBrushInit()
{
    global float $igBrushMagnitude0;
    $igBrushMagnitude0 = `optionVar -query igBrushRepelMag`;
}

global proc igRepelBrushUI()
{
    global float $igBrushMagnitude0;

    igRepelBrushInit();
    columnLayout -adj on;
    {
        igBaseBrushUI;
        
        floatSliderGrp -label (uiRes("m_igBrushUI.kMagnitude4")) -f true -adj 3 -cw 2 50
            -min 0.0 -max 1.0 -pre 3 -step 0.02 -v $igBrushMagnitude0
            -cc "igBrushUpdateFSlider(\"RepelMag\",0)"
            -ann (uiRes("m_igBrushUI.kRepelAnnot"))
            igBrushRepelMagField;

        setParent ..;
    }
}


/**
 * Part - UI for the part brush attributes.
 */
global proc igPartBrushInit()
{
    global float $igBrushMagnitude0;
    $igBrushMagnitude0 = `optionVar -query igBrushPartMag`;
}

global proc igPartBrushUI()
{
    global float $igBrushMagnitude0;

    igPartBrushInit();
    columnLayout -adj on;
    {
        igBaseBrushUI;
        
        floatSliderGrp -label (uiRes("m_igBrushUI.kMagnitude5")) -f true -adj 3 -cw 2 50
            -min 0.0 -max 1.0 -pre 3 -step 0.02 -v $igBrushMagnitude0
            -cc "igBrushUpdateFSlider(\"PartMag\",0)"
            -ann (uiRes("m_igBrushUI.kPartPrimAnnot"))
            igBrushPartMagField;

        setParent ..;
    }
}


/**
 * Smooth - UI for the smooth brush attributes.
 */
global proc igSmoothBrushInit()
{
    global float $igBrushMagnitude0;
    global float $igBrushMagnitude1;
    global float $igBrushMagnitude2;
    $igBrushMagnitude0 = `optionVar -query igBrushSmoothLengthMag`;
    $igBrushMagnitude1 = `optionVar -query igBrushSmoothOrientMag`;
    $igBrushMagnitude2 = `optionVar -query igBrushSmoothBendMag`;
}

global proc igSmoothBrushUI()
{
    global float $igBrushMagnitude0;
    global float $igBrushMagnitude1;
    global float $igBrushMagnitude2;

    igSmoothBrushInit();
    columnLayout -adj on;
    {
        igBaseBrushUI;
        
        floatSliderGrp -label (uiRes("m_igBrushUI.kLengthMagnitude")) -f true -adj 3 -cw 2 50
            -min 0.0 -max 1.0 -pre 3 -step 0.02 -v $igBrushMagnitude0
            -cc "igBrushUpdateFSlider(\"SmoothLengthMag\",0)"
            -ann (uiRes("m_igBrushUI.kLenMagAnn"))
            igBrushSmoothLengthMagField;
        
        floatSliderGrp -label (uiRes("m_igBrushUI.kOrientMagnitude")) -f true -adj 3 -cw 2 50
            -min 0.0 -max 1.0 -pre 3 -step 0.02 -v $igBrushMagnitude1
            -cc "igBrushUpdateFSlider(\"SmoothOrientMag\",1)"
            -ann (uiRes("m_igBrushUI.kOrientMagAnn"))
            igBrushSmoothOrientMagField;

        floatSliderGrp -label (uiRes("m_igBrushUI.kBendMagnitude2")) -f true -adj 3 -cw 2 50
            -min 0.0 -max 1.0 -pre 3 -step 0.02 -v $igBrushMagnitude2
            -cc "igBrushUpdateFSlider(\"SmoothBendMag\",2)"
            -ann (uiRes("m_igBrushUI.kBendMagAnn"))
            igBrushSmoothBendMagField;
        
        setParent ..;
    }
}


/**
 * MASK - UI for the mask brush attributes.
 */
global proc igMaskBrushInit()
{
    global float $igBrushMagnitude0;
    $igBrushMagnitude0 = `optionVar -query igBrushMaskMag`;
}

global proc igMaskBrushUI()
{
    global float $igBrushMagnitude0;

    igMaskBrushInit();
    columnLayout -adj on;
    {
        igBaseBrushUI;
        
        floatSliderGrp -label (uiRes("m_igBrushUI.kMagnitude6")) -f true -adj 3 -cw 2 50
            -min -0.25 -max 1.0  -fmn -1.0 -pre 3 -step 0.01
            -v $igBrushMagnitude0
            -cc "igBrushUpdateFSlider(\"MaskMag\",0)"
            -ann (uiRes("m_igBrushUI.kAmountToPartPrimitiveAnn"))
            igBrushMaskMagField;

        setParent ..;
    }
}


/**
 * ERASER - UI for the eraser brush attributes.
 */
global proc igEraserBrushInit()
{
    global float $igBrushMagnitude0;
    global float $igBrushMagnitude1;
    global float $igBrushMagnitude2;
    $igBrushMagnitude0 = `optionVar -query igBrushEraserLengthMag`;
    $igBrushMagnitude1 = `optionVar -query igBrushEraserOrientMag`;
    $igBrushMagnitude2 = `optionVar -query igBrushEraserBendMag`;
}

global proc igEraserBrushUI()
{
    global float $igBrushMagnitude0;
    global float $igBrushMagnitude1;
    global float $igBrushMagnitude2;

    igEraserBrushInit();
    columnLayout -adj on;
    {
        igBaseBrushUI;
        
        floatSliderGrp -label (uiRes("m_igBrushUI.kLengthMagnitude2")) -f true -adj 3 -cw 2 50
            -min 0.0 -max 1.0 -pre 3 -step 0.02 -v $igBrushMagnitude0
            -cc "igBrushUpdateFSlider(\"EraserLengthMag\",0)"
            -ann (uiRes("m_igBrushUI.kLengthEachStrokeAnn"))
            igBrushEraserLengthMagField;
        
        floatSliderGrp -label (uiRes("m_igBrushUI.kOrientMagnitude2")) -f true -adj 3 -cw 2 50
            -min 0.0 -max 1.0 -pre 3 -step 0.02 -v $igBrushMagnitude1
            -cc "igBrushUpdateFSlider(\"EraserOrientMag\",1)"
            -ann (uiRes("m_igBrushUI.kOrientEachStrokeAnn"))
            igBrushEraserOrientMagField;
        
        floatSliderGrp -label (uiRes("m_igBrushUI.kBendMagnitude3")) -f true -adj 3 -cw 2 50
            -min 0.0 -max 1.0 -pre 3 -step 0.02 -v $igBrushMagnitude2
            -cc "igBrushUpdateFSlider(\"EraserBendMag\",2)"
            -ann (uiRes("m_igBrushUI.kBendEachStrokeAnn"))
            igBrushEraserBendMagField;
        
        setParent ..;
    }
}

/**
 * REGION MAP - UI for the region map brush attributes.
 */
global proc igRegionBrushInit()
{
    global float $igBrushMagnitude0;
    global float $igBrushMagnitude1;
    global float $igBrushMagnitude2;

    float $igBrushRGB[] = `optionVar -query igBrushRegionColor`;
    $igBrushMagnitude0 = $igBrushRGB[0] ;
    $igBrushMagnitude1 = $igBrushRGB[1] ;
    $igBrushMagnitude2 = $igBrushRGB[2] ;
}

global proc igRegionBrushUI()
{
    global float $igBrushMagnitude0;
    global float $igBrushMagnitude1;
    global float $igBrushMagnitude2;

    igRegionBrushInit();
    columnLayout -adj on;
    {
        igBaseBrushUI;
        colorSliderGrp -label (uiRes("m_igBrushUI.kColor")) -rgb $igBrushMagnitude0 $igBrushMagnitude1 $igBrushMagnitude2
            -adj 3 -cw 2 50            
            -cc "igBrushUpdateColorSlider(\"RegionColor\")"
            -ann (uiRes("m_igBrushUI.kColorRegionMapAnnot"))
            igBrushRegionColorField;
        setParent ..;
    }
}

/**
 * Update the optionVars as the brush float sliders are modified.
 */
global proc igBrushUpdateFSlider( string $var, int $index )
{
    global float $igBrushMagnitude0;
    global float $igBrushMagnitude1;
    global float $igBrushMagnitude2;
    global float $igBrushMagnitude3;
    global float $igBrushMagnitude4;
    global float $igBrushMagnitude5;
    
    string $ovar = "igBrush" + $var;
    string $field = $ovar + "Field";
    float $value = `floatSliderGrp -q -v $field`;
    optionVar -fv $ovar $value;
    if ( $index == 0 ) $igBrushMagnitude0 = $value;
    if ( $index == 1 ) $igBrushMagnitude1 = $value;
    if ( $index == 2 ) $igBrushMagnitude2 = $value;
    if ( $index == 3 ) $igBrushMagnitude3 = $value;        
    if ( $index == 4 ) $igBrushMagnitude4 = $value;        
    if ( $index == 5 ) $igBrushMagnitude5 = $value;        
}


/**
 * Update the optionVars as the brush radio buttons are modified.
 */
global proc igBrushUpdateRadio( string $var, int $index )
{
    global float $igBrushMagnitude0;
    global float $igBrushMagnitude1;
    global float $igBrushMagnitude2;
    global float $igBrushMagnitude3;
    global float $igBrushMagnitude4;
    global float $igBrushMagnitude5;
    
    string $ovar = "igBrush" + $var;
    string $field = $ovar + "Field";
    int $value = `radioButtonGrp -q -sl $field`;
    optionVar -iv $ovar $value;
    if ( $index == 0 ) $igBrushMagnitude0 = $value;
    if ( $index == 1 ) $igBrushMagnitude1 = $value;
    if ( $index == 2 ) $igBrushMagnitude2 = $value;
    if ( $index == 3 ) $igBrushMagnitude3 = $value;
    if ( $index == 4 ) $igBrushMagnitude4 = $value;        
    if ( $index == 5 ) $igBrushMagnitude5 = $value;        
}

/**
 * Update the optionVars as the brush color sliders are modified.
 */
global proc igBrushUpdateColorSlider( string $var )
{
    global float $igBrushMagnitude0;
    global float $igBrushMagnitude1;
    global float $igBrushMagnitude2;
    
    string $ovar = "igBrush" + $var;
    string $field = $ovar + "Field";
    float $rgb[] = `colorSliderGrp -q -rgb $field` ;

    optionVar -floatValue $ovar $rgb[0];
    optionVar -floatValueAppend $ovar $rgb[1];
    optionVar -floatValueAppend $ovar $rgb[2];

    $igBrushMagnitude0 = $rgb[0] ;
    $igBrushMagnitude1 = $rgb[1] ;
    $igBrushMagnitude2 = $rgb[2] ;
}
