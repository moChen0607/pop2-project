// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

/**
 * @file AExgmPaletteTemplate.mel
 * @brief Contains attribute editor ui control
 *
 * <b>CONFIDENTIAL INFORMATION: This software is the confidential and
 * proprietary information of Walt Disney Animation Studios ("WDAS").
 * This software may not be used, disclosed, reproduced or distributed
 * for any purpose without prior written authorization and license
 * from WDAS. Reproduction of any section of this software must include
 * this legend and all copyright notices.
 * Copyright Disney Enterprises, Inc. All rights reserved.</b>
 *
 * @author Lawrence Chai
 * @author Thomas V Thompson II
 *
 * @version Created 09/15/06
 */

global proc exportAsDeltaChanged(string $nodeName)
{
	int $state = `getAttr ($nodeName + ".xgExportAsDelta")`;

	if ($state == 1)
	{
		// check if there is snapshot
		int $canCreateDelta = python("xg.canCreateDelta(\""+$nodeName+"\")");
		if ($canCreateDelta == 0)
		{
			string $cancel = (uiRes("m_AExgmPaletteTemplate.kCancel"));
			string $saveScene = (uiRes("m_AExgmPaletteTemplate.kSaveScene"));
			string $res = `confirmDialog -title (uiRes("m_AExgmPaletteTemplate.kUseDeltaFiles")) 
							-message (uiRes("m_AExgmPaletteTemplate.kMustSaveToUseDelta"))
							-button $saveScene
							-button $cancel
							-defaultButton $saveScene
							-cancelButton $cancel -dismissString $cancel`;
			if ($res == $cancel)
			{
				setAttr ($nodeName + ".xgExportAsDelta") 0;
			}
			else
			{
				// reset the attribute value, then save the scene
				setAttr ($nodeName + ".xgExportAsDelta") 0;
				SaveScene;

				// restore the attribute value, user can cancel the save, so check again
				$canCreateDelta = python("xg.canCreateDelta(\""+$nodeName+"\")");
				setAttr ($nodeName + ".xgExportAsDelta") $canCreateDelta;
			}
		}
	}
    else {
        string $xgBaseName = `getAttr ( $nodeName + ".xgBaseFile" )`;
        if (strip($xgBaseName) != "") {
            setAttr -type "string" ( $nodeName + ".xgFileName" ) $xgBaseName;
            setAttr -type "string" ( $nodeName + ".xgBaseFile" ) "";
        }
    }
}

global proc AExgmPaletteTemplate(string $nodeName)
{
    editorTemplate -beginScrollLayout;

    // include/call base class/node attributes
    editorTemplate -addControl "xgFileName";
    editorTemplate -addControl "xgBaseFile";
    editorTemplate -addControl "xgDeltaFiles";
    editorTemplate -addControl "xgExportAsDelta" exportAsDeltaChanged;
    editorTemplate -addControl "xgVersion";

    AExgmSuppressTransform;

    editorTemplate -addExtraControls;
    editorTemplate -endScrollLayout;
}
