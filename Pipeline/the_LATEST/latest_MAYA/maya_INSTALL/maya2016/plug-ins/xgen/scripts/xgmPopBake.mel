// Copyright (C) 1997-2013 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

/**
 * @file xgmCulling.mel
 * @brief Contains the MEL API for working with culling.
 *
 * <b>CONFIDENTIAL INFORMATION: This software is the confidential and
 * proprietary information of Walt Disney Animation Studios ("WDAS").
 * This software may not be used, disclosed, reproduced or distributed
 * for any purpose without prior written authorization and license
 * from WDAS. Reproduction of any section of this software must include
 * this legend and all copyright notices.
 * Copyright Disney Enterprises, Inc. All rights reserved.</b>
 *
 * @author Stephen D. Bowline
 * @author Thomas V Thompson II
 * @author Ying Liu
 *
 * @version Created 04/28/05
 */


/**
 * Bake out information for all collision fx modules that can be used
 * to cull prims offline.
 */
global proc xgmPopBake( int $startFrame, int $endFrame )
{
    string $collideFX[];
    string $objects[] = `ls -type xgmObject`;
    for ( $object in $objects ) {
        $type = xgmObjectType( $object );
        if ( $type == "CollisionFXModule" ) {
            $collideFX[size($collideFX)] = $object;
            setAttr -type "string" ($object+".popBake") "true";
        }
    }
    for ( $i=$startFrame; $i<=$endFrame; $i++ ) {
		string $fmt = (uiRes("m_xgmPopBake.kRenderingFrame"));
        print `format -s $i $fmt`;
        currentTime $i;
        xgmNullRender -s {};
    }
    for ( $object in $collideFX ) {
        setAttr -type "string" ($object+".popBake") "false";
    }
    print (uiRes("m_xgmPopBake.kFinishedRenderingToDataFilesInPopbakeDirectory"));
}
