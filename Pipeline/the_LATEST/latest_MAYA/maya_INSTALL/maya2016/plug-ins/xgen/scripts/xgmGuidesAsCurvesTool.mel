// Copyright (C) 1997-2013 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

/**
 * @file xgmGuidesAsCurves.mel
 * @brief Contains the code for the GuidesAsCurves tool.
 *
 * <b>CONFIDENTIAL INFORMATION: This software is the confidential and
 * proprietary information of Walt Disney Animation Studios ("WDAS").
 * This software may not be used, disclosed, reproduced or distributed
 * for any purpose without prior written authorization and license
 * from WDAS. Reproduction of any section of this software must include
 * this legend and all copyright notices.
 * Copyright Disney Enterprises, Inc. All rights reserved.</b>
 *
 * @author Patrick Witting
 * @author Stephen D. Bowline
 *
 * @version Created 12/30/04
 */


global proc xgmGuidesAsCurvesTool( string $parent )
{
    columnLayout -parent $parent;
    {
        checkBox -label (uiRes("m_xgmGuidesAsCurvesTool.kLockLength")) 
            -ann (uiRes("m_xgmGuidesAsCurvesTool.kLockLengthAnn"))
            -v 1 xgmGuidesAsCurvesToolLockLength;

        button -label (uiRes("m_xgmGuidesAsCurvesTool.kModifyAsCurves")) -w 340 
            -ann (uiRes("m_xgmGuidesAsCurvesTool.kModifyAsCurvesAnn"))
            -command "xgmGuidesAsCurvesToolCreate";

        rowLayout -nc 2 -width 340 -cw2 170 170;
        {
            button -label (uiRes("m_xgmGuidesAsCurvesTool.kAccept")) -w 170 -align "center"
                -ann (uiRes("m_xgmGuidesAsCurvesTool.kAcceptAnn"))
                -command "xgmGuidesAsCurvesToolAccept";

            button -label (uiRes("m_xgmGuidesAsCurvesTool.kCancel")) -w 170  -align "center"
                -ann (uiRes("m_xgmGuidesAsCurvesTool.kCancelAnn"))
                -command "xgmGuidesAsCurvesToolCancel";

            setParent ..;
        }
    }
}


global proc xgmGuidesAsCurvesToolCreate()
{
    int $hide = 1;
    int $lockLength = `checkBox -q -v xgmGuidesAsCurvesToolLockLength`;
    xgmCreateCurvesFromGuides $hide $lockLength;

    string $curves[] = xgmSelectedCurves( 1 );

    changeSelectMode -component;
    for ( $curve in $curves ) {
       int $last = `getAttr ( $curve + ".spans" )` + 1;
       select -add ( $curve + ".cv[" + $last + "]" );
    }
}


global proc xgmGuidesAsCurvesToolAccept()
{
    xgmSelectedCurvesToGuidesByName;
    changeSelectMode -object;
}


global proc xgmGuidesAsCurvesToolCancel()
{
    string $curves[] = xgmSelectedCurves( 1 );
    if ( $curves[0] == "" ) {
      warning( (uiRes("m_xgmGuidesAsCurvesTool.kSelectTheCurvesToCancelFirst")) );
      return;
    }

    // Restore the curves back to guides
    string $guides[] = xgmRestoreGuidesFromCurves( $curves );
    select -r $guides;
    changeSelectMode -object;
}
