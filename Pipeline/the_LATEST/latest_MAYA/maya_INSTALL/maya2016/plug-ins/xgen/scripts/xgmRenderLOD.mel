// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

/**
 * @file xgmRenderLOD.mel
 * @brief Contains the mel procedures for controlling render LOD.
 *
 * <b>CONFIDENTIAL INFORMATION: This software is the confidential and
 * proprietary information of Walt Disney Animation Studios ("WDAS").
 * This software may not be used, disclosed, reproduced or distributed
 * for any purpose without prior written authorization and license
 * from WDAS. Reproduction of any section of this software must include
 * this legend and all copyright notices.
 * Copyright Disney Enterprises, Inc. All rights reserved.</b>
 *
 * @author Thomas V Thompson II
 * @author Ying Liu
 *
 * @version Created 07/10/07
 */


/**
 * Get the appropriate pixel fade size to allow no change to the groom in
 * the current camera view. This basically sets things to start falling
 * off at the current camera settings and do nothing until then.
 *
 * @param desc  description to query
 */
global proc string xgmGrabGoalLOD( string $desc )
{
    if ( !`pluginInfo -query -loaded lumiereRendering` ) {
        warning (uiRes("m_xgmRenderLOD.kLumiereNotLoaded"));
        return "25.0";
    }
    
    float $center[];
    float $results[];
    int $index;
      
    $center[0] = `getAttr ($desc+".boundingBoxCenterX")`;
    $center[1] = `getAttr ($desc+".boundingBoxCenterY")`;
    $center[2] = `getAttr ($desc+".boundingBoxCenterZ")`;

    // Get the average width for the description
    string $pal = python("xg.palette(\""+$desc+"\")");
    float $averageWidth = python("xg.getAttr(\"averageWidth\","+
                                 "\""+$pal+"\",\""+$desc+"\")");
    
    float $camPos[];
    string $camera = `ltGetRenderCamera`;
    $camPos[0] = eval("getAttr "+$camera+".boundingBoxCenterX");
    $camPos[1] = eval("getAttr "+$camera+".boundingBoxCenterY");
    $camPos[2] = eval("getAttr "+$camera+".boundingBoxCenterZ");

    float $camDist = pow($center[0]-$camPos[0],2.0) +
                     pow($center[1]-$camPos[1],2.0) +
                     pow($center[2]-$camPos[2],2.0);
    float $focalLength = `getAttr ($camera+".focalLength")`;
    float $horizFilmAperture = `getAttr ($camera+".horizontalFilmAperture")`;
    float $camRatio = 2.0*$focalLength/25.4044/$horizFilmAperture;

    string $result = $averageWidth/2.0*2048.0/$camDist*$camRatio/0.01;
    string $buffer[];
    tokenize $result "." $buffer;
    if ( size($buffer) > 1 ) {
        $buffer[1] = `substring $buffer[1] 1 3`;
        $result = $buffer[0] + "." + $buffer[1];
    }
    return $result;
}
