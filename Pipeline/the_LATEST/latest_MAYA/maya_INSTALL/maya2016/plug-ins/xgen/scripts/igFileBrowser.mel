// Copyright (C) 1997-2013 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

/**
 * @file igFileBrowser.mel
 * @brief Contains a unified file browser for iGroom
 *
 * <b>CONFIDENTIAL INFORMATION: This software is the confidential and
 * proprietary information of Walt Disney Animation Studios ("WDAS").
 * This software may not be used, disclosed, reproduced or distributed
 * for any purpose without prior written authorization and license
 * from WDAS. Reproduction of any section of this software must include
 * this legend and all copyright notices.
 * Copyright Disney Enterprises, Inc. All rights reserved.</b>
 *
 * @author Thomas V Thompson II
 *
 * @version tthompso  07/03/07  Initial Version
 */

/**
  * This Procedure will trim a path until finds the existing path
  */
proc string getExistingPath( string $path )
{
    int $result = `filetest -d $path`;
    while(size($path)>1){
        if($result==1){
            break;
        }else{
            $path = dirname($path);//dirname will strip off one dir
            $result = `filetest -d $path`;
        }
    }
    return $path;
}


/**
 * The file browser interface. Every attribute in iGroom that requires a file
 * browser should use this procedure. This will create a single look for
 * all file/path selection.
 *
 * @param title         The title for the browser
 * @param fieldName     The maya field name to place the result into, 
 *                      if it is a list, use the index for its position
 * @param full          Flag if the result should be a full path
 */
global proc igFileBrowser( string $title, string $fieldName, int $full )
{
    // First get the initial path name from either the attribute or the field
    string $initialDir = `textFieldButtonGrp -q -text $fieldName`;
    $initialDir = igValidPath( $initialDir );

    // Get the corresponding ig path from the description.
    string $igDir = "";
    string $desc = igCurrentDescription();
    if ( $desc != "" ) {
        $igDir = igOutputDir( $desc );
    }
    // fix problem if field is blank
    if ( $initialDir == "" ) { 
        $initialDir = $igDir;
    }

	$initialDir = fromNativePath($initialDir);
    
    python("import xgenm as xgen");
    $initialDir = python("xgen.fileCleanup( \""+$initialDir+"\" )");

    // Get rid of any embedded "./" entries.
    $initialDir = `substitute "\\./" $initialDir ""`;
    $initialDir = getExistingPath($initialDir);
        
    string $result[] = `fileDialog2 -caption $title -fileMode 3 -dir $initialDir -dialogStyle 1`;
	int $len = size($result);
    if ( $len <= 0 || $result[0] == "" ) return;

	string $fileName = fromNativePath($result[0]);
    
    // set the basename to the new path.
    textFieldButtonGrp -edit -text $fileName -fcc $fieldName;
}
