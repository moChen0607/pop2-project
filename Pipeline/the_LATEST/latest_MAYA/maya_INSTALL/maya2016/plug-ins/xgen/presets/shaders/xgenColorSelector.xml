<!--
Copyright 2014 Autodesk, Inc. All rights reserved. 

Use of this software is subject to the terms of the Autodesk 
license agreement provided at the time of installation or download, 
or which otherwise accompanies this software in either electronic 
or hard copy form.
-->
<fragment  uiName="xgenColorSelector" name="xgenColorSelector" type="plumbing" class="ShadeFragment" version="1.0" feature_level="0" >
    <description>
<![CDATA[
Choose between the use of CPV colors or texture color.]]>
</description>
    <properties>
        <float4  name="vertexColor" />
        <float3  name="color" />
        <bool    name="overrideColorWithGrey" />
    </properties>
    <values>
    </values>
    <outputs>
        <float3  name="output" />
    </outputs>
    <implementation  >
    <implementation  render="OGSRenderer" language="Cg" lang_version="2.100000" >
        <function_name val="xgenColorSelector" />
        <source>
            <![CDATA[
float3 xgenColorSelector(float4 vertexColor, float3 color, bool overrideColorWithGrey) 
{
	if (vertexColor.x > 0.0f || vertexColor.y > 0.0f || vertexColor.z > 0.0f)
    return vertexColor.xyz;
    
  if (overrideColorWithGrey) 
  {
    float L0 = 0.2126f * color.x + 0.7152f * color.y + 0.0722f * color.z;
    color = float3(L0, L0, L0);
  }
  
  return color;
} 
            ]]>
        </source>
    </implementation>
    <implementation  render="OGSRenderer" language="GLSL" lang_version="3.000000" >
        <function_name val="xgenColorSelector" />
        <source>
            <![CDATA[
vec3 xgenColorSelector(vec4 vertexColor, vec3 color, bool overrideColorWithGrey) 
{
	if (vertexColor.x > 0.0f || vertexColor.y > 0.0f || vertexColor.z > 0.0f)
    return vertexColor.xyz;
    
  if (overrideColorWithGrey) 
  {
    float L0 = 0.2126 * color.x + 0.7152 * color.y + 0.0722 * color.z;
    color = vec3(L0, L0, L0);
  }
  
  return color;
} 
            ]]>
        </source>
    </implementation>	
    <implementation  render="OGSRenderer" language="HLSL" lang_version="11.000000" >
        <function_name val="xgenColorSelector" />
        <source>
            <![CDATA[
float3 xgenColorSelector(float4 vertexColor, float3 color, bool overrideColorWithGrey) 
{
	if (vertexColor.x > 0.0f || vertexColor.y > 0.0f || vertexColor.z > 0.0f)
    return vertexColor.xyz;
    
  if (overrideColorWithGrey) 
  {
    float L0 = 0.2126f * color.x + 0.7152f * color.y + 0.0722f * color.z;
    color = float3(L0, L0, L0);
  }
  
  return color;
} 
            ]]>
        </source>
    </implementation>
    <implementation  render="OGSRenderer" language="HLSL" lang_version="10.000000" >
        <function_name val="xgenColorSelector" />
        <source>
            <![CDATA[
float3 xgenColorSelector(float4 vertexColor, float3 color, bool overrideColorWithGrey) 
{
	if (vertexColor.x > 0.0f || vertexColor.y > 0.0f || vertexColor.z > 0.0f)
    return vertexColor.xyz;
    
  if (overrideColorWithGrey) 
  {
    float L0 = 0.2126f * color.x + 0.7152f * color.y + 0.0722f * color.z;
    color = float3(L0, L0, L0);
  }
  
  return color;
} 
            ]]>
        </source>
    </implementation>
    </implementation>
</fragment>
