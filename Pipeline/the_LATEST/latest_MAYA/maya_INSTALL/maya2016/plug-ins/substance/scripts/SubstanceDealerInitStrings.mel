//
// international treaties.
//

//
// international treaties.
//

//**************************************************************************/
// Copyright (c) 2009 Allegorithmic, SAS.
//**************************************************************************/

global proc SubstanceDealerInitStrings()
{
    // Register script resources

	registerPluginResource("SubstancePlugin", "kAEPanelTexture",		"Texture Settings");
	registerPluginResource("SubstancePlugin", "kAEPanelParameters",		"Substance Parameters");
	registerPluginResource("SubstancePlugin", "kAEPanelNormal",			"Normal Format");
	registerPluginResource("SubstancePlugin", "kAEPanelUV",				"UV Coordinates");
	registerPluginResource("SubstancePlugin", "kAEPanelEngine",			"Engine Settings");
	registerPluginResource("SubstancePlugin", "kAELayoutSubstance",		"SubstanceLayout");
	
    registerPluginResource("SubstancePlugin", "kAEYes",					"Yes");
	registerPluginResource("SubstancePlugin", "kAENo",					"No");
	registerPluginResource("SubstancePlugin", "kAEOk",					"Ok");
	registerPluginResource("SubstancePlugin", "kAECancel",				"Cancel");
	registerPluginResource("SubstancePlugin", "kAESelect",				"Select");
	registerPluginResource("SubstancePlugin", "kAEGraphError",			"Substance : Error, no graph selected");
	registerPluginResource("SubstancePlugin", "kAEBrowseGraph",			"Browse Substance graphs");
	registerPluginResource("SubstancePlugin", "kAEGraphs",				"Graphs");
	registerPluginResource("SubstancePlugin", "kAESubstanceArchives",	"Substance archives");
    registerPluginResource("SubstancePlugin", "kAESubstanceFiles",		"Substance files");
	registerPluginResource("SubstancePlugin", "kAEChooseSubstance",		"Choose a Substance file");
	registerPluginResource("SubstancePlugin", "kAENormalMapFormat",		"Normal map format");
	registerPluginResource("SubstancePlugin", "kAENM0",					"Direct3D (right handed)");
	registerPluginResource("SubstancePlugin", "kAENM1",					"Direct3D, X inverted");
	registerPluginResource("SubstancePlugin", "kAENM2",					"OpenGL");
	registerPluginResource("SubstancePlugin", "kAENM3",					"Direct3D, X & Y inverted");
	registerPluginResource("SubstancePlugin", "kAENM4",					"Direct3D, Z normalized[0,1]");
	registerPluginResource("SubstancePlugin", "kAENM5",					"Direct3D, X inverted & Z normalized[0,1]");
	registerPluginResource("SubstancePlugin", "kAENM6",					"Direct3D, Y inverted & Z normalized[0,1]");
	registerPluginResource("SubstancePlugin", "kAENM7",					"Direct3D, XY inverted & Z normalized[0,1]");
	registerPluginResource("SubstancePlugin", "kAESubstanceFile",		"Substance file");
	registerPluginResource("SubstancePlugin", "kAEEdit",				"Edit");
	registerPluginResource("SubstancePlugin", "kAEEditTtip",				"Edit the Substance in Substance Designer");
	registerPluginResource("SubstancePlugin", "kAEReload",				"Reload");
	registerPluginResource("SubstancePlugin", "kAEPreset",				"Preset");
	registerPluginResource("SubstancePlugin", "kAESubstanceGraph",		"Substance graph");
	registerPluginResource("SubstancePlugin", "kAEConfirm",				"Confirm");
	registerPluginResource("SubstancePlugin", "kAEMsgReloadGraph",		"This action will reset the graph and so make you lose any shading graph made with the current outputs of the node. Are you sure you want to reload the graph?");
	registerPluginResource("SubstancePlugin", "kAERelativeSize",		"Relative Texture Size");
	registerPluginResource("SubstancePlugin", "kAESizeMode",			"Texture Size Mode");
	registerPluginResource("SubstancePlugin", "kAERelative",			"Relative");
	registerPluginResource("SubstancePlugin", "kAEAbsolute",			"Absolute");
	registerPluginResource("SubstancePlugin", "kAEEngineFilter",		"Substance engines(*.dll)");
	registerPluginResource("SubstancePlugin", "kAEChooseEngine",		"Choose a Substance Engine");
	registerPluginResource("SubstancePlugin", "kAEEngine",				"Engine");
	registerPluginResource("SubstancePlugin", "kAEGlobalWidth",			"Global texture width");
	registerPluginResource("SubstancePlugin", "kAEGlobalHeight",		"Global texture height");
	registerPluginResource("SubstancePlugin", "kAEGlobalScale",			"Edition mode scale");
	registerPluginResource("SubstancePlugin", "kAERelativeWidth",		"Relative width");
	registerPluginResource("SubstancePlugin", "kAERelativeHeight",		"Relative height");
	registerPluginResource("SubstancePlugin", "kAEAbsoluteWidth",		"Absolute width");
	registerPluginResource("SubstancePlugin", "kAEAbsoluteHeight",		"Absolute height");
	registerPluginResource("SubstancePlugin", "kAEAbsoluteSizes",		"Absolute sizes");
	registerPluginResource("SubstancePlugin", "kAELockAR",				"Lock aspect ratio");
	registerPluginResource("SubstancePlugin", "kAEOutputWidth",			"Output width");
	registerPluginResource("SubstancePlugin", "kAEOutputHeight",		"Output height");
	registerPluginResource("SubstancePlugin", "kAECreateShaderNetwork",	"Create shader network");
	registerPluginResource("SubstancePlugin", "kAEExportImages",		"Export images to disk");
	registerPluginResource("SubstancePlugin", "kAESBSBake",				"Substance Bake to Texture");
	registerPluginResource("SubstancePlugin", "kAESBSPath",				"Path");
	registerPluginResource("SubstancePlugin", "kAESBSImageFormat",		"Image Format");
	registerPluginResource("SubstancePlugin", "kAEExport",				"Export");
	registerPluginResource("SubstancePlugin", "kAEClose",					"Close");
	registerPluginResource("SubstancePlugin", "kAESubstancePath",			"System path for substance image files");
	registerPluginResource("SubstancePlugin", "kAESBSBakePath",			"Select a path to export Substance outputs as images");
	registerPluginResource("SubstancePlugin", "kAESBSBakeFailed",			"Substance: Export To Disk failed, no outputs active.");
	registerPluginResource("SubstancePlugin", "kAESBSBakingIntoPathA",	"Substance : baking substance named : ");
	registerPluginResource("SubstancePlugin", "kAESBSBakingIntoPathB",	" into the path : \"");
	registerPluginResource("SubstancePlugin", "kAESBSBakingIntoPathC",	"\" at resolution : ");
	registerPluginResource("SubstancePlugin", "kAEAutoBaking",			"Automatic Baking");
	registerPluginResource("SubstancePlugin", "kAEAutoBakeFormat",		"Format");
	registerPluginResource("SubstancePlugin", "kAEAutoBakeConnections",	"Automatic connections");
	registerPluginResource("SubstancePlugin", "kAEOpacityTtip",			" to the transparency channel of a shading network.");
	registerPluginResource("SubstancePlugin", "kAEDiffuseTtip", 			" to the color channel of a shading network.");
	registerPluginResource("SubstancePlugin", "kAEEmissiveTtip",			" to the incandescence channel of a shading network.");
	registerPluginResource("SubstancePlugin", "kAESpecularTtip",			" to the specularColor channel of a shading network.");
	registerPluginResource("SubstancePlugin", "kAENormalTtip",			" to the normalCamera channel of a shading network.");
	registerPluginResource("SubstancePlugin", "kAEBumpTtip",				" to the normalCamera channel of a shading network.");
	registerPluginResource("SubstancePlugin", "kAEDisplacementTtip",		" to the displacementShader channel of a shading group.");
	registerPluginResource("SubstancePlugin", "kAEHeightTtip",			" to the displacementShader channel of a shading group.");
	registerPluginResource("SubstancePlugin", "kAEGlossTtip",				" to the roughness channel of a shading network.");
	registerPluginResource("SubstancePlugin", "kAEGlossinessTtip",		" to the roughness channel of a shading network.");
	registerPluginResource("SubstancePlugin", "kAEChannelTtipDefault",	" that can be connected to a shading network.");
	registerPluginResource("SubstancePlugin", "kAEHeightMessageA",		"Substance Height Output node is created, but connection to attribute:\"");
	registerPluginResource("SubstancePlugin", "kAEHeightMessageB",		".displacementShader\" could not be made - previous connections exist");
	registerPluginResource("SubstancePlugin", "kAENormalMessageA",		"Substance Normal Output node is created, but connection to attribute : \"");
	registerPluginResource("SubstancePlugin", "kAENormalMessageB",		".normalCamera\" could not be made - previous connections exist");
	registerPluginResource("SubstancePlugin", "kAEDisplaceMessageA",		"Substance Displacement Output node is created, but connection to attribute : \"");
	registerPluginResource("SubstancePlugin", "kAEDisplaceMessageB",		".displacementShader\" could not be made - previous connections exist");
	registerPluginResource("SubstancePlugin", "kAETtip1",					"This button creates a ");
	registerPluginResource("SubstancePlugin", "kAETtip2",					" output node ");
	registerPluginResource("SubstancePlugin", "kAEConnectEachAnn",		"Connect each output to a file node in order to render with 3rd party renderer");
	registerPluginResource("SubstancePlugin", "kAEBakedBitmapsAnn",		"Baked bitmaps file format");
	
    // Load any localized resources 
    
    loadPluginLanguageResources("SubstancePlugin", "substanceDealer.pres.mel");
}