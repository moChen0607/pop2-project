// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

global proc updateEnableAdaptivity( string $biNode ) 
{
	string $bcs[] = `listConnections -p on ($biNode + ".AdaptiveMeshes[0]" )`;
	$enableAdaptivity = false;
	if ( size($bcs) > 0 ) $enableAdaptivity = true;
	setAttr ($biNode + ".adaptive") $enableAdaptivity;
}


global proc string[] addBifrostAdaptiveMesh( string $adaptivemeshes )
{
	if(!`exists addBifrostCollider`) {
		// shared bifrost input  scripts here
		source "addBifrostCollider.mel";
	}

	string $result[];
	string $biNodes[] = getBifrostInputs("mesh");
	if(size($biNodes) >= 2) {
		if (!`attributeExists "AdaptiveMeshes" $biNodes[0]`) {
			error (uiRes("m_addBifrostAdaptiveMesh.kAdaptiveMeshAeroOnly"));
			return $result;
		}
		int $i;
		for( $i = 1; $i < size($biNodes); $i++ ){
			addBifrostInput($biNodes[0], $biNodes[$i], $adaptivemeshes );
		}
		updateEnableAdaptivity( $biNodes[0] );
	} 
	else {
		error (uiRes("m_addBifrostAdaptiveMesh.kCannotAddAdaptiveMesh"));
	}
	return $result;
}

