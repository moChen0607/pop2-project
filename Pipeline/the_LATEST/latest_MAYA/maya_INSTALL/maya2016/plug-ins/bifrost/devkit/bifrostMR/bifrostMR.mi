# guard against multiple inclusions
$ifndef "bifrost_mi_included"
set "bifrost_mi_included" "true"

## Copyright 2013 Autodesk, Inc. All rights reserved.
## This computer source code and related instructions and comments are the
## unpublished confidential and proprietary information of Autodesk, Inc. and
## are protected under applicable copyright and trade secret law. They may not
## be disclosed to, copied or used by any third party without the prior written
## consent of Autodesk, Inc.

# depends on these libraries

# bifrost isosurface volume shader
declare shader color "bifrost_isosurface_volume" (
    string "object", # bifrost object name
    string "file",   # bifrost cache file. Will use it when a bifrost sim isnt in memory
    string "shape",  # bifrost shape name
    string "channel",# bifrost channel name
    scalar "threshold",   # threshold distance at which to create surface
    material "material",  # material for the isosurface.
    scalar "minStepSize", # minimum distance between samples along ray
    scalar "maxStepSize", # maximum distance between samples
    scalar "maxSteps",    # maximum steps allows per rayspan through volume
    scalar "shadowBias",  # distance hit point moved along surface normal before shader invoked
    boolean "computeRedistance", # if true then compute 
    geometry "instance"     # Keep track of where the instance data is applied.
    )
    version 1
    apply volume
    #: nodeid 1476395832
end declare

# bifrost isosurface geometry shader
# Creates a box with the isosurface volume shader applied to it.
# The material applied on the instance is transfered to the volume material input.
# All other parameters are transfered as is.
declare shader geometry "bifrost_isosurface_geo" (
    string "object", # bifrost object name
    string "file",   # bifrost cache file. Will use it when a bifrost sim isnt in memory 
    scalar "frame",  # bifrost cache frame.
    scalar "threshold",     # threshold distance at which to create surface
    scalar "minStepSize",   # minimum distance between samples along ray
    scalar "maxStepSize",   # maximum distance between samples
    scalar "maxSteps",      # maximum steps allows per rayspan through volume
    scalar "shadowBias",    # distance hit point moved along surface normal before shader invoked
    boolean "computeRedistance", # if true then compute 
    integer "mode", # 0 for density volume and 1 for particl
    scalar "particleSize",  # particle size
    boolean "faceCamera",   # normal is always facing the camera
    scalar "sharpenVoxels"  # sharpen voxels strength
    )
    version 1
    apply geometry
    #: nodeid 1476395833
end declare

# bifrost particle geometry shader
# Creates a particle map container and apply the instance material to it.
declare shader geometry "bifrost_particle_geo" (
    string "object",                                    # bifrost object name
    string "file",                                      # bifrost cache file. Will use it when a bifrost sim isnt in memory 
    scalar "frame",                                     # bifrost cache frame.
    scalar "size"               default 0.1,            # particle size
    color "color"               default 0.5 0.5 0.5,    # particle color
    scalar "fps"                default 24.0,           # frame per second
    boolean "motionBlurEnable"  default off,            # motion blur on/off
    scalar "shutterOpen"        default 0.0,            # shutter open time
    scalar "shutterClose"       default 0.0             # shutter close time
    )
    version 1
    apply geometry
    #: nodeid 1476395843
end declare

# bifrost particle volume shader
declare shader color "bifrost_particle_volume" (
    color  "color" default 1.0 1.0 1.0,
    color  "transparency" default 0.0 0.0 0.0,
    scalar "density" default 1.0,
    color  "blobMap" default 1.0 1.0 1.0
    )
    version 1
    apply volume
    #: nodeid 1476395853
end declare

# bifrost volume geometry shader
# Creates a box and apply the material from the instance on it.
declare shader geometry "bifrost_volume_geo" (
    string "object", # bifrost object name
    string "file",   # bifrost cache file. Will use it when a bifrost sim isnt in memory 
    scalar "frame"   # bifrost cache frame.
    )
    version 1
    apply geometry
    #: nodeid 1476395834
end declare

# bifrost swatch volume geometry shader
# Create a box for the swatch preview
declare shader geometry "bifrost_volume_swatch_geo" (
    string "file",   # Swatch BIF cache file path
    scalar "frame"   # Swatch BIF cache frame number
    )
    version 1
    apply geometry
    #: nodeid 1476395852
end declare

# bifrost channel lookup shaders
declare shader color "bifrost_color_channel" (
    color	"default", # default
    string	"channel" # bifrost channel name
    )
    version 1
    apply texture
    #: nodeid 1476395835
end declare

declare shader scalar "bifrost_scalar_channel" (
    scalar	"default", # default
    string	"channel" # bifrost channel name
    )
    version 1
    apply texture
    #: nodeid 1476395836
end declare

declare shader vector "bifrost_scalar_channel_grad" (
    vector	"default", # default
    string	"channel" # bifrost channel name
    )
    version 1
    apply texture
    #: nodeid 1476395845
end declare

declare shader vector "bifrost_vector_channel" (
    vector	"default", # default
    string	"channel" # bifrost channel name
    )
    version 1
    apply texture
    #: nodeid 1476395837
end declare

# bifrost density volume shader
declare shader color "bifrost_density_volume" (
    scalar "minStepSize",  # minimum distance between samples along ray
    scalar "maxStepSize",  # maximum distance between samples along ray
    integer "maxSteps",  # maximum steps allows per rayspan through volume
    scalar "density",   # density callback, can plug a scalar channel directly
    scalar "density_threshold",   # density at which absorption happens
    scalar "density_scale",   # density scale factor
    boolean "absorb_density",    # absorption color is multplied by density
    boolean "emit_density",    # emit color is multplied by density
    boolean "scatter_density",    # scatter color is multplied by density
    color "absorb",    # absorption color per unit
    color "emit",    # emissive color per unit
    color "scatter",    # scatter color per unit
	color "in_scatter",  # input color from scattering
    scalar "scatter_density_cutoff" default 0.0, # scattering will occur only if the density is above the cutoff value
	scalar "shadow_opacity_scale", # scale transparency for shadow rays
	scalar "colored_opacity", # do physically correct coloring of opacity based on scatter and absorb colors
    vector "displacement", # Apply 3d noise to the density sampling position.
    boolean "light_absorb",    # light rays are absorbed when passing in the volume
    scalar "lightStepSize",  # min distance between samples along a light ray
    integer "lightMaxSteps",  # maximum steps allows per light rayspan through volume
    boolean "shadow_absorb",    # shadow rays are absorbed when passing in the volume
    scalar "shadowStepSize",  # min distance between samples along a shadow ray
    integer "shadowMaxSteps",  # maximum steps allows per shadow rayspan through volume
	boolean "depth_jitter"    # randomly offset depth of sample to avoid banding artifacts
    )
    version 1
    apply volume
    #: nodeid 1476395838
end declare

# bifrost simple volume scatter callback 
declare shader color "bifrost_simple_scatter" (
    color "scatter" default 0.5 0.5 0.5,
    scalar "directionality" default 0.0, # 0 is isotropic, -1 scatters backlight and 1.0 does front light scattering
    )
    version 1
    apply texture
    #: nodeid 1476395839
end declare

# Remap 
declare shader color "bifrost_color_remap" (
    color "input" default 0.5 0.5 0.5,
    scalar "intensity" default 1.0,
    scalar "offset" default 0.0
    )
    version 1
    apply texture
    #: nodeid 1476395841
end declare

# Remap 
declare shader scalar "bifrost_scalar_remap" (
    scalar "input" default 0.5,
    scalar "intensity" default 1.0,
    scalar "offset" default 0.0
    )
    version 1
    apply texture
    #: nodeid 1476395842
end declare

# bifrost isosurface particle volume shader
declare shader color "bifrost_isosurface_particle_volume" (
    string "object", # bifrost object name
    string	"file",   # bifrost cache file. Will use it when a bifrost sim isnt in memory 
    scalar "threshold", 	  # threshold distance at which to create surface
    material "material",  # material for the isosurface.
    scalar "minStepSize",   # minimum distance between samples along ray
    scalar "maxStepSize",   # maximum distance between samples
    scalar "maxSteps",	  # maximum steps allows per rayspan through volume
    scalar "shadowBias",	  # distance hit point moved along surface normal before shader invoked
    boolean "computeRedistance", # if true then compute 
    geometry "instance",   # Keep track of where the instance data is applied.
    scalar "particleSize", 	  # particle size
    boolean "faceCamera" 	  # normal is always facing the camera
    )
    version 1
    apply volume
    #: nodeid 1476395844
end declare

# Simple color conditionnal shader
declare shader color "bifrost_color_if" (
    boolean "input",
    color "if_true",
    color "if_false"
    )
    version 1
    #: nodeid 1476395847
end declare

# Simple scalar conditionnal shader
declare shader scalar "bifrost_scalar_if" (
    boolean "input",
    scalar "if_true",
    scalar "if_false"
    )
    version 1
    #: nodeid 1476395848
end declare

# Mixes vorticity and magnitude of velocity
declare shader scalar "bifrost_mix_vorticity_velocities" (
    scalar "vorticity",
    scalar "vorticity_factor",
    scalar "velocity_u",
    scalar "velocity_v",
    scalar "velocity_w",
    scalar "velocity_factor"
    )
    version 1
    #: nodeid 1476395849
end declare

# Simple flat illumination shader to do foam and have shadows work on it.
declare shader
    color "bifrost_illum_flat" (
        color "color",
        scalar "weight",
        integer "mode",      # light selection mode 0,1,2,4
        array light "lights"
    )
    version 1
    apply material
    #: nodeid 1476395850
end declare

$endif


