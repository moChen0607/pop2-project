{
    "header": {
        "metadata": [
            {
                "metaName": "adskGraphlibVersion",
                "metaType": "string",
                "metaValue": "1.0"
            },
            {
                "metaName": "adskFileFormatVersion",
                "metaValue": "100L"
            }
        ]
    },
    "dependencies": [
        {
            "uri": "file:///getFoamVelocity.json"
        },
        {
            "uri": "file:///getFoamComponent.json"
        },
        {
            "uri": "file:///createFoamComponent.json"
        },
        {
            "uri": "file:///createFoamObject.json"
        },
        {
            "uri": "file:///dissipatePointDensity.json"
        },
        {
            "uri": "file:///getDt.json"
        },
        {
            "uri": "file:///getFoamDensity.json"
        },
        {
            "uri": "file:///getLiquidChannels.json"
        },
        {
            "uri": "file:///getFoamChannels.json"
        },
        {
            "uri": "file:///getFoamPosition.json"
        },
        {
            "uri": "file:///emitSplash.json"
        },
        {
            "uri": "file:///syncComponentAndReblock.json"
        },
        {
            "uri": "file:///getLiquidDistance.json"
        },
        {
            "uri": "file:///killPoint.json"
        },
        {
            "uri": "file:///preserveVolume.json"
        },
        {
            "uri": "file:///projectToSurface.json"
        },
        {
            "uri": "file:///transportSplash.json"
        },
        {
            "uri": "file:///updatePointPosition.json"
        },
        {
            "uri": "file:///cacheFoamToScratch.json"
        },
        {
            "uri": "file:///scratchCacheEnable.json"
        },
        {
            "uri": "file:///basenodes.json"
        },
        {
            "uri": "file:///getFoamVelocity.json"
        },
        {
            "uri": "file:///getFoamComponent.json"
        },
        {
            "uri": "file:///createFoamComponent.json"
        },
        {
            "uri": "file:///createFoamObject.json"
        },
        {
            "uri": "file:///dissipatePointDensity.json"
        },
        {
            "uri": "file:///getDt.json"
        },
        {
            "uri": "file:///getFoamDensity.json"
        },
        {
            "uri": "file:///getLiquidChannels.json"
        },
        {
            "uri": "file:///getFoamChannels.json"
        },
        {
            "uri": "file:///getFoamPosition.json"
        },
        {
            "uri": "file:///emitSplash.json"
        },
        {
            "uri": "file:///syncComponentAndReblock.json"
        },
        {
            "uri": "file:///getLiquidDistance.json"
        },
        {
            "uri": "file:///killPoint.json"
        },
        {
            "uri": "file:///preserveVolume.json"
        },
        {
            "uri": "file:///projectToSurface.json"
        },
        {
            "uri": "file:///transportSplash.json"
        },
        {
            "uri": "file:///updatePointPosition.json"
        },
        {
            "uri": "file:///cacheFoamToScratch.json"
        },
        {
            "uri": "file:///scratchCacheEnable.json"
        },
        {
            "uri": "file:///basenodes.json"
        }
    ],
    "types": [],
    "operators": [],
    "compounds": [
        {
            "name": "Bifrost::Nodes::Misc::solveFoam",
            "ports": [
                {
                    "portName": "liquidObject",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Object"
                },
                {
                    "portName": "solidObject",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Object"
                },
                {
                    "portName": "emissionRate",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "minLiquidSpeed",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "minLiquidChurn",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "minLiquidCurvature",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "minLiquidDepth",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "maxLiquidDepth",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "inheritLiquidVelocity",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "emitFlatnessToSurface",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "dissipationRate",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "killDensityThreshold",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "buoyancy",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "collideKillDepth",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "windX",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "windZ",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "surfaceOffset",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "snapToSurface",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "pointRadius",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "preserveVolume",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "gravity",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "maxSolidDepth",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "foamObject",
                    "portDirection": "output",
                    "portType": "Bifrost::Types::Object"
                },
                {
                    "portName": "cameraAdaptivity",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "cameraMatrix",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Mat44FloatArray"
                },
                {
                    "portName": "clipToFrustum",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "fov",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "aspect",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "cameraBufferDistance",
                    "portDirection": "input",
                    "portType": "float"
                }
            ],
            "compoundNodes": [
                {
                    "nodeName": "createFoamObject",
                    "nodeType": "Bifrost::Nodes::_private::createFoamObject"
                },
                {
                    "nodeName": "getFoamObjectName",
                    "nodeType": "Bifrost::Nodes::_privNames::getFoamObjectName"
                },
                {
                    "nodeName": "if",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "dissipatePointDensity",
                    "nodeType": "Bifrost::_private::dissipatePointDensity"
                },
                {
                    "nodeName": "killPoint",
                    "nodeType": "Bifrost::_private::killPoint"
                },
                {
                    "nodeName": "transportSplash",
                    "nodeType": "Bifrost::_private::transportSplash"
                },
                {
                    "nodeName": "updatePointPosition",
                    "nodeType": "Bifrost::_private::updatePointPosition"
                },
                {
                    "nodeName": "preserveVolume",
                    "nodeType": "Bifrost::_private::preserveVolume"
                },
                {
                    "nodeName": "projectToSurface",
                    "nodeType": "Bifrost::_private::projectToSurface"
                },
                {
                    "nodeName": "emitSplash",
                    "nodeType": "Bifrost::_private::emitSplash"
                }
            ],
            "connections": [
                {
                    "source": ".liquidObject",
                    "target": "createFoamObject.liquidObject"
                },
                {
                    "source": ".snapToSurface",
                    "target": "if.condition"
                },
                {
                    "source": ".dissipationRate",
                    "target": "dissipatePointDensity.dissipationRate"
                },
                {
                    "source": ".liquidObject",
                    "target": "transportSplash.liquidObject"
                },
                {
                    "source": ".solidObject",
                    "target": "transportSplash.collideObject"
                },
                {
                    "source": ".gravity",
                    "target": "transportSplash.gravity"
                },
                {
                    "source": ".buoyancy",
                    "target": "transportSplash.buoyancy"
                },
                {
                    "source": ".collideKillDepth",
                    "target": "transportSplash.collideKillDepth"
                },
                {
                    "source": ".windX",
                    "target": "transportSplash.windX"
                },
                {
                    "source": ".windZ",
                    "target": "transportSplash.windZ"
                },
                {
                    "source": ".surfaceOffset",
                    "target": "transportSplash.offset"
                },
                {
                    "source": ".pointRadius",
                    "target": "preserveVolume.radius"
                },
                {
                    "source": ".preserveVolume",
                    "target": "preserveVolume.magnitude"
                },
                {
                    "source": ".liquidObject",
                    "target": "projectToSurface.liquidObject"
                },
                {
                    "source": ".surfaceOffset",
                    "target": "projectToSurface.offset"
                },
                {
                    "source": ".liquidObject",
                    "target": "emitSplash.liquidObject"
                },
                {
                    "source": ".solidObject",
                    "target": "emitSplash.solidsObject"
                },
                {
                    "source": ".emissionRate",
                    "target": "emitSplash.rate"
                },
                {
                    "source": ".minLiquidSpeed",
                    "target": "emitSplash.minSpeed"
                },
                {
                    "source": ".minLiquidChurn",
                    "target": "emitSplash.minChurn"
                },
                {
                    "source": ".minLiquidCurvature",
                    "target": "emitSplash.minCurvature"
                },
                {
                    "source": ".minLiquidDepth",
                    "target": "emitSplash.minLiquidDepth"
                },
                {
                    "source": ".maxLiquidDepth",
                    "target": "emitSplash.maxLiquidDepth"
                },
                {
                    "source": ".inheritLiquidVelocity",
                    "target": "emitSplash.inheritVelocity"
                },
                {
                    "source": ".maxSolidDepth",
                    "target": "emitSplash.maxSolidDepth"
                },
                {
                    "source": ".emitFlatnessToSurface",
                    "target": "emitSplash.emitFlatness"
                },
                {
                    "source": ".surfaceOffset",
                    "target": "emitSplash.offset"
                },
                {
                    "source": ".killDensityThreshold",
                    "target": "killPoint.threshold"
                },
                {
                    "source": "if.output",
                    "target": ".foamObject"
                },
                {
                    "source": ".cameraAdaptivity",
                    "target": "emitSplash.cameraAdaptivity"
                },
                {
                    "source": ".cameraMatrix",
                    "target": "emitSplash.cameraMatrix"
                },
                {
                    "source": ".clipToFrustum",
                    "target": "emitSplash.clipToFrustum"
                },
                {
                    "source": ".fov",
                    "target": "emitSplash.fov"
                },
                {
                    "source": ".aspect",
                    "target": "emitSplash.aspect"
                },
                {
                    "source": ".cameraBufferDistance",
                    "target": "emitSplash.cameraBufferDistance"
                },
                {
                    "source": "getFoamObjectName.value",
                    "target": "createFoamObject.foamName"
                },
                {
                    "source": "createFoamObject.object",
                    "target": "dissipatePointDensity.object"
                },
                {
                    "source": "preserveVolume.value",
                    "target": "if.falseCase"
                },
                {
                    "source": "projectToSurface.value",
                    "target": "if.trueCase"
                },
                {
                    "source": "dissipatePointDensity.value",
                    "target": "killPoint.object"
                },
                {
                    "source": "killPoint.value",
                    "target": "transportSplash.object"
                },
                {
                    "source": "transportSplash.value",
                    "target": "updatePointPosition.object"
                },
                {
                    "source": "updatePointPosition.value",
                    "target": "emitSplash.object"
                },
                {
                    "source": "preserveVolume.value",
                    "target": "projectToSurface.object"
                },
                {
                    "source": "emitSplash.value",
                    "target": "preserveVolume.object"
                }
            ],
            "values": []
        }
    ]
}