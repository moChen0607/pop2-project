{
    "header": {
        "metadata": [
            {
                "metaName": "adskGraphlibVersion",
                "metaType": "string",
                "metaValue": "1.0"
            },
            {
                "metaName": "adskFileFormatVersion",
                "metaValue": "100L"
            }
        ]
    },
    "dependencies": [
        {
            "uri": "file:///getDt.json"
        },
        {
            "uri": "file:///getFrame.json"
        },
        {
            "uri": "file:///copyVelocityToPoint.json"
        },
        {
            "uri": "file:///initSim.json"
        },
        {
            "uri": "file:///isAdaptive.json"
        },
        {
            "uri": "file:///getSolidsDistance.json"
        },
        {
            "uri": "file:///addSurfacePressure.json"
        },
        {
            "uri": "file:///deleteSurfacePressure.json"
        },
        {
            "uri": "file:///deleteCollocatedFlip.json"
        },
        {
            "uri": "file:///getLiquidDistance.json"
        },
        {
            "uri": "file:///computePointToLevelset.json"
        },
        {
            "uri": "file:///createVoxelObject.json"
        },
        {
            "uri": "file:///voxelizeMeshes.json"
        },
        {
            "uri": "file:///voxelizeAccelerators.json"
        },
        {
            "uri": "file:///applyForces.json"
        },
        {
            "uri": "file:///transportLiquid.json"
        },
        {
            "uri": "file:///basenodes.json"
        },
        {
            "uri": "file:///getDt.json"
        },
        {
            "uri": "file:///getFrame.json"
        },
        {
            "uri": "file:///copyVelocityToPoint.json"
        },
        {
            "uri": "file:///initSim.json"
        },
        {
            "uri": "file:///isAdaptive.json"
        },
        {
            "uri": "file:///getSolidsDistance.json"
        },
        {
            "uri": "file:///addSurfacePressure.json"
        },
        {
            "uri": "file:///deleteSurfacePressure.json"
        },
        {
            "uri": "file:///deleteCollocatedFlip.json"
        },
        {
            "uri": "file:///getLiquidDistance.json"
        },
        {
            "uri": "file:///computePointToLevelset.json"
        },
        {
            "uri": "file:///createVoxelObject.json"
        },
        {
            "uri": "file:///voxelizeMeshes.json"
        },
        {
            "uri": "file:///voxelizeAccelerators.json"
        },
        {
            "uri": "file:///applyForces.json"
        },
        {
            "uri": "file:///transportLiquid.json"
        },
        {
            "uri": "file:///basenodes.json"
        }
    ],
    "types": [],
    "operators": [],
    "compounds": [
        {
            "name": "Bifrost::Nodes::Misc::solveLiquid",
            "ports": [
                {
                    "portName": "Emitters",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::IOMeshArray"
                },
                {
                    "portName": "Colliders",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::IOMeshArray"
                },
                {
                    "portName": "Accelerators",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::IOMeshArray"
                },
                {
                    "portName": "masterVoxelSize",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "gravityMagnitude",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "gravityDirection",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Vec3Float"
                },
                {
                    "portName": "solidVoxelScale",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "forceVoxelScale",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "transportStepAdaptivity",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "transportTimeScale",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "minSteps",
                    "portDirection": "input",
                    "portType": "int"
                },
                {
                    "portName": "maxSteps",
                    "portDirection": "input",
                    "portType": "int"
                },
                {
                    "portName": "dropletThreshold",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "dropletMergeBackDepth",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "surfaceBandWidth",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "interiorPointDensity",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "surfacePointDensity",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "killPlanes",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Mat44FloatArray"
                },
                {
                    "portName": "PIC",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "viscosityMult",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "Liquid",
                    "portDirection": "output",
                    "portType": "Bifrost::Types::Object"
                },
                {
                    "portName": "dynamicSurfaceTension",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "vorticityDecay",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "vorticityMul",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "vorticityMax",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "Solid",
                    "portDirection": "output",
                    "portType": "Bifrost::Types::Object"
                },
                {
                    "portName": "surfaceTensionEnable",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "vorticityEnable",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "simulationCacheFilename",
                    "portDirection": "input",
                    "portType": "string"
                },
                {
                    "portName": "simulationCachePath",
                    "portDirection": "input",
                    "portType": "string"
                },
                {
                    "portName": "enableGuiding",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "computeGuideFromHighResLiquid",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "minSimulationDepth",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "guideVoxelScale",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "reseedPointDensity",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "reseedGuideOverlap",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "reseedLiquidOverlap",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "Guides",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::IOMeshArray"
                },
                {
                    "portName": "minReseedAirDistance",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "computeGuideFromSimulationCache",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "computeGuideFromMesh",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "bboxMin",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Vec3Float"
                },
                {
                    "portName": "bboxMax",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Vec3Float"
                },
                {
                    "portName": "bboxTransform",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Mat44Float"
                },
                {
                    "portName": "deleteExceedingPoints",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "loopingCondition",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "outLoopingCondition",
                    "portDirection": "output",
                    "portType": "bool"
                }
            ],
            "compounds": [
                {
                    "name": "computeFinalGuideAndReseed",
                    "ports": [
                        {
                            "portName": "liquidObject",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::Object"
                        },
                        {
                            "portName": "guideObject",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::Object"
                        },
                        {
                            "portName": "minSimulationDepth",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "computeGuideFromHighResLiquid",
                            "portDirection": "input",
                            "portType": "bool"
                        },
                        {
                            "portName": "enableGuiding",
                            "portDirection": "input",
                            "portType": "bool"
                        },
                        {
                            "portName": "solidsObject",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::Object"
                        },
                        {
                            "portName": "pointDensity",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "outLiquidObject",
                            "portDirection": "output",
                            "portType": "Bifrost::Types::Object"
                        },
                        {
                            "portName": "outSolidsObject",
                            "portDirection": "output",
                            "portType": "Bifrost::Types::Object"
                        },
                        {
                            "portName": "reseedGuideOverlap",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "reseedLiquidOverlap",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "minAirPocketDistance",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "minGapDistance",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "minReseedAirDistance",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "outGuideObject",
                            "portDirection": "output",
                            "portType": "Bifrost::Types::Object"
                        }
                    ],
                    "compoundNodes": [
                        {
                            "nodeName": "getFrame1",
                            "nodeType": "Bifrost::Nodes::Misc::getFrame"
                        },
                        {
                            "nodeName": "getLiquidVoxelComponent",
                            "nodeType": "Bifrost::Nodes::Component::getVoxelComponent"
                        },
                        {
                            "nodeName": "getSolidsVoxelComponent",
                            "nodeType": "Bifrost::Nodes::Component::getVoxelComponent"
                        },
                        {
                            "nodeName": "getLiquidVoxelComponentName",
                            "nodeType": "Bifrost::Nodes::_privNames::getVoxelComponentName"
                        },
                        {
                            "nodeName": "getSolidsVoxelComponentName",
                            "nodeType": "Bifrost::Nodes::_privNames::getVoxelComponentName"
                        },
                        {
                            "nodeName": "isAdaptive3",
                            "nodeType": "Bifrost::Nodes::Misc::isAdaptive"
                        },
                        {
                            "nodeName": "computeFinalGuide",
                            "nodeType": "Bifrost::Nodes::_incComponent::computeFinalGuide"
                        },
                        {
                            "nodeName": "guideReseed",
                            "nodeType": "Bifrost::Nodes::_incComponent::guideReseed"
                        },
                        {
                            "nodeName": "getLiquidPointComponentName",
                            "nodeType": "Bifrost::Nodes::_privNames::getPointComponentName"
                        },
                        {
                            "nodeName": "getLiquidPointComponent",
                            "nodeType": "Bifrost::Nodes::Component::getPointComponent"
                        },
                        {
                            "nodeName": "getGuideVoxelComponent",
                            "nodeType": "Bifrost::Nodes::Component::getVoxelComponent"
                        },
                        {
                            "nodeName": "getGuideVoxelComponentName",
                            "nodeType": "Bifrost::Nodes::_privNames::getVoxelComponentName"
                        },
                        {
                            "nodeName": "syncGuideObject",
                            "nodeType": "Bifrost::Nodes::Object::syncFlow"
                        },
                        {
                            "nodeName": "syncLiquidVoxelComponent",
                            "nodeType": "Bifrost::Nodes::Object::syncFlow"
                        },
                        {
                            "nodeName": "syncLiquidPointComponent",
                            "nodeType": "Bifrost::Nodes::Object::syncFlow"
                        },
                        {
                            "nodeName": "syncSolidsObject",
                            "nodeType": "Bifrost::Nodes::Object::syncFlow"
                        }
                    ],
                    "connections": [
                        {
                            "source": ".liquidObject",
                            "target": "getLiquidVoxelComponent.object"
                        },
                        {
                            "source": ".liquidObject",
                            "target": "getLiquidVoxelComponentName.object"
                        },
                        {
                            "source": ".solidsObject",
                            "target": "getSolidsVoxelComponent.object"
                        },
                        {
                            "source": ".solidsObject",
                            "target": "getSolidsVoxelComponentName.object"
                        },
                        {
                            "source": ".minSimulationDepth",
                            "target": "computeFinalGuide.minSimulationDepth"
                        },
                        {
                            "source": ".enableGuiding",
                            "target": "computeFinalGuide.enableGuiding"
                        },
                        {
                            "source": ".liquidObject",
                            "target": "getLiquidPointComponentName.object"
                        },
                        {
                            "source": ".liquidObject",
                            "target": "getLiquidPointComponent.object"
                        },
                        {
                            "source": ".enableGuiding",
                            "target": "guideReseed.enableGuiding"
                        },
                        {
                            "source": ".computeGuideFromHighResLiquid",
                            "target": "guideReseed.computeGuideFromHighResLiquid"
                        },
                        {
                            "source": ".pointDensity",
                            "target": "guideReseed.pointDensity"
                        },
                        {
                            "source": ".guideObject",
                            "target": "getGuideVoxelComponent.object"
                        },
                        {
                            "source": ".guideObject",
                            "target": "getGuideVoxelComponentName.object"
                        },
                        {
                            "source": ".computeGuideFromHighResLiquid",
                            "target": "computeFinalGuide.computeGuideFromHighResLiquid"
                        },
                        {
                            "source": ".guideObject",
                            "target": "syncGuideObject.object"
                        },
                        {
                            "source": "syncGuideObject.value",
                            "target": ".outGuideObject"
                        },
                        {
                            "source": ".liquidObject",
                            "target": "syncLiquidVoxelComponent.object"
                        },
                        {
                            "source": "syncLiquidPointComponent.value",
                            "target": ".outLiquidObject"
                        },
                        {
                            "source": ".solidsObject",
                            "target": "syncSolidsObject.object"
                        },
                        {
                            "source": "syncSolidsObject.value",
                            "target": ".outSolidsObject"
                        },
                        {
                            "source": ".reseedGuideOverlap",
                            "target": "guideReseed.reseedGuideOverlap"
                        },
                        {
                            "source": ".reseedLiquidOverlap",
                            "target": "guideReseed.reseedLiquidOverlap"
                        },
                        {
                            "source": ".minAirPocketDistance",
                            "target": "computeFinalGuide.minAirPocketDistance"
                        },
                        {
                            "source": ".minGapDistance",
                            "target": "computeFinalGuide.minGapDistance"
                        },
                        {
                            "source": ".minReseedAirDistance",
                            "target": "guideReseed.minReseedAirDistance"
                        },
                        {
                            "source": "getFrame1.value",
                            "target": "guideReseed.frame"
                        },
                        {
                            "source": "getLiquidVoxelComponentName.value",
                            "target": "getLiquidVoxelComponent.name"
                        },
                        {
                            "source": "getLiquidVoxelComponent.value",
                            "target": "computeFinalGuide.liquidVoxelComponent"
                        },
                        {
                            "source": "getLiquidVoxelComponent.value",
                            "target": "guideReseed.liquidVoxelComponent"
                        },
                        {
                            "source": "getSolidsVoxelComponentName.value",
                            "target": "getSolidsVoxelComponent.name"
                        },
                        {
                            "source": "getSolidsVoxelComponent.value",
                            "target": "computeFinalGuide.containerVoxelComponent"
                        },
                        {
                            "source": "getSolidsVoxelComponent.value",
                            "target": "guideReseed.containerVoxelComponent"
                        },
                        {
                            "source": "getSolidsVoxelComponent.value",
                            "target": "guideReseed.solidsVoxelComponent"
                        },
                        {
                            "source": "isAdaptive3.value",
                            "target": "guideReseed.isAdaptive"
                        },
                        {
                            "source": "computeFinalGuide.value",
                            "target": "guideReseed.guideVoxelComponent"
                        },
                        {
                            "source": "getGuideVoxelComponent.value",
                            "target": "computeFinalGuide.guideVoxelComponent"
                        },
                        {
                            "source": "getLiquidPointComponent.value",
                            "target": "guideReseed.liquidPointComponent"
                        },
                        {
                            "source": "guideReseed.outGuideVoxelComponent",
                            "target": "syncGuideObject.item"
                        },
                        {
                            "source": "guideReseed.outLiquidVoxelComponent",
                            "target": "syncLiquidVoxelComponent.item"
                        },
                        {
                            "source": "guideReseed.outLiquidPointComponent",
                            "target": "syncLiquidPointComponent.item"
                        },
                        {
                            "source": "guideReseed.outSolidsVoxelComponent",
                            "target": "syncSolidsObject.item"
                        },
                        {
                            "source": "getLiquidPointComponentName.value",
                            "target": "getLiquidPointComponent.name"
                        },
                        {
                            "source": "getGuideVoxelComponentName.value",
                            "target": "getGuideVoxelComponent.name"
                        },
                        {
                            "source": "syncLiquidVoxelComponent.value",
                            "target": "syncLiquidPointComponent.object"
                        }
                    ],
                    "values": []
                },
                {
                    "name": "computePreliminaryGuideAndEmit",
                    "ports": [
                        {
                            "portName": "liquidObject",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::Object"
                        },
                        {
                            "portName": "minSimulationDepth",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "guideVoxelScale",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "computeGuideFromHighResLiquid",
                            "portDirection": "input",
                            "portType": "bool"
                        },
                        {
                            "portName": "enableGuiding",
                            "portDirection": "input",
                            "portType": "bool"
                        },
                        {
                            "portName": "simulationCachePath",
                            "portDirection": "input",
                            "portType": "string"
                        },
                        {
                            "portName": "simulationCacheFilename",
                            "portDirection": "input",
                            "portType": "string"
                        },
                        {
                            "portName": "outGuideObject",
                            "portDirection": "output",
                            "portType": "Bifrost::Types::Object"
                        },
                        {
                            "portName": "solidObject",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::Object"
                        },
                        {
                            "portName": "emitters",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::IOMeshArray"
                        },
                        {
                            "portName": "masterVoxelSize",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "surfaceBandWidth",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "interiorPointDensity",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "surfacePointDensity",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "isAdaptive",
                            "portDirection": "input",
                            "portType": "bool"
                        },
                        {
                            "portName": "outLiquidObject",
                            "portDirection": "output",
                            "portType": "Bifrost::Types::Object"
                        },
                        {
                            "portName": "minAirPocketDistance",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "minGapDistance",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "guides",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::IOMeshArray"
                        },
                        {
                            "portName": "computeGuideFromLowresCache",
                            "portDirection": "input",
                            "portType": "bool"
                        },
                        {
                            "portName": "computeGuideFromMesh",
                            "portDirection": "input",
                            "portType": "bool"
                        },
                        {
                            "portName": "bboxMin",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::Vec3Float"
                        },
                        {
                            "portName": "bboxMax",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::Vec3Float"
                        },
                        {
                            "portName": "bboxTransform",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::Mat44Float"
                        },
                        {
                            "portName": "guideObject",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::Object"
                        }
                    ],
                    "compoundNodes": [
                        {
                            "nodeName": "emitLiquid",
                            "nodeType": "Bifrost::Nodes::_incObject::emitLiquid"
                        },
                        {
                            "nodeName": "equal",
                            "nodeType": "Bifrost::Nodes::Math::equal"
                        },
                        {
                            "nodeName": "getFrame1",
                            "nodeType": "Bifrost::Nodes::Misc::getFrame"
                        },
                        {
                            "nodeName": "getInt32ContextValue",
                            "nodeType": "Bifrost::Nodes::Misc::getContextValueInt32"
                        },
                        {
                            "nodeName": "getStartFrameName",
                            "nodeType": "Bifrost::Nodes::_privNames::getStartFrameName"
                        },
                        {
                            "nodeName": "getTargetGuideObjectName",
                            "nodeType": "Bifrost::Nodes::_privNames::getTargetGuideObjectName"
                        },
                        {
                            "nodeName": "getSolidsVoxelComponent",
                            "nodeType": "Bifrost::Nodes::Component::getVoxelComponent"
                        },
                        {
                            "nodeName": "getLiquidVoxelComponent",
                            "nodeType": "Bifrost::Nodes::Component::getVoxelComponent"
                        },
                        {
                            "nodeName": "getGuidesVoxelComponent",
                            "nodeType": "Bifrost::Nodes::Component::getVoxelComponent"
                        },
                        {
                            "nodeName": "getSolidsVoxelComponentName",
                            "nodeType": "Bifrost::Nodes::_privNames::getVoxelComponentName"
                        },
                        {
                            "nodeName": "getLiquidVoxelComponentName",
                            "nodeType": "Bifrost::Nodes::_privNames::getVoxelComponentName"
                        },
                        {
                            "nodeName": "getGuidesVoxelComponentName",
                            "nodeType": "Bifrost::Nodes::_privNames::getVoxelComponentName"
                        },
                        {
                            "nodeName": "getdt1",
                            "nodeType": "Bifrost::Nodes::Misc::getDt"
                        },
                        {
                            "nodeName": "voxelizeGuides",
                            "nodeType": "Bifrost::Nodes::_incObject::voxelizeMeshes"
                        },
                        {
                            "nodeName": "computePreliminaryGuide",
                            "nodeType": "Bifrost::Nodes::_incComponent::computePreliminaryGuide"
                        },
                        {
                            "nodeName": "getGuideVoxelComponent",
                            "nodeType": "Bifrost::Nodes::Component::getVoxelComponent"
                        },
                        {
                            "nodeName": "getGuideVoxelComponentName",
                            "nodeType": "Bifrost::Nodes::_privNames::getVoxelComponentName"
                        },
                        {
                            "nodeName": "syncFlow",
                            "nodeType": "Bifrost::Nodes::Object::syncFlow"
                        }
                    ],
                    "connections": [
                        {
                            "source": ".solidObject",
                            "target": "emitLiquid.solidObject"
                        },
                        {
                            "source": ".emitters",
                            "target": "emitLiquid.emitters"
                        },
                        {
                            "source": ".masterVoxelSize",
                            "target": "emitLiquid.masterVoxelSize"
                        },
                        {
                            "source": ".surfaceBandWidth",
                            "target": "emitLiquid.surfaceBandWidth"
                        },
                        {
                            "source": ".interiorPointDensity",
                            "target": "emitLiquid.interiorPointDensity"
                        },
                        {
                            "source": ".surfacePointDensity",
                            "target": "emitLiquid.surfacePointDensity"
                        },
                        {
                            "source": ".isAdaptive",
                            "target": "emitLiquid.isAdaptive"
                        },
                        {
                            "source": "emitLiquid.value",
                            "target": ".outLiquidObject"
                        },
                        {
                            "source": ".liquidObject",
                            "target": "getLiquidVoxelComponentName.object"
                        },
                        {
                            "source": ".liquidObject",
                            "target": "getLiquidVoxelComponent.object"
                        },
                        {
                            "source": ".solidObject",
                            "target": "getSolidsVoxelComponentName.object"
                        },
                        {
                            "source": ".solidObject",
                            "target": "getSolidsVoxelComponent.object"
                        },
                        {
                            "source": ".enableGuiding",
                            "target": "emitLiquid.enableGuiding"
                        },
                        {
                            "source": ".guides",
                            "target": "voxelizeGuides.meshes"
                        },
                        {
                            "source": ".bboxMin",
                            "target": "emitLiquid.bboxMin"
                        },
                        {
                            "source": ".bboxMax",
                            "target": "emitLiquid.bboxMax"
                        },
                        {
                            "source": ".bboxTransform",
                            "target": "emitLiquid.bboxTransform"
                        },
                        {
                            "source": ".guideObject",
                            "target": "getGuideVoxelComponentName.object"
                        },
                        {
                            "source": ".guideObject",
                            "target": "getGuideVoxelComponent.object"
                        },
                        {
                            "source": ".liquidObject",
                            "target": "emitLiquid.liquidObject"
                        },
                        {
                            "source": ".guideObject",
                            "target": "syncFlow.object"
                        },
                        {
                            "source": ".guideVoxelScale",
                            "target": "voxelizeGuides.masterVoxelSize"
                        },
                        {
                            "source": ".enableGuiding",
                            "target": "computePreliminaryGuide.enableGuiding"
                        },
                        {
                            "source": ".simulationCachePath",
                            "target": "computePreliminaryGuide.simulationCachePath"
                        },
                        {
                            "source": ".simulationCacheFilename",
                            "target": "computePreliminaryGuide.simulationCacheFilename"
                        },
                        {
                            "source": ".computeGuideFromLowresCache",
                            "target": "computePreliminaryGuide.computeGuideFromSimulationCache"
                        },
                        {
                            "source": ".computeGuideFromMesh",
                            "target": "computePreliminaryGuide.computeGuideFromMesh"
                        },
                        {
                            "source": ".computeGuideFromHighResLiquid",
                            "target": "computePreliminaryGuide.computeGuideFromHighResLiquid"
                        },
                        {
                            "source": ".minSimulationDepth",
                            "target": "computePreliminaryGuide.minSimulationDepth"
                        },
                        {
                            "source": ".minAirPocketDistance",
                            "target": "computePreliminaryGuide.minAirPocketDistance"
                        },
                        {
                            "source": ".minGapDistance",
                            "target": "computePreliminaryGuide.minGapDistance"
                        },
                        {
                            "source": "syncFlow.value",
                            "target": ".outGuideObject"
                        },
                        {
                            "source": "syncFlow.value",
                            "target": "emitLiquid.guideObject"
                        },
                        {
                            "source": "getFrame1.value",
                            "target": "equal.first"
                        },
                        {
                            "source": "getInt32ContextValue.value",
                            "target": "equal.second"
                        },
                        {
                            "source": "equal.value",
                            "target": "computePreliminaryGuide.isFirstFrame"
                        },
                        {
                            "source": "getFrame1.value",
                            "target": "computePreliminaryGuide.frame"
                        },
                        {
                            "source": "getStartFrameName.value",
                            "target": "getInt32ContextValue.name"
                        },
                        {
                            "source": "getTargetGuideObjectName.value",
                            "target": "voxelizeGuides.objectId"
                        },
                        {
                            "source": "getSolidsVoxelComponentName.value",
                            "target": "getSolidsVoxelComponent.name"
                        },
                        {
                            "source": "getSolidsVoxelComponent.value",
                            "target": "computePreliminaryGuide.containerVoxelComponent"
                        },
                        {
                            "source": "getSolidsVoxelComponent.value",
                            "target": "computePreliminaryGuide.solidsVoxelComponent"
                        },
                        {
                            "source": "getLiquidVoxelComponentName.value",
                            "target": "getLiquidVoxelComponent.name"
                        },
                        {
                            "source": "getLiquidVoxelComponent.value",
                            "target": "computePreliminaryGuide.liquidVoxelComponent"
                        },
                        {
                            "source": "voxelizeGuides.value",
                            "target": "getGuidesVoxelComponent.object"
                        },
                        {
                            "source": "getGuidesVoxelComponentName.value",
                            "target": "getGuidesVoxelComponent.name"
                        },
                        {
                            "source": "getGuidesVoxelComponent.value",
                            "target": "computePreliminaryGuide.targetGuideVoxelComponent"
                        },
                        {
                            "source": "voxelizeGuides.value",
                            "target": "getGuidesVoxelComponentName.object"
                        },
                        {
                            "source": "getdt1.value",
                            "target": "computePreliminaryGuide.dt"
                        },
                        {
                            "source": "getGuideVoxelComponent.value",
                            "target": "computePreliminaryGuide.guideVoxelComponent"
                        },
                        {
                            "source": "computePreliminaryGuide.value",
                            "target": "syncFlow.item"
                        },
                        {
                            "source": "getGuideVoxelComponentName.value",
                            "target": "getGuideVoxelComponent.name"
                        }
                    ],
                    "values": [
                        {
                            "valueName": "emitLiquid.masterVoxelSize",
                            "value": "0f"
                        },
                        {
                            "valueName": "emitLiquid.voxelScale",
                            "value": "1f"
                        },
                        {
                            "valueName": "emitLiquid.surfaceBandWidth",
                            "value": "0f"
                        },
                        {
                            "valueName": "emitLiquid.interiorPointDensity",
                            "value": "0f"
                        },
                        {
                            "valueName": "emitLiquid.surfacePointDensity",
                            "value": "0f"
                        },
                        {
                            "valueName": "emitLiquid.isAdaptive",
                            "value": "false"
                        },
                        {
                            "valueName": "voxelizeGuides.voxelScale",
                            "value": "1f"
                        },
                        {
                            "valueName": "voxelizeGuides.thickeningRadius",
                            "value": "1f"
                        },
                        {
                            "valueName": "voxelizeGuides.detailBandWidth",
                            "value": "0f"
                        },
                        {
                            "valueName": "voxelizeGuides.isAero",
                            "value": "false"
                        },
                        {
                            "valueName": "voxelizeGuides.isEmitter",
                            "value": "false"
                        },
                        {
                            "valueName": "voxelizeGuides.isForce",
                            "value": "false"
                        }
                    ]
                },
                {
                    "name": "evaluateStep",
                    "ports": [
                        {
                            "portName": "condition",
                            "portDirection": "input",
                            "portType": "bool"
                        },
                        {
                            "portName": "outLiquidObject",
                            "portDirection": "output",
                            "portType": "Bifrost::Types::Object"
                        },
                        {
                            "portName": "outSolidObject",
                            "portDirection": "output",
                            "portType": "Bifrost::Types::Object"
                        },
                        {
                            "portName": "liquidObject",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::Object"
                        },
                        {
                            "portName": "solidObject",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::Object"
                        },
                        {
                            "portName": "outCondition",
                            "portDirection": "output",
                            "portType": "bool"
                        }
                    ],
                    "compoundNodes": [
                        {
                            "nodeName": "ifLiquid",
                            "nodeType": "Bifrost::if"
                        },
                        {
                            "nodeName": "ifSolid",
                            "nodeType": "Bifrost::if"
                        },
                        {
                            "nodeName": "getObjectLiquid",
                            "nodeType": "Bifrost::Nodes::Object::getObject"
                        },
                        {
                            "nodeName": "getObjectSolid",
                            "nodeType": "Bifrost::Nodes::Object::getObject"
                        },
                        {
                            "nodeName": "solids",
                            "nodeType": "Bifrost::Nodes::Misc::valueString"
                        },
                        {
                            "nodeName": "liquid",
                            "nodeType": "Bifrost::Nodes::Misc::valueString"
                        },
                        {
                            "nodeName": "valueBool",
                            "nodeType": "Bifrost::Nodes::Math::valueBool"
                        }
                    ],
                    "connections": [
                        {
                            "source": ".condition",
                            "target": "ifLiquid.condition"
                        },
                        {
                            "source": ".condition",
                            "target": "ifSolid.condition"
                        },
                        {
                            "source": "ifLiquid.output",
                            "target": ".outLiquidObject"
                        },
                        {
                            "source": "ifSolid.output",
                            "target": ".outSolidObject"
                        },
                        {
                            "source": ".liquidObject",
                            "target": "ifLiquid.trueCase"
                        },
                        {
                            "source": ".solidObject",
                            "target": "ifSolid.trueCase"
                        },
                        {
                            "source": ".condition",
                            "target": "valueBool.val"
                        },
                        {
                            "source": "valueBool.value",
                            "target": ".outCondition"
                        },
                        {
                            "source": "getObjectLiquid.value",
                            "target": "ifLiquid.falseCase"
                        },
                        {
                            "source": "getObjectSolid.value",
                            "target": "ifSolid.falseCase"
                        },
                        {
                            "source": "liquid.value",
                            "target": "getObjectLiquid.name"
                        },
                        {
                            "source": "solids.value",
                            "target": "getObjectSolid.name"
                        }
                    ],
                    "values": [
                        {
                            "valueName": "solids.str",
                            "valueType": "string",
                            "value": "Solids"
                        },
                        {
                            "valueName": "liquid.str",
                            "valueType": "string",
                            "value": "voxel_liquid"
                        }
                    ]
                },
                {
                    "name": "initGuideAndVoxelSize",
                    "ports": [
                        {
                            "portName": "guideVoxelScale",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "masterVoxelSize",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "liquidObject",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::Object"
                        },
                        {
                            "portName": "reseedLiquidOverlap",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "reseedGuideOverlap",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "minSimulationDepth",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "minAirPocketDistance",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "minGapDistance",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "enableGuiding",
                            "portDirection": "input",
                            "portType": "bool"
                        },
                        {
                            "portName": "simulationCachePath",
                            "portDirection": "input",
                            "portType": "string"
                        },
                        {
                            "portName": "simulationCacheFilename",
                            "portDirection": "input",
                            "portType": "string"
                        },
                        {
                            "portName": "computeGuideFromSimulationCache",
                            "portDirection": "input",
                            "portType": "bool"
                        },
                        {
                            "portName": "computeGuideFromMesh",
                            "portDirection": "input",
                            "portType": "bool"
                        },
                        {
                            "portName": "outGuideVoxelSize",
                            "portDirection": "output",
                            "portType": "float"
                        },
                        {
                            "portName": "outGuideObject",
                            "portDirection": "output",
                            "portType": "Bifrost::Types::Object"
                        }
                    ],
                    "compoundNodes": [
                        {
                            "nodeName": "computeGuideVoxelSize",
                            "nodeType": "Bifrost::Nodes::Math::mul"
                        },
                        {
                            "nodeName": "equal",
                            "nodeType": "Bifrost::Nodes::Math::equal"
                        },
                        {
                            "nodeName": "getContextValueInt32",
                            "nodeType": "Bifrost::Nodes::Misc::getContextValueInt32"
                        },
                        {
                            "nodeName": "getFrame1",
                            "nodeType": "Bifrost::Nodes::Misc::getFrame"
                        },
                        {
                            "nodeName": "getStartFrameName",
                            "nodeType": "Bifrost::Nodes::_privNames::getStartFrameName"
                        },
                        {
                            "nodeName": "initGuide",
                            "nodeType": "Bifrost::Nodes::_incObject::initGuide"
                        }
                    ],
                    "connections": [
                        {
                            "source": ".guideVoxelScale",
                            "target": "computeGuideVoxelSize.first"
                        },
                        {
                            "source": ".masterVoxelSize",
                            "target": "computeGuideVoxelSize.second"
                        },
                        {
                            "source": ".liquidObject",
                            "target": "initGuide.liquidObject"
                        },
                        {
                            "source": ".reseedLiquidOverlap",
                            "target": "initGuide.reseedLiquidOverlap"
                        },
                        {
                            "source": ".reseedGuideOverlap",
                            "target": "initGuide.reseedGuideOverlap"
                        },
                        {
                            "source": ".minSimulationDepth",
                            "target": "initGuide.minSimulationDepth"
                        },
                        {
                            "source": ".minAirPocketDistance",
                            "target": "initGuide.minAirPocketDistance"
                        },
                        {
                            "source": ".minGapDistance",
                            "target": "initGuide.minGapDistance"
                        },
                        {
                            "source": ".enableGuiding",
                            "target": "initGuide.enableGuiding"
                        },
                        {
                            "source": ".simulationCachePath",
                            "target": "initGuide.simulationCachePath"
                        },
                        {
                            "source": ".simulationCacheFilename",
                            "target": "initGuide.simulationCacheFilename"
                        },
                        {
                            "source": ".computeGuideFromSimulationCache",
                            "target": "initGuide.computeGuideFromSimulationCache"
                        },
                        {
                            "source": ".computeGuideFromMesh",
                            "target": "initGuide.computeGuideFromMesh"
                        },
                        {
                            "source": "initGuide.outGuideVoxelSize",
                            "target": ".outGuideVoxelSize"
                        },
                        {
                            "source": "initGuide.outGuideObject",
                            "target": ".outGuideObject"
                        },
                        {
                            "source": "computeGuideVoxelSize.value",
                            "target": "initGuide.guideVoxelSize"
                        },
                        {
                            "source": "getContextValueInt32.value",
                            "target": "equal.first"
                        },
                        {
                            "source": "getFrame1.value",
                            "target": "equal.second"
                        },
                        {
                            "source": "equal.value",
                            "target": "initGuide.isFirstFrame"
                        },
                        {
                            "source": "getStartFrameName.value",
                            "target": "getContextValueInt32.name"
                        },
                        {
                            "source": "getFrame1.value",
                            "target": "initGuide.frame"
                        }
                    ],
                    "values": []
                },
                {
                    "name": "reseedPoint",
                    "ports": [
                        {
                            "portName": "masterVoxelSize",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "surfaceBandWidth",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "object",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::Object"
                        },
                        {
                            "portName": "solidsObject",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::Object"
                        },
                        {
                            "portName": "interiorPointDensity",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "surfacePointDensity",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "value",
                            "portDirection": "output",
                            "portType": "Bifrost::Types::Object"
                        },
                        {
                            "portName": "deleteExceedingPoints",
                            "portDirection": "input",
                            "portType": "bool"
                        }
                    ],
                    "compoundNodes": [
                        {
                            "nodeName": "getFrame1",
                            "nodeType": "Bifrost::Nodes::Misc::getFrame"
                        },
                        {
                            "nodeName": "mul",
                            "nodeType": "Bifrost::Nodes::Math::mul"
                        },
                        {
                            "nodeName": "pointReseed",
                            "nodeType": "Bifrost::Nodes::Object::pointReseed"
                        },
                        {
                            "nodeName": "isAdaptive",
                            "nodeType": "Bifrost::Nodes::Misc::isAdaptive"
                        }
                    ],
                    "connections": [
                        {
                            "source": ".masterVoxelSize",
                            "target": "mul.first"
                        },
                        {
                            "source": ".surfaceBandWidth",
                            "target": "mul.second"
                        },
                        {
                            "source": ".object",
                            "target": "pointReseed.object"
                        },
                        {
                            "source": ".solidsObject",
                            "target": "pointReseed.solidsObject"
                        },
                        {
                            "source": ".interiorPointDensity",
                            "target": "pointReseed.interiorPointDensity"
                        },
                        {
                            "source": ".surfacePointDensity",
                            "target": "pointReseed.surfacePointDensity"
                        },
                        {
                            "source": "pointReseed.value",
                            "target": ".value"
                        },
                        {
                            "source": ".deleteExceedingPoints",
                            "target": "pointReseed.deleteExceedingPoints"
                        },
                        {
                            "source": "getFrame1.value",
                            "target": "pointReseed.frame"
                        },
                        {
                            "source": "mul.value",
                            "target": "pointReseed.surfaceBandWidth"
                        },
                        {
                            "source": "isAdaptive.value",
                            "target": "pointReseed.isAdaptive"
                        },
                        {
                            "source": "isAdaptive.value",
                            "target": "pointReseed.reseedPoints"
                        }
                    ],
                    "values": []
                },
                {
                    "name": "surfaceTensionComp",
                    "ports": [
                        {
                            "portName": "condition",
                            "portDirection": "input",
                            "portType": "bool"
                        },
                        {
                            "portName": "value",
                            "portDirection": "output",
                            "portType": "Bifrost::Types::Object"
                        },
                        {
                            "portName": "object",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::Object"
                        },
                        {
                            "portName": "dt",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "dynamicSurfaceTension",
                            "portDirection": "input",
                            "portType": "float"
                        }
                    ],
                    "compoundNodes": [
                        {
                            "nodeName": "ifSurfaceTensionEnabled",
                            "nodeType": "Bifrost::if"
                        },
                        {
                            "nodeName": "surfaceTension",
                            "nodeType": "Bifrost::Nodes::_incObject::surfaceTension"
                        }
                    ],
                    "connections": [
                        {
                            "source": ".condition",
                            "target": "ifSurfaceTensionEnabled.condition"
                        },
                        {
                            "source": "ifSurfaceTensionEnabled.output",
                            "target": ".value"
                        },
                        {
                            "source": ".object",
                            "target": "surfaceTension.object"
                        },
                        {
                            "source": ".dt",
                            "target": "surfaceTension.dt"
                        },
                        {
                            "source": ".dynamicSurfaceTension",
                            "target": "surfaceTension.dynamicSurfaceTension"
                        },
                        {
                            "source": ".object",
                            "target": "ifSurfaceTensionEnabled.falseCase"
                        },
                        {
                            "source": "surfaceTension.value",
                            "target": "ifSurfaceTensionEnabled.trueCase"
                        }
                    ],
                    "values": [
                        {
                            "valueName": "surfaceTension.dt",
                            "value": "0f"
                        },
                        {
                            "valueName": "surfaceTension.density",
                            "value": "1000f"
                        },
                        {
                            "valueName": "surfaceTension.dynamicSurfaceTension",
                            "value": "0f"
                        }
                    ]
                },
                {
                    "name": "transportAndKill",
                    "ports": [
                        {
                            "portName": "input",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "liquidObject",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::Object"
                        },
                        {
                            "portName": "solidObject",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::Object"
                        },
                        {
                            "portName": "transportTimeScale",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "minSteps",
                            "portDirection": "input",
                            "portType": "int"
                        },
                        {
                            "portName": "maxSteps",
                            "portDirection": "input",
                            "portType": "int"
                        },
                        {
                            "portName": "dropletThreshold",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "dropletMergeBackDepth",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "killPlanes",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::Mat44FloatArray"
                        },
                        {
                            "portName": "value",
                            "portDirection": "output",
                            "portType": "Bifrost::Types::Object"
                        }
                    ],
                    "compoundNodes": [
                        {
                            "nodeName": "computeCFLFromStepAdaptivity",
                            "nodeType": "Bifrost::Nodes::_private::computeCFLFromStepAdaptivity"
                        },
                        {
                            "nodeName": "fetchMesh",
                            "nodeType": "Bifrost::Nodes::Mesh::fetchMesh"
                        },
                        {
                            "nodeName": "isAdaptive4",
                            "nodeType": "Bifrost::Nodes::Misc::isAdaptive"
                        },
                        {
                            "nodeName": "killPlanes",
                            "nodeType": "Bifrost::Nodes::Misc::valueString"
                        },
                        {
                            "nodeName": "transportAndKillLiquid",
                            "nodeType": "Bifrost::Nodes::_incObject::transportAndKillLiquid"
                        }
                    ],
                    "connections": [
                        {
                            "source": ".input",
                            "target": "computeCFLFromStepAdaptivity.input"
                        },
                        {
                            "source": ".liquidObject",
                            "target": "transportAndKillLiquid.liquidObject"
                        },
                        {
                            "source": ".solidObject",
                            "target": "transportAndKillLiquid.solidObject"
                        },
                        {
                            "source": ".transportTimeScale",
                            "target": "transportAndKillLiquid.transportTimeScale"
                        },
                        {
                            "source": ".minSteps",
                            "target": "transportAndKillLiquid.minSteps"
                        },
                        {
                            "source": ".maxSteps",
                            "target": "transportAndKillLiquid.maxSteps"
                        },
                        {
                            "source": ".dropletThreshold",
                            "target": "transportAndKillLiquid.dropletThreshold"
                        },
                        {
                            "source": ".dropletMergeBackDepth",
                            "target": "transportAndKillLiquid.dropletMergeBackDepth"
                        },
                        {
                            "source": ".killPlanes",
                            "target": "transportAndKillLiquid.killPlanes"
                        },
                        {
                            "source": "transportAndKillLiquid.value",
                            "target": ".value"
                        },
                        {
                            "source": "computeCFLFromStepAdaptivity.value",
                            "target": "transportAndKillLiquid.cfl"
                        },
                        {
                            "source": "killPlanes.value",
                            "target": "fetchMesh.meshID"
                        },
                        {
                            "source": "fetchMesh.value",
                            "target": "transportAndKillLiquid.killmesh"
                        },
                        {
                            "source": "isAdaptive4.value",
                            "target": "transportAndKillLiquid.isAdaptive"
                        }
                    ],
                    "values": [
                        {
                            "valueName": "killPlanes.str",
                            "valueType": "string",
                            "value": "killPlanes"
                        }
                    ]
                },
                {
                    "name": "vorticityComp",
                    "ports": [
                        {
                            "portName": "condition",
                            "portDirection": "input",
                            "portType": "bool"
                        },
                        {
                            "portName": "value",
                            "portDirection": "output",
                            "portType": "Bifrost::Types::Object"
                        },
                        {
                            "portName": "object",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::Object"
                        },
                        {
                            "portName": "dt",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "vorticityDecay",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "vorticityMul",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "vorticityMax",
                            "portDirection": "input",
                            "portType": "float"
                        }
                    ],
                    "compoundNodes": [
                        {
                            "nodeName": "ifVorticityEnabled",
                            "nodeType": "Bifrost::if"
                        },
                        {
                            "nodeName": "vorticity",
                            "nodeType": "Bifrost::Nodes::_incObject::vorticity"
                        }
                    ],
                    "connections": [
                        {
                            "source": ".condition",
                            "target": "ifVorticityEnabled.condition"
                        },
                        {
                            "source": "ifVorticityEnabled.output",
                            "target": ".value"
                        },
                        {
                            "source": ".object",
                            "target": "vorticity.object"
                        },
                        {
                            "source": ".dt",
                            "target": "vorticity.dt"
                        },
                        {
                            "source": ".vorticityDecay",
                            "target": "vorticity.vorticityDecay"
                        },
                        {
                            "source": ".vorticityMul",
                            "target": "vorticity.vorticityMul"
                        },
                        {
                            "source": ".vorticityMax",
                            "target": "vorticity.vorticityMax"
                        },
                        {
                            "source": ".object",
                            "target": "ifVorticityEnabled.falseCase"
                        },
                        {
                            "source": "vorticity.value",
                            "target": "ifVorticityEnabled.trueCase"
                        }
                    ],
                    "values": []
                }
            ],
            "compoundNodes": [
                {
                    "nodeName": "voxelizeSolids",
                    "nodeType": "Bifrost::Nodes::_incObject::voxelizeMeshes"
                },
                {
                    "nodeName": "createLiquidObject",
                    "nodeType": "Bifrost::Nodes::_incObject::createLiquidObject"
                },
                {
                    "nodeName": "initSim",
                    "nodeType": "Bifrost::_private::initSim"
                },
                {
                    "nodeName": "flipPointToGrid",
                    "nodeType": "Bifrost::Nodes::_incObject::flipPointToGrid"
                },
                {
                    "nodeName": "coarsenRefine",
                    "nodeType": "Bifrost::Nodes::_incObject::coarsenRefine"
                },
                {
                    "nodeName": "copyVelocityToPoint",
                    "nodeType": "Bifrost::_private::copyVelocityToPoint"
                },
                {
                    "nodeName": "if",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "computeDroplet",
                    "nodeType": "Bifrost::Nodes::_incObject::computeDroplet"
                },
                {
                    "nodeName": "hydrodynamics",
                    "nodeType": "Bifrost::Nodes::Object::hydrodynamics"
                },
                {
                    "nodeName": "getdt1",
                    "nodeType": "Bifrost::Nodes::Misc::getDt"
                },
                {
                    "nodeName": "flipGridToPoint",
                    "nodeType": "Bifrost::Nodes::_incObject::flipGridToPoint"
                },
                {
                    "nodeName": "getSolidsObjectName",
                    "nodeType": "Bifrost::Nodes::_privNames::getSolidsObjectName"
                },
                {
                    "nodeName": "isAdaptive",
                    "nodeType": "Bifrost::Nodes::Misc::isAdaptive"
                },
                {
                    "nodeName": "copyVelocityToPoint1",
                    "nodeType": "Bifrost::_private::copyVelocityToPoint"
                },
                {
                    "nodeName": "isAdaptive1",
                    "nodeType": "Bifrost::Nodes::Misc::isAdaptive"
                },
                {
                    "nodeName": "addSurfacePressure",
                    "nodeType": "Bifrost::_private::addSurfacePressure"
                },
                {
                    "nodeName": "deleteSurfacePressure",
                    "nodeType": "Bifrost::_private::deleteSurfacePressure"
                },
                {
                    "nodeName": "deleteCollocatedFlip",
                    "nodeType": "Bifrost::_private::deleteCollocatedFlip"
                },
                {
                    "nodeName": "computePointTolevelset",
                    "nodeType": "Bifrost::_private::computePointToLevelset"
                },
                {
                    "nodeName": "voxelizeAccelerators",
                    "nodeType": "Bifrost::_private::voxelizeAccelerators"
                },
                {
                    "nodeName": "computePreliminaryGuideAndEmit",
                    "nodeType": "computePreliminaryGuideAndEmit"
                },
                {
                    "nodeName": "computeFinalGuideAndReseed",
                    "nodeType": "computeFinalGuideAndReseed"
                },
                {
                    "nodeName": "transportAndKill",
                    "nodeType": "transportAndKill"
                },
                {
                    "nodeName": "reseedPoint",
                    "nodeType": "reseedPoint"
                },
                {
                    "nodeName": "vorticityComp",
                    "nodeType": "vorticityComp"
                },
                {
                    "nodeName": "surfaceTensionComp",
                    "nodeType": "surfaceTensionComp"
                },
                {
                    "nodeName": "applyForces",
                    "nodeType": "Bifrost::_private::applyForces"
                },
                {
                    "nodeName": "minGapDistance",
                    "nodeType": "Bifrost::Nodes::Math::valueFloat"
                },
                {
                    "nodeName": "minAirPocketDistance",
                    "nodeType": "Bifrost::Nodes::Math::valueFloat"
                },
                {
                    "nodeName": "ifGuidingEnabled",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "initGuideAndVoxelSize",
                    "nodeType": "initGuideAndVoxelSize"
                },
                {
                    "nodeName": "evaluateStep",
                    "nodeType": "evaluateStep"
                }
            ],
            "connections": [
                {
                    "source": ".solidVoxelScale",
                    "target": "voxelizeSolids.voxelScale"
                },
                {
                    "source": ".masterVoxelSize",
                    "target": "createLiquidObject.masterVoxelSize"
                },
                {
                    "source": ".dropletThreshold",
                    "target": "flipPointToGrid.dropletThreshold"
                },
                {
                    "source": ".PIC",
                    "target": "flipGridToPoint.PIC"
                },
                {
                    "source": ".viscosityMult",
                    "target": "flipGridToPoint.viscosityMult"
                },
                {
                    "source": ".dropletThreshold",
                    "target": "flipGridToPoint.dropletThreshold"
                },
                {
                    "source": ".Colliders",
                    "target": "voxelizeSolids.meshes"
                },
                {
                    "source": ".dropletThreshold",
                    "target": "computeDroplet.dropletThreshold"
                },
                {
                    "source": ".dropletMergeBackDepth",
                    "target": "computeDroplet.dropletMergeBackDepth"
                },
                {
                    "source": ".dropletThreshold",
                    "target": "computePointTolevelset.dropletThreshold"
                },
                {
                    "source": ".masterVoxelSize",
                    "target": "voxelizeAccelerators.materVoxelSize"
                },
                {
                    "source": ".forceVoxelScale",
                    "target": "voxelizeAccelerators.voxelScale"
                },
                {
                    "source": ".Accelerators",
                    "target": "voxelizeAccelerators.meshes"
                },
                {
                    "source": ".minSimulationDepth",
                    "target": "computePreliminaryGuideAndEmit.minSimulationDepth"
                },
                {
                    "source": ".computeGuideFromHighResLiquid",
                    "target": "computePreliminaryGuideAndEmit.computeGuideFromHighResLiquid"
                },
                {
                    "source": ".enableGuiding",
                    "target": "computePreliminaryGuideAndEmit.enableGuiding"
                },
                {
                    "source": ".Emitters",
                    "target": "computePreliminaryGuideAndEmit.emitters"
                },
                {
                    "source": ".masterVoxelSize",
                    "target": "computePreliminaryGuideAndEmit.masterVoxelSize"
                },
                {
                    "source": ".surfaceBandWidth",
                    "target": "computePreliminaryGuideAndEmit.surfaceBandWidth"
                },
                {
                    "source": ".interiorPointDensity",
                    "target": "computePreliminaryGuideAndEmit.interiorPointDensity"
                },
                {
                    "source": ".surfacePointDensity",
                    "target": "computePreliminaryGuideAndEmit.surfacePointDensity"
                },
                {
                    "source": ".minSimulationDepth",
                    "target": "computeFinalGuideAndReseed.minSimulationDepth"
                },
                {
                    "source": ".computeGuideFromHighResLiquid",
                    "target": "computeFinalGuideAndReseed.computeGuideFromHighResLiquid"
                },
                {
                    "source": ".enableGuiding",
                    "target": "computeFinalGuideAndReseed.enableGuiding"
                },
                {
                    "source": ".reseedPointDensity",
                    "target": "computeFinalGuideAndReseed.pointDensity"
                },
                {
                    "source": ".computeGuideFromSimulationCache",
                    "target": "computePreliminaryGuideAndEmit.computeGuideFromLowresCache"
                },
                {
                    "source": ".computeGuideFromMesh",
                    "target": "computePreliminaryGuideAndEmit.computeGuideFromMesh"
                },
                {
                    "source": ".Guides",
                    "target": "computePreliminaryGuideAndEmit.guides"
                },
                {
                    "source": ".transportStepAdaptivity",
                    "target": "transportAndKill.input"
                },
                {
                    "source": ".transportTimeScale",
                    "target": "transportAndKill.transportTimeScale"
                },
                {
                    "source": ".minSteps",
                    "target": "transportAndKill.minSteps"
                },
                {
                    "source": ".maxSteps",
                    "target": "transportAndKill.maxSteps"
                },
                {
                    "source": ".dropletThreshold",
                    "target": "transportAndKill.dropletThreshold"
                },
                {
                    "source": ".dropletMergeBackDepth",
                    "target": "transportAndKill.dropletMergeBackDepth"
                },
                {
                    "source": ".killPlanes",
                    "target": "transportAndKill.killPlanes"
                },
                {
                    "source": ".masterVoxelSize",
                    "target": "reseedPoint.masterVoxelSize"
                },
                {
                    "source": ".surfaceBandWidth",
                    "target": "reseedPoint.surfaceBandWidth"
                },
                {
                    "source": ".interiorPointDensity",
                    "target": "reseedPoint.interiorPointDensity"
                },
                {
                    "source": ".surfacePointDensity",
                    "target": "reseedPoint.surfacePointDensity"
                },
                {
                    "source": ".vorticityEnable",
                    "target": "vorticityComp.condition"
                },
                {
                    "source": ".vorticityDecay",
                    "target": "vorticityComp.vorticityDecay"
                },
                {
                    "source": ".vorticityMul",
                    "target": "vorticityComp.vorticityMul"
                },
                {
                    "source": ".vorticityMax",
                    "target": "vorticityComp.vorticityMax"
                },
                {
                    "source": ".surfaceTensionEnable",
                    "target": "surfaceTensionComp.condition"
                },
                {
                    "source": ".dynamicSurfaceTension",
                    "target": "surfaceTensionComp.dynamicSurfaceTension"
                },
                {
                    "source": ".gravityDirection",
                    "target": "applyForces.gravityVector"
                },
                {
                    "source": ".gravityMagnitude",
                    "target": "applyForces.gravityMagnitude"
                },
                {
                    "source": ".dropletThreshold",
                    "target": "applyForces.dropletThreshold"
                },
                {
                    "source": ".bboxMin",
                    "target": "computePreliminaryGuideAndEmit.bboxMin"
                },
                {
                    "source": ".bboxMax",
                    "target": "computePreliminaryGuideAndEmit.bboxMax"
                },
                {
                    "source": ".bboxTransform",
                    "target": "computePreliminaryGuideAndEmit.bboxTransform"
                },
                {
                    "source": ".deleteExceedingPoints",
                    "target": "reseedPoint.deleteExceedingPoints"
                },
                {
                    "source": ".masterVoxelSize",
                    "target": "ifGuidingEnabled.falseCase"
                },
                {
                    "source": ".enableGuiding",
                    "target": "ifGuidingEnabled.condition"
                },
                {
                    "source": ".simulationCachePath",
                    "target": "computePreliminaryGuideAndEmit.simulationCachePath"
                },
                {
                    "source": ".simulationCacheFilename",
                    "target": "computePreliminaryGuideAndEmit.simulationCacheFilename"
                },
                {
                    "source": ".reseedGuideOverlap",
                    "target": "computeFinalGuideAndReseed.reseedGuideOverlap"
                },
                {
                    "source": ".reseedLiquidOverlap",
                    "target": "computeFinalGuideAndReseed.reseedLiquidOverlap"
                },
                {
                    "source": ".minReseedAirDistance",
                    "target": "computeFinalGuideAndReseed.minReseedAirDistance"
                },
                {
                    "source": ".guideVoxelScale",
                    "target": "initGuideAndVoxelSize.guideVoxelScale"
                },
                {
                    "source": ".masterVoxelSize",
                    "target": "initGuideAndVoxelSize.masterVoxelSize"
                },
                {
                    "source": ".reseedLiquidOverlap",
                    "target": "initGuideAndVoxelSize.reseedLiquidOverlap"
                },
                {
                    "source": ".reseedGuideOverlap",
                    "target": "initGuideAndVoxelSize.reseedGuideOverlap"
                },
                {
                    "source": ".minSimulationDepth",
                    "target": "initGuideAndVoxelSize.minSimulationDepth"
                },
                {
                    "source": ".enableGuiding",
                    "target": "initGuideAndVoxelSize.enableGuiding"
                },
                {
                    "source": ".simulationCachePath",
                    "target": "initGuideAndVoxelSize.simulationCachePath"
                },
                {
                    "source": ".simulationCacheFilename",
                    "target": "initGuideAndVoxelSize.simulationCacheFilename"
                },
                {
                    "source": ".computeGuideFromSimulationCache",
                    "target": "initGuideAndVoxelSize.computeGuideFromSimulationCache"
                },
                {
                    "source": ".computeGuideFromMesh",
                    "target": "initGuideAndVoxelSize.computeGuideFromMesh"
                },
                {
                    "source": "evaluateStep.outLiquidObject",
                    "target": ".Liquid"
                },
                {
                    "source": "evaluateStep.outSolidObject",
                    "target": ".Solid"
                },
                {
                    "source": ".loopingCondition",
                    "target": "evaluateStep.condition"
                },
                {
                    "source": "evaluateStep.outCondition",
                    "target": ".outLoopingCondition"
                },
                {
                    "source": "getSolidsObjectName.value",
                    "target": "voxelizeSolids.objectId"
                },
                {
                    "source": "voxelizeSolids.value",
                    "target": "computePointTolevelset.object_solid"
                },
                {
                    "source": "voxelizeSolids.value",
                    "target": "computePreliminaryGuideAndEmit.solidObject"
                },
                {
                    "source": "voxelizeSolids.value",
                    "target": "computeFinalGuideAndReseed.solidsObject"
                },
                {
                    "source": "voxelizeSolids.value",
                    "target": "transportAndKill.solidObject"
                },
                {
                    "source": "voxelizeSolids.value",
                    "target": "reseedPoint.solidsObject"
                },
                {
                    "source": "ifGuidingEnabled.output",
                    "target": "voxelizeSolids.masterVoxelSize"
                },
                {
                    "source": "createLiquidObject.value",
                    "target": "initSim.trueCase"
                },
                {
                    "source": "createLiquidObject.value",
                    "target": "transportAndKill.liquidObject"
                },
                {
                    "source": "createLiquidObject.value",
                    "target": "initGuideAndVoxelSize.liquidObject"
                },
                {
                    "source": "initSim.value",
                    "target": "computePreliminaryGuideAndEmit.liquidObject"
                },
                {
                    "source": "transportAndKill.value",
                    "target": "initSim.falseCase"
                },
                {
                    "source": "flipPointToGrid.value",
                    "target": "coarsenRefine.object"
                },
                {
                    "source": "isAdaptive.value",
                    "target": "flipPointToGrid.isAdaptive"
                },
                {
                    "source": "computePointTolevelset.liquid_out",
                    "target": "flipPointToGrid.object"
                },
                {
                    "source": "flipPointToGrid.value",
                    "target": "copyVelocityToPoint1.object"
                },
                {
                    "source": "coarsenRefine.value",
                    "target": "reseedPoint.object"
                },
                {
                    "source": "copyVelocityToPoint.value",
                    "target": "computeDroplet.object"
                },
                {
                    "source": "reseedPoint.value",
                    "target": "copyVelocityToPoint.object"
                },
                {
                    "source": "computeDroplet.value",
                    "target": "if.trueCase"
                },
                {
                    "source": "copyVelocityToPoint1.value",
                    "target": "if.falseCase"
                },
                {
                    "source": "isAdaptive1.value",
                    "target": "if.condition"
                },
                {
                    "source": "if.output",
                    "target": "computeFinalGuideAndReseed.liquidObject"
                },
                {
                    "source": "isAdaptive1.value",
                    "target": "computeDroplet.isAdaptive"
                },
                {
                    "source": "getdt1.value",
                    "target": "hydrodynamics.dt"
                },
                {
                    "source": "hydrodynamics.value",
                    "target": "deleteSurfacePressure.LiquidIn"
                },
                {
                    "source": "isAdaptive1.value",
                    "target": "hydrodynamics.refineInterior"
                },
                {
                    "source": "computeFinalGuideAndReseed.outSolidsObject",
                    "target": "hydrodynamics.solidsObject"
                },
                {
                    "source": "surfaceTensionComp.value",
                    "target": "hydrodynamics.object"
                },
                {
                    "source": "getdt1.value",
                    "target": "vorticityComp.dt"
                },
                {
                    "source": "getdt1.value",
                    "target": "surfaceTensionComp.dt"
                },
                {
                    "source": "isAdaptive1.value",
                    "target": "flipGridToPoint.isAdaptive"
                },
                {
                    "source": "flipGridToPoint.value",
                    "target": "deleteCollocatedFlip.LiquidIn"
                },
                {
                    "source": "vorticityComp.value",
                    "target": "flipGridToPoint.object"
                },
                {
                    "source": "isAdaptive.value",
                    "target": "computePreliminaryGuideAndEmit.isAdaptive"
                },
                {
                    "source": "isAdaptive1.value",
                    "target": "applyForces.isAdaptive"
                },
                {
                    "source": "addSurfacePressure.LiquidOut",
                    "target": "surfaceTensionComp.object"
                },
                {
                    "source": "applyForces.value",
                    "target": "addSurfacePressure.LiquidIn"
                },
                {
                    "source": "deleteSurfacePressure.LiquidOut",
                    "target": "vorticityComp.object"
                },
                {
                    "source": "deleteCollocatedFlip.LiquidOut",
                    "target": "evaluateStep.liquidObject"
                },
                {
                    "source": "computePreliminaryGuideAndEmit.outLiquidObject",
                    "target": "computePointTolevelset.object_liquid"
                },
                {
                    "source": "voxelizeAccelerators.outObject",
                    "target": "applyForces.forceObject"
                },
                {
                    "source": "computePreliminaryGuideAndEmit.outGuideObject",
                    "target": "computeFinalGuideAndReseed.guideObject"
                },
                {
                    "source": "minGapDistance.value",
                    "target": "computePreliminaryGuideAndEmit.minGapDistance"
                },
                {
                    "source": "minAirPocketDistance.value",
                    "target": "computePreliminaryGuideAndEmit.minAirPocketDistance"
                },
                {
                    "source": "initGuideAndVoxelSize.outGuideVoxelSize",
                    "target": "computePreliminaryGuideAndEmit.guideVoxelScale"
                },
                {
                    "source": "initGuideAndVoxelSize.outGuideObject",
                    "target": "computePreliminaryGuideAndEmit.guideObject"
                },
                {
                    "source": "computeFinalGuideAndReseed.outLiquidObject",
                    "target": "applyForces.object"
                },
                {
                    "source": "minGapDistance.value",
                    "target": "computeFinalGuideAndReseed.minGapDistance"
                },
                {
                    "source": "minAirPocketDistance.value",
                    "target": "computeFinalGuideAndReseed.minAirPocketDistance"
                },
                {
                    "source": "computeFinalGuideAndReseed.outSolidsObject",
                    "target": "evaluateStep.solidObject"
                },
                {
                    "source": "minGapDistance.value",
                    "target": "initGuideAndVoxelSize.minGapDistance"
                },
                {
                    "source": "minAirPocketDistance.value",
                    "target": "initGuideAndVoxelSize.minAirPocketDistance"
                },
                {
                    "source": "initGuideAndVoxelSize.outGuideVoxelSize",
                    "target": "ifGuidingEnabled.trueCase"
                }
            ],
            "values": [
                {
                    "valueName": "voxelizeSolids.masterVoxelSize",
                    "value": "0f"
                },
                {
                    "valueName": "voxelizeSolids.voxelScale",
                    "value": "1f"
                },
                {
                    "valueName": "voxelizeSolids.thickeningRadius",
                    "value": "1f"
                },
                {
                    "valueName": "voxelizeSolids.detailBandWidth",
                    "value": "0f"
                },
                {
                    "valueName": "voxelizeSolids.isAero",
                    "value": "false"
                },
                {
                    "valueName": "voxelizeSolids.isEmitter",
                    "value": "false"
                },
                {
                    "valueName": "voxelizeSolids.isForce",
                    "value": "false"
                },
                {
                    "valueName": "coarsenRefine.refinementConstant",
                    "value": "1f"
                },
                {
                    "valueName": "hydrodynamics.refineInterior",
                    "value": "false"
                },
                {
                    "valueName": "hydrodynamics.dt",
                    "value": "0f"
                },
                {
                    "valueName": "hydrodynamics.density",
                    "value": "1000f"
                },
                {
                    "valueName": "flipGridToPoint.velocityDiffusion",
                    "value": "0f"
                },
                {
                    "valueName": "flipGridToPoint.fluidVelocityKernel",
                    "value": "0.3f"
                },
                {
                    "valueName": "flipGridToPoint.PICDepthFactor",
                    "value": "1f"
                },
                {
                    "valueName": "flipGridToPoint.isAdaptive",
                    "value": "false"
                },
                {
                    "valueName": "flipGridToPoint.picUpdateNewPoints",
                    "value": "false"
                },
                {
                    "valueName": "flipGridToPoint.newPointsStartId",
                    "value": "0L"
                },
                {
                    "valueName": "minGapDistance.val",
                    "value": "2.5f"
                },
                {
                    "valueName": "minAirPocketDistance.val",
                    "value": "2.5f"
                }
            ]
        }
    ]
}