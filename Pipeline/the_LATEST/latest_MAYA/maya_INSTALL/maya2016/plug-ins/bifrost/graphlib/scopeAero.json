{
    "header": {
        "metadata": [
            {
                "metaName": "adskGraphlibVersion",
                "metaType": "string",
                "metaValue": "1.0"
            },
            {
                "metaName": "adskFileFormatVersion",
                "metaValue": "100L"
            }
        ]
    },
    "dependencies": [
        {
            "uri": "file:///scopeVoxelAero.json"
        },
        {
            "uri": "file:///scopePointAero.json"
        },
        {
            "uri": "file:///scopeVoxelAeroFlip.json"
        },
        {
            "uri": "file:///scopePointAeroFlip.json"
        },
        {
            "uri": "file:///basenodes.json"
        },
        {
            "uri": "file:///scopeVoxelAero.json"
        },
        {
            "uri": "file:///scopePointAero.json"
        },
        {
            "uri": "file:///scopeVoxelAeroFlip.json"
        },
        {
            "uri": "file:///scopePointAeroFlip.json"
        },
        {
            "uri": "file:///basenodes.json"
        }
    ],
    "types": [],
    "operators": [],
    "compounds": [
        {
            "name": "Bifrost::Nodes::Misc::scopeAero",
            "ports": [
                {
                    "portName": "outObject",
                    "portDirection": "output",
                    "portType": "Bifrost::Types::Object"
                },
                {
                    "portName": "inObject",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Object"
                }
            ],
            "compoundNodes": [
                {
                    "nodeName": "scopePointAero",
                    "nodeType": "Bifrost::Nodes::Misc::scopePointAero"
                },
                {
                    "nodeName": "scopeVoxelAero",
                    "nodeType": "Bifrost::Nodes::Misc::scopeVoxelAero"
                },
                {
                    "nodeName": "mainOut",
                    "nodeType": "Bifrost::Nodes::Misc::valueString"
                },
                {
                    "nodeName": "if",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "getPerFrameCachingName",
                    "nodeType": "Bifrost::Nodes::_privNames::getPerFrameCachingName"
                },
                {
                    "nodeName": "getBoolContextValue",
                    "nodeType": "Bifrost::Nodes::Misc::getContextValueBool"
                },
                {
                    "nodeName": "scopeVoxelAeroFlip",
                    "nodeType": "Bifrost::Nodes::Misc::scopeVoxelAeroFlip"
                },
                {
                    "nodeName": "scopePointAeroFlip",
                    "nodeType": "Bifrost::Nodes::Misc::scopePointAeroFlip"
                }
            ],
            "connections": [
                {
                    "source": "if.output",
                    "target": ".outObject"
                },
                {
                    "source": ".inObject",
                    "target": "if.falseCase"
                },
                {
                    "source": ".inObject",
                    "target": "scopeVoxelAeroFlip.inObject"
                },
                {
                    "source": "mainOut.value",
                    "target": "scopePointAero.scopeName"
                },
                {
                    "source": "scopeVoxelAero.outObject",
                    "target": "scopePointAero.inObject"
                },
                {
                    "source": "scopePointAero.scopedObject",
                    "target": "if.trueCase"
                },
                {
                    "source": "mainOut.value",
                    "target": "scopeVoxelAero.scopeName"
                },
                {
                    "source": "scopePointAeroFlip.outObject",
                    "target": "scopeVoxelAero.inObject"
                },
                {
                    "source": "mainOut.value",
                    "target": "scopeVoxelAeroFlip.scopeName"
                },
                {
                    "source": "mainOut.value",
                    "target": "scopePointAeroFlip.scopeName"
                },
                {
                    "source": "getBoolContextValue.value",
                    "target": "if.condition"
                },
                {
                    "source": "getPerFrameCachingName.value",
                    "target": "getBoolContextValue.name"
                },
                {
                    "source": "scopeVoxelAeroFlip.outObject",
                    "target": "scopePointAeroFlip.inObject"
                }
            ],
            "values": [
                {
                    "valueName": "mainOut.str",
                    "valueType": "string",
                    "value": "mainOut"
                }
            ]
        }
    ]
}