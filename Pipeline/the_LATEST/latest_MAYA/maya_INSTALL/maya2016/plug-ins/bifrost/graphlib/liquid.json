{
    "header": {
        "metadata": [
            {
                "metaName": "adskGraphlibVersion",
                "metaType": "string",
                "metaValue": "1.0"
            },
            {
                "metaName": "adskFileFormatVersion",
                "metaValue": "100L"
            }
        ]
    },
    "dependencies": [
        {
            "uri": "file:///createMeshes.json"
        },
        {
            "uri": "file:///keepMeshes.json"
        },
        {
            "uri": "file:///createObjectWhenCaching.json"
        },
        {
            "uri": "file:///cacheObjectToDisk.json"
        },
        {
            "uri": "file:///solveLiquid.json"
        },
        {
            "uri": "file:///scopeLiquid.json"
        },
        {
            "uri": "file:///scopeVoxelLiquid.json"
        },
        {
            "uri": "file:///scopePointLiquid.json"
        },
        {
            "uri": "file:///scopeSolids.json"
        },
        {
            "uri": "file:///foam.json"
        },
        {
            "uri": "file:///createEmptyItems.json"
        },
        {
            "uri": "file:///updateSubStepIterator.json"
        },
        {
            "uri": "file:///basenodes.json"
        },
        {
            "uri": "file:///createMeshes.json"
        },
        {
            "uri": "file:///keepMeshes.json"
        },
        {
            "uri": "file:///createObjectWhenCaching.json"
        },
        {
            "uri": "file:///cacheObjectToDisk.json"
        },
        {
            "uri": "file:///solveLiquid.json"
        },
        {
            "uri": "file:///scopeLiquid.json"
        },
        {
            "uri": "file:///scopeVoxelLiquid.json"
        },
        {
            "uri": "file:///scopePointLiquid.json"
        },
        {
            "uri": "file:///scopeSolids.json"
        },
        {
            "uri": "file:///foam.json"
        },
        {
            "uri": "file:///createEmptyItems.json"
        },
        {
            "uri": "file:///updateSubStepIterator.json"
        },
        {
            "uri": "file:///basenodes.json"
        }
    ],
    "types": [],
    "operators": [],
    "compounds": [
        {
            "name": "liquid",
            "ports": [
                {
                    "portName": "Emitters",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::IOMeshArray"
                },
                {
                    "portName": "Colliders",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::IOMeshArray"
                },
                {
                    "portName": "Accelerators",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::IOMeshArray"
                },
                {
                    "portName": "masterVoxelSize",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "gravityMagnitude",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "gravityDirection",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Vec3Float"
                },
                {
                    "portName": "solidVoxelScale",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "forceVoxelScale",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "transportStepAdaptivity",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "transportTimeScale",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "minSteps",
                    "portDirection": "input",
                    "portType": "int"
                },
                {
                    "portName": "maxSteps",
                    "portDirection": "input",
                    "portType": "int"
                },
                {
                    "portName": "dropletThreshold",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "dropletMergeBackDepth",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "surfaceBandWidth",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "interiorParticleDensity",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "surfaceParticleDensity",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "killplanes",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Mat44FloatArray"
                },
                {
                    "portName": "viscosityScale",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "Liquid",
                    "portDirection": "output",
                    "portType": "Bifrost::Types::ObjectDescriptor"
                },
                {
                    "portName": "Solid",
                    "portDirection": "output",
                    "portType": "Bifrost::Types::ObjectDescriptor"
                },
                {
                    "portName": "surfaceTension",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "vorticityDecay",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "vorticityMult",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "vorticityMax",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "surfaceTensionEnable",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "vorticityEnable",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "Foam",
                    "portDirection": "output",
                    "portType": "Bifrost::Types::ObjectDescriptor"
                },
                {
                    "portName": "cameraMatrixList",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Mat44FloatArray"
                },
                {
                    "portName": "enableFoam",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "enableGuiding",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "computeGuideFromHighResLiquid",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "minSimulationDepth",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "guideVoxelScale",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "reseedParticleDensity",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "reseedGuideOverlap",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "reseedLiquidOverlap",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "Guides",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::IOMeshArray"
                },
                {
                    "portName": "minReseedAirDistance",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "simulationCacheFilename",
                    "portDirection": "input",
                    "portType": "string"
                },
                {
                    "portName": "simulationCachePath",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Filepath"
                },
                {
                    "portName": "computeGuideFromSimulationCache",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "computeGuideFromMesh",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "clipBBoxMin",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Vec3Float"
                },
                {
                    "portName": "clipBBoxMax",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Vec3Float"
                },
                {
                    "portName": "clipBBoxTransform",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Mat44Float"
                },
                {
                    "portName": "liquidCacheControl",
                    "portDirection": "input",
                    "portType": "int"
                },
                {
                    "portName": "liquidCompressionQuality",
                    "portDirection": "input",
                    "portType": "int"
                },
                {
                    "portName": "liquidCachePath",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Filepath"
                },
                {
                    "portName": "liquidCacheFileName",
                    "portDirection": "input",
                    "portType": "string"
                },
                {
                    "portName": "enableLiquidCache",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "solidCacheControl",
                    "portDirection": "input",
                    "portType": "int"
                },
                {
                    "portName": "solidCompressionQuality",
                    "portDirection": "input",
                    "portType": "int"
                },
                {
                    "portName": "solidCachePath",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Filepath"
                },
                {
                    "portName": "solidCacheFileName",
                    "portDirection": "input",
                    "portType": "string"
                },
                {
                    "portName": "enableSolidCache",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "foamCacheControl",
                    "portDirection": "input",
                    "portType": "int"
                },
                {
                    "portName": "foamCompressionQuality",
                    "portDirection": "input",
                    "portType": "int"
                },
                {
                    "portName": "foamCachePath",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Filepath"
                },
                {
                    "portName": "foamCacheFileName",
                    "portDirection": "input",
                    "portType": "string"
                },
                {
                    "portName": "enableFoamCache",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "deleteExceedingParticles",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "emissionRate",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "minLiquidSpeed",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "minLiquidChurn",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "minLiquidCurvature",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "minLiquidDepth",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "maxLiquidDepth",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "inheritLiquidVelocity",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "emitFlatnessToSurface",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "dissipationRate",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "killDensityThreshold",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "buoyancy",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "collideKillDepth",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "windX",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "windZ",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "surfaceOffset",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "snapToSurface",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "pointRadius",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "preserveVolume",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "maxSolidDepth",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "cameraAdaptivity",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "clipToCameraFrustum",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "cameraFov",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "cameraAspect",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "cameraBuffer",
                    "portDirection": "input",
                    "portType": "float"
                }
            ],
            "compounds": [
                {
                    "name": "subStepLiquid",
                    "ports": [
                        {
                            "portName": "Emitters",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::IOMeshArray"
                        },
                        {
                            "portName": "Colliders",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::IOMeshArray"
                        },
                        {
                            "portName": "Accelerators",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::IOMeshArray"
                        },
                        {
                            "portName": "masterVoxelSize",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "gravityMagnitude",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "gravityDirection",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::Vec3Float"
                        },
                        {
                            "portName": "solidVoxelScale",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "forceVoxelScale",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "transportStepAdaptivity",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "transportTimeScale",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "minSteps",
                            "portDirection": "input",
                            "portType": "int"
                        },
                        {
                            "portName": "maxSteps",
                            "portDirection": "input",
                            "portType": "int"
                        },
                        {
                            "portName": "dropletThreshold",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "dropletMergeBackDepth",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "surfaceBandWidth",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "interiorPointDensity",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "surfacePointDensity",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "killPlanes",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::Mat44FloatArray"
                        },
                        {
                            "portName": "PIC",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "viscosityMult",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "dynamicSurfaceTension",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "vorticityDecay",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "vorticityMul",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "vorticityMax",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "surfaceTensionEnable",
                            "portDirection": "input",
                            "portType": "bool"
                        },
                        {
                            "portName": "vorticityEnable",
                            "portDirection": "input",
                            "portType": "bool"
                        },
                        {
                            "portName": "simulationCacheFilename",
                            "portDirection": "input",
                            "portType": "string"
                        },
                        {
                            "portName": "simulationCachePath",
                            "portDirection": "input",
                            "portType": "string"
                        },
                        {
                            "portName": "enableGuiding",
                            "portDirection": "input",
                            "portType": "bool"
                        },
                        {
                            "portName": "computeGuideFromHighResLiquid",
                            "portDirection": "input",
                            "portType": "bool"
                        },
                        {
                            "portName": "minSimulationDepth",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "guideVoxelScale",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "reseedPointDensity",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "reseedGuideOverlap",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "reseedLiquidOverlap",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "Guides",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::IOMeshArray"
                        },
                        {
                            "portName": "minReseedAirDistance",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "Liquid",
                            "portDirection": "output",
                            "portType": "Bifrost::Types::Object"
                        },
                        {
                            "portName": "Solid",
                            "portDirection": "output",
                            "portType": "Bifrost::Types::Object"
                        },
                        {
                            "portName": "ittr_input",
                            "portDirection": "input",
                            "portType": "bool"
                        },
                        {
                            "portName": "ittr_output",
                            "portDirection": "output",
                            "portType": "bool"
                        },
                        {
                            "portName": "computeGuideFromSimulationCache",
                            "portDirection": "input",
                            "portType": "bool"
                        },
                        {
                            "portName": "computeGuideFromMesh",
                            "portDirection": "input",
                            "portType": "bool"
                        },
                        {
                            "portName": "bboxMin",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::Vec3Float"
                        },
                        {
                            "portName": "bboxMax",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::Vec3Float"
                        },
                        {
                            "portName": "bboxTransform",
                            "portDirection": "input",
                            "portType": "Bifrost::Types::Mat44Float"
                        },
                        {
                            "portName": "deleteExceedingPoints",
                            "portDirection": "input",
                            "portType": "bool"
                        }
                    ],
                    "compoundNodes": [
                        {
                            "nodeName": "solveLiquid",
                            "nodeType": "Bifrost::Nodes::Misc::solveLiquid"
                        },
                        {
                            "nodeName": "updateSubStepIterator",
                            "nodeType": "Bifrost::_private::updateSubStepIterator"
                        },
                        {
                            "nodeName": "getLiquidObjectName",
                            "nodeType": "Bifrost::Nodes::_privNames::getLiquidObjectName"
                        },
                        {
                            "nodeName": "voxel_liquid-volume",
                            "nodeType": "Bifrost::Nodes::Misc::valueString"
                        },
                        {
                            "nodeName": "valueBool",
                            "nodeType": "Bifrost::Nodes::Math::valueBool"
                        }
                    ],
                    "connections": [
                        {
                            "source": ".ittr_input",
                            "target": "valueBool.val"
                        },
                        {
                            "source": "valueBool.value",
                            "target": ".ittr_output"
                        },
                        {
                            "source": ".Emitters",
                            "target": "solveLiquid.Emitters"
                        },
                        {
                            "source": ".Colliders",
                            "target": "solveLiquid.Colliders"
                        },
                        {
                            "source": ".deleteExceedingPoints",
                            "target": "solveLiquid.deleteExceedingPoints"
                        },
                        {
                            "source": ".Accelerators",
                            "target": "solveLiquid.Accelerators"
                        },
                        {
                            "source": ".masterVoxelSize",
                            "target": "solveLiquid.masterVoxelSize"
                        },
                        {
                            "source": ".gravityMagnitude",
                            "target": "solveLiquid.gravityMagnitude"
                        },
                        {
                            "source": ".gravityDirection",
                            "target": "solveLiquid.gravityDirection"
                        },
                        {
                            "source": ".solidVoxelScale",
                            "target": "solveLiquid.solidVoxelScale"
                        },
                        {
                            "source": ".forceVoxelScale",
                            "target": "solveLiquid.forceVoxelScale"
                        },
                        {
                            "source": ".transportStepAdaptivity",
                            "target": "solveLiquid.transportStepAdaptivity"
                        },
                        {
                            "source": ".transportTimeScale",
                            "target": "solveLiquid.transportTimeScale"
                        },
                        {
                            "source": ".minSteps",
                            "target": "solveLiquid.minSteps"
                        },
                        {
                            "source": ".maxSteps",
                            "target": "solveLiquid.maxSteps"
                        },
                        {
                            "source": ".dropletThreshold",
                            "target": "solveLiquid.dropletThreshold"
                        },
                        {
                            "source": ".dropletMergeBackDepth",
                            "target": "solveLiquid.dropletMergeBackDepth"
                        },
                        {
                            "source": ".surfaceBandWidth",
                            "target": "solveLiquid.surfaceBandWidth"
                        },
                        {
                            "source": ".interiorPointDensity",
                            "target": "solveLiquid.interiorPointDensity"
                        },
                        {
                            "source": ".surfacePointDensity",
                            "target": "solveLiquid.surfacePointDensity"
                        },
                        {
                            "source": ".killPlanes",
                            "target": "solveLiquid.killPlanes"
                        },
                        {
                            "source": ".PIC",
                            "target": "solveLiquid.PIC"
                        },
                        {
                            "source": ".viscosityMult",
                            "target": "solveLiquid.viscosityMult"
                        },
                        {
                            "source": ".dynamicSurfaceTension",
                            "target": "solveLiquid.dynamicSurfaceTension"
                        },
                        {
                            "source": ".vorticityDecay",
                            "target": "solveLiquid.vorticityDecay"
                        },
                        {
                            "source": ".vorticityMul",
                            "target": "solveLiquid.vorticityMul"
                        },
                        {
                            "source": ".vorticityMax",
                            "target": "solveLiquid.vorticityMax"
                        },
                        {
                            "source": ".surfaceTensionEnable",
                            "target": "solveLiquid.surfaceTensionEnable"
                        },
                        {
                            "source": ".vorticityEnable",
                            "target": "solveLiquid.vorticityEnable"
                        },
                        {
                            "source": ".simulationCacheFilename",
                            "target": "solveLiquid.simulationCacheFilename"
                        },
                        {
                            "source": ".simulationCachePath",
                            "target": "solveLiquid.simulationCachePath"
                        },
                        {
                            "source": ".enableGuiding",
                            "target": "solveLiquid.enableGuiding"
                        },
                        {
                            "source": ".computeGuideFromHighResLiquid",
                            "target": "solveLiquid.computeGuideFromHighResLiquid"
                        },
                        {
                            "source": ".minSimulationDepth",
                            "target": "solveLiquid.minSimulationDepth"
                        },
                        {
                            "source": ".guideVoxelScale",
                            "target": "solveLiquid.guideVoxelScale"
                        },
                        {
                            "source": ".reseedPointDensity",
                            "target": "solveLiquid.reseedPointDensity"
                        },
                        {
                            "source": ".reseedGuideOverlap",
                            "target": "solveLiquid.reseedGuideOverlap"
                        },
                        {
                            "source": ".reseedLiquidOverlap",
                            "target": "solveLiquid.reseedLiquidOverlap"
                        },
                        {
                            "source": ".Guides",
                            "target": "solveLiquid.Guides"
                        },
                        {
                            "source": ".minReseedAirDistance",
                            "target": "solveLiquid.minReseedAirDistance"
                        },
                        {
                            "source": "solveLiquid.Liquid",
                            "target": ".Liquid"
                        },
                        {
                            "source": "solveLiquid.Solid",
                            "target": ".Solid"
                        },
                        {
                            "source": ".masterVoxelSize",
                            "target": "updateSubStepIterator.mvs"
                        },
                        {
                            "source": "solveLiquid.outLoopingCondition",
                            "target": ".looping_condition"
                        },
                        {
                            "source": ".computeGuideFromSimulationCache",
                            "target": "solveLiquid.computeGuideFromSimulationCache"
                        },
                        {
                            "source": ".computeGuideFromMesh",
                            "target": "solveLiquid.computeGuideFromMesh"
                        },
                        {
                            "source": ".bboxMin",
                            "target": "solveLiquid.bboxMin"
                        },
                        {
                            "source": ".bboxMax",
                            "target": "solveLiquid.bboxMax"
                        },
                        {
                            "source": ".bboxTransform",
                            "target": "solveLiquid.bboxTransform"
                        },
                        {
                            "source": "updateSubStepIterator.condition",
                            "target": "solveLiquid.loopingCondition"
                        },
                        {
                            "source": "getLiquidObjectName.value",
                            "target": "updateSubStepIterator.objectName"
                        },
                        {
                            "source": "voxel_liquid-volume.value",
                            "target": "updateSubStepIterator.compName"
                        }
                    ],
                    "values": [
                        {
                            "valueName": "voxel_liquid-volume.str",
                            "valueType": "string",
                            "value": "voxel_liquid-volume"
                        }
                    ],
                    "whileCompound": {
                        "ports": [
                            {
                                "portKind": "state",
                                "inputPortName": "ittr_input",
                                "outputPortName": "ittr_output"
                            }
                        ]
                    }
                }
            ],
            "compoundNodes": [
                {
                    "nodeName": "createMeshes",
                    "nodeType": "Bifrost::Nodes::_private::createMeshes"
                },
                {
                    "nodeName": "keepMeshes",
                    "nodeType": "Bifrost::_private::keepMeshes"
                },
                {
                    "nodeName": "createObjectWhenCaching",
                    "nodeType": "Bifrost::Nodes::Misc::createObjectWhenCaching"
                },
                {
                    "nodeName": "cacheObjectToDisk",
                    "nodeType": "Bifrost::Nodes::Misc::cacheObjectToDisk"
                },
                {
                    "nodeName": "setDescriptorFromObject",
                    "nodeType": "Bifrost::Nodes::Object::setDescriptorFromObject"
                },
                {
                    "nodeName": "voxel_liquid",
                    "nodeType": "Bifrost::Nodes::Misc::valueString"
                },
                {
                    "nodeName": "scopeLiquid",
                    "nodeType": "Bifrost::Nodes::Misc::scopeLiquid"
                },
                {
                    "nodeName": "createObjectWhenCaching1",
                    "nodeType": "Bifrost::Nodes::Misc::createObjectWhenCaching"
                },
                {
                    "nodeName": "Solids",
                    "nodeType": "Bifrost::Nodes::Misc::valueString"
                },
                {
                    "nodeName": "scopeSolids",
                    "nodeType": "Bifrost::Nodes::Misc::scopeSolids"
                },
                {
                    "nodeName": "setDescriptorFromObject1",
                    "nodeType": "Bifrost::Nodes::Object::setDescriptorFromObject"
                },
                {
                    "nodeName": "foamComp",
                    "nodeType": "foam"
                },
                {
                    "nodeName": "if",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "setDescriptorFromObject2",
                    "nodeType": "Bifrost::Nodes::Object::setDescriptorFromObject"
                },
                {
                    "nodeName": "createEmptyItems",
                    "nodeType": "Bifrost::Nodes::Misc::createEmptyItems"
                },
                {
                    "nodeName": "subStepLiquid",
                    "nodeType": "subStepLiquid"
                },
                {
                    "nodeName": "initTimestepCFL",
                    "nodeType": "Bifrost::Nodes::_private::initTimestepCFL"
                },
                {
                    "nodeName": "cacheObjectToDisk1",
                    "nodeType": "Bifrost::Nodes::Misc::cacheObjectToDisk"
                },
                {
                    "nodeName": "getLiquidCachePath",
                    "nodeType": "Bifrost::Nodes::Misc::getStringFromFilepath"
                },
                {
                    "nodeName": "getFoamCachePath",
                    "nodeType": "Bifrost::Nodes::Misc::getStringFromFilepath"
                },
                {
                    "nodeName": "getSolidsCachePath",
                    "nodeType": "Bifrost::Nodes::Misc::getStringFromFilepath"
                },
                {
                    "nodeName": "getSimCachePath",
                    "nodeType": "Bifrost::Nodes::Misc::getStringFromFilepath"
                }
            ],
            "connections": [
                {
                    "source": "setDescriptorFromObject.value",
                    "target": ".Liquid"
                },
                {
                    "source": ".Emitters",
                    "target": "createMeshes.emitters"
                },
                {
                    "source": ".Colliders",
                    "target": "createMeshes.colliders"
                },
                {
                    "source": ".Accelerators",
                    "target": "createMeshes.accelerators"
                },
                {
                    "source": "setDescriptorFromObject1.value",
                    "target": ".Solid"
                },
                {
                    "source": ".cameraMatrixList",
                    "target": "foamComp.cameraMatrixList"
                },
                {
                    "source": "if.output",
                    "target": ".Foam"
                },
                {
                    "source": ".enableFoam",
                    "target": "if.condition"
                },
                {
                    "source": ".Guides",
                    "target": "createMeshes.guides"
                },
                {
                    "source": ".masterVoxelSize",
                    "target": "subStepLiquid.masterVoxelSize"
                },
                {
                    "source": ".deleteExceedingParticles",
                    "target": "subStepLiquid.deleteExceedingPoints"
                },
                {
                    "source": ".gravityMagnitude",
                    "target": "subStepLiquid.gravityMagnitude"
                },
                {
                    "source": ".gravityDirection",
                    "target": "subStepLiquid.gravityDirection"
                },
                {
                    "source": ".solidVoxelScale",
                    "target": "subStepLiquid.solidVoxelScale"
                },
                {
                    "source": ".forceVoxelScale",
                    "target": "subStepLiquid.forceVoxelScale"
                },
                {
                    "source": ".transportStepAdaptivity",
                    "target": "subStepLiquid.transportStepAdaptivity"
                },
                {
                    "source": ".transportTimeScale",
                    "target": "subStepLiquid.transportTimeScale"
                },
                {
                    "source": ".minSteps",
                    "target": "subStepLiquid.minSteps"
                },
                {
                    "source": ".maxSteps",
                    "target": "subStepLiquid.maxSteps"
                },
                {
                    "source": ".dropletThreshold",
                    "target": "subStepLiquid.dropletThreshold"
                },
                {
                    "source": ".dropletMergeBackDepth",
                    "target": "subStepLiquid.dropletMergeBackDepth"
                },
                {
                    "source": ".surfaceBandWidth",
                    "target": "subStepLiquid.surfaceBandWidth"
                },
                {
                    "source": ".interiorParticleDensity",
                    "target": "subStepLiquid.interiorPointDensity"
                },
                {
                    "source": ".surfaceParticleDensity",
                    "target": "subStepLiquid.surfacePointDensity"
                },
                {
                    "source": ".killplanes",
                    "target": "subStepLiquid.killPlanes"
                },
                {
                    "source": ".viscosityScale",
                    "target": "subStepLiquid.viscosityMult"
                },
                {
                    "source": ".surfaceTension",
                    "target": "subStepLiquid.dynamicSurfaceTension"
                },
                {
                    "source": ".vorticityDecay",
                    "target": "subStepLiquid.vorticityDecay"
                },
                {
                    "source": ".vorticityMult",
                    "target": "subStepLiquid.vorticityMul"
                },
                {
                    "source": ".vorticityMax",
                    "target": "subStepLiquid.vorticityMax"
                },
                {
                    "source": ".surfaceTensionEnable",
                    "target": "subStepLiquid.surfaceTensionEnable"
                },
                {
                    "source": ".vorticityEnable",
                    "target": "subStepLiquid.vorticityEnable"
                },
                {
                    "source": ".enableGuiding",
                    "target": "subStepLiquid.enableGuiding"
                },
                {
                    "source": ".computeGuideFromHighResLiquid",
                    "target": "subStepLiquid.computeGuideFromHighResLiquid"
                },
                {
                    "source": ".minSimulationDepth",
                    "target": "subStepLiquid.minSimulationDepth"
                },
                {
                    "source": ".guideVoxelScale",
                    "target": "subStepLiquid.guideVoxelScale"
                },
                {
                    "source": ".reseedParticleDensity",
                    "target": "subStepLiquid.reseedPointDensity"
                },
                {
                    "source": ".reseedGuideOverlap",
                    "target": "subStepLiquid.reseedGuideOverlap"
                },
                {
                    "source": ".reseedLiquidOverlap",
                    "target": "subStepLiquid.reseedLiquidOverlap"
                },
                {
                    "source": ".minReseedAirDistance",
                    "target": "subStepLiquid.minReseedAirDistance"
                },
                {
                    "source": ".simulationCacheFilename",
                    "target": "subStepLiquid.simulationCacheFilename"
                },
                {
                    "source": ".computeGuideFromSimulationCache",
                    "target": "subStepLiquid.computeGuideFromSimulationCache"
                },
                {
                    "source": ".computeGuideFromMesh",
                    "target": "subStepLiquid.computeGuideFromMesh"
                },
                {
                    "source": ".clipBBoxMin",
                    "target": "subStepLiquid.bboxMin"
                },
                {
                    "source": ".clipBBoxMax",
                    "target": "subStepLiquid.bboxMax"
                },
                {
                    "source": ".clipBBoxTransform",
                    "target": "subStepLiquid.bboxTransform"
                },
                {
                    "source": ".liquidCompressionQuality",
                    "target": "cacheObjectToDisk.compressionQuality"
                },
                {
                    "source": ".liquidCacheFileName",
                    "target": "cacheObjectToDisk.cacheFileName"
                },
                {
                    "source": ".enableLiquidCache",
                    "target": "cacheObjectToDisk.enable"
                },
                {
                    "source": ".enableLiquidCache",
                    "target": "createObjectWhenCaching.enable"
                },
                {
                    "source": ".liquidCacheControl",
                    "target": "createObjectWhenCaching.cacheControl"
                },
                {
                    "source": ".enableSolidCache",
                    "target": "createObjectWhenCaching1.enable"
                },
                {
                    "source": ".solidCacheControl",
                    "target": "createObjectWhenCaching1.cacheControl"
                },
                {
                    "source": ".foamCacheControl",
                    "target": "foamComp.cacheControl"
                },
                {
                    "source": ".foamCompressionQuality",
                    "target": "foamComp.compressionQuality"
                },
                {
                    "source": ".foamCacheFileName",
                    "target": "foamComp.cacheFileName"
                },
                {
                    "source": ".enableFoamCache",
                    "target": "foamComp.enableFoamCache"
                },
                {
                    "source": ".enableSolidCache",
                    "target": "cacheObjectToDisk1.enable"
                },
                {
                    "source": ".solidCacheFileName",
                    "target": "cacheObjectToDisk1.cacheFileName"
                },
                {
                    "source": ".solidCompressionQuality",
                    "target": "cacheObjectToDisk1.compressionQuality"
                },
                {
                    "source": ".emissionRate",
                    "target": "foamComp.emissionRate"
                },
                {
                    "source": ".minLiquidSpeed",
                    "target": "foamComp.minLiquidSpeed"
                },
                {
                    "source": ".minLiquidChurn",
                    "target": "foamComp.minLiquidChurn"
                },
                {
                    "source": ".minLiquidCurvature",
                    "target": "foamComp.minLiquidCurvature"
                },
                {
                    "source": ".minLiquidDepth",
                    "target": "foamComp.minLiquidDepth"
                },
                {
                    "source": ".maxLiquidDepth",
                    "target": "foamComp.maxLiquidDepth"
                },
                {
                    "source": ".inheritLiquidVelocity",
                    "target": "foamComp.inheritLiquidVelocity"
                },
                {
                    "source": ".emitFlatnessToSurface",
                    "target": "foamComp.emitFlatnessToSurface"
                },
                {
                    "source": ".dissipationRate",
                    "target": "foamComp.dissipationRate"
                },
                {
                    "source": ".killDensityThreshold",
                    "target": "foamComp.killDensityThreshold"
                },
                {
                    "source": ".buoyancy",
                    "target": "foamComp.buoyancy"
                },
                {
                    "source": ".collideKillDepth",
                    "target": "foamComp.collideKillDepth"
                },
                {
                    "source": ".windX",
                    "target": "foamComp.windX"
                },
                {
                    "source": ".windZ",
                    "target": "foamComp.windZ"
                },
                {
                    "source": ".surfaceOffset",
                    "target": "foamComp.surfaceOffset"
                },
                {
                    "source": ".snapToSurface",
                    "target": "foamComp.snapToSurface"
                },
                {
                    "source": ".pointRadius",
                    "target": "foamComp.pointRadius"
                },
                {
                    "source": ".preserveVolume",
                    "target": "foamComp.preserveVolume"
                },
                {
                    "source": ".gravityMagnitude",
                    "target": "foamComp.gravity"
                },
                {
                    "source": ".maxSolidDepth",
                    "target": "foamComp.maxSolidDepth"
                },
                {
                    "source": ".cameraAdaptivity",
                    "target": "foamComp.cameraAdaptivity"
                },
                {
                    "source": ".clipToCameraFrustum",
                    "target": "foamComp.clipToCameraFrustum"
                },
                {
                    "source": ".cameraFov",
                    "target": "foamComp.cameraFov"
                },
                {
                    "source": ".cameraAspect",
                    "target": "foamComp.cameraAspect"
                },
                {
                    "source": ".cameraBuffer",
                    "target": "foamComp.cameraBuffer"
                },
                {
                    "source": ".liquidCachePath",
                    "target": "getLiquidCachePath.str"
                },
                {
                    "source": ".solidCachePath",
                    "target": "getSolidsCachePath.str"
                },
                {
                    "source": ".foamCachePath",
                    "target": "getFoamCachePath.str"
                },
                {
                    "source": ".simulationCachePath",
                    "target": "getSimCachePath.str"
                },
                {
                    "source": "createMeshes.accelerators1",
                    "target": "keepMeshes.accelerators"
                },
                {
                    "source": "createMeshes.colliders1",
                    "target": "keepMeshes.colliders"
                },
                {
                    "source": "createMeshes.emitters1",
                    "target": "keepMeshes.emitters"
                },
                {
                    "source": "createMeshes.guides1",
                    "target": "keepMeshes.guides"
                },
                {
                    "source": "createMeshes.emitters1",
                    "target": "subStepLiquid.Emitters"
                },
                {
                    "source": "createMeshes.colliders1",
                    "target": "subStepLiquid.Colliders"
                },
                {
                    "source": "createMeshes.accelerators1",
                    "target": "subStepLiquid.Accelerators"
                },
                {
                    "source": "createMeshes.guides1",
                    "target": "subStepLiquid.Guides"
                },
                {
                    "source": "createObjectWhenCaching.outObject",
                    "target": "keepMeshes.inObject"
                },
                {
                    "source": "keepMeshes.outObject",
                    "target": "cacheObjectToDisk.inObject"
                },
                {
                    "source": "voxel_liquid.value",
                    "target": "createObjectWhenCaching.name"
                },
                {
                    "source": "subStepLiquid.Liquid",
                    "target": "createObjectWhenCaching.inObject"
                },
                {
                    "source": "subStepLiquid.Liquid",
                    "target": "createObjectWhenCaching.newObject"
                },
                {
                    "source": "createObjectWhenCaching.outCacheControl",
                    "target": "cacheObjectToDisk.cacheControl"
                },
                {
                    "source": "cacheObjectToDisk.outObject",
                    "target": "scopeLiquid.inObject"
                },
                {
                    "source": "getLiquidCachePath.value",
                    "target": "cacheObjectToDisk.cachePath"
                },
                {
                    "source": "scopeLiquid.outObject",
                    "target": "setDescriptorFromObject.object"
                },
                {
                    "source": "setDescriptorFromObject.value",
                    "target": "foamComp.liquidObject"
                },
                {
                    "source": "Solids.value",
                    "target": "createObjectWhenCaching1.name"
                },
                {
                    "source": "subStepLiquid.Solid",
                    "target": "createObjectWhenCaching1.inObject"
                },
                {
                    "source": "subStepLiquid.Solid",
                    "target": "createObjectWhenCaching1.newObject"
                },
                {
                    "source": "createObjectWhenCaching1.outObject",
                    "target": "cacheObjectToDisk1.inObject"
                },
                {
                    "source": "createObjectWhenCaching1.outCacheControl",
                    "target": "cacheObjectToDisk1.cacheControl"
                },
                {
                    "source": "scopeSolids.outObject",
                    "target": "setDescriptorFromObject1.object"
                },
                {
                    "source": "cacheObjectToDisk1.outObject",
                    "target": "scopeSolids.inObject"
                },
                {
                    "source": "setDescriptorFromObject1.value",
                    "target": "foamComp.solidObject"
                },
                {
                    "source": "foamComp.Foam",
                    "target": "if.trueCase"
                },
                {
                    "source": "getFoamCachePath.value",
                    "target": "foamComp.cachePath"
                },
                {
                    "source": "setDescriptorFromObject2.value",
                    "target": "if.falseCase"
                },
                {
                    "source": "createEmptyItems.emptyObject",
                    "target": "setDescriptorFromObject2.object"
                },
                {
                    "source": "initTimestepCFL.value",
                    "target": "subStepLiquid.ittr_input"
                },
                {
                    "source": "getSimCachePath.value",
                    "target": "subStepLiquid.simulationCachePath"
                },
                {
                    "source": "getSolidsCachePath.value",
                    "target": "cacheObjectToDisk1.cachePath"
                }
            ],
            "values": [
                {
                    "valueName": "createObjectWhenCaching.compNameToTest",
                    "valueType": "string",
                    "value": "_voxel"
                },
                {
                    "valueName": "createObjectWhenCaching.filePath",
                    "valueType": "string",
                    "value": "putFilePathHere"
                },
                {
                    "valueName": "createObjectWhenCaching.fileName",
                    "valueType": "string",
                    "value": "putFileNameHere"
                },
                {
                    "valueName": "cacheObjectToDisk.cacheControl",
                    "value": "0L"
                },
                {
                    "valueName": "cacheObjectToDisk.compressionQuality",
                    "value": "0L"
                },
                {
                    "valueName": "cacheObjectToDisk.cachePath",
                    "valueType": "string",
                    "value": "putCachePathHere"
                },
                {
                    "valueName": "cacheObjectToDisk.cacheFileName",
                    "valueType": "string",
                    "value": "liquid"
                },
                {
                    "valueName": "cacheObjectToDisk.pointComponentName",
                    "valueType": "string",
                    "value": "voxel_liquid-particle"
                },
                {
                    "valueName": "cacheObjectToDisk.voxelComponentName",
                    "valueType": "string",
                    "value": "voxel_liquid-volume"
                },
                {
                    "valueName": "voxel_liquid.str",
                    "valueType": "string",
                    "value": "voxel_liquid"
                },
                {
                    "valueName": "createObjectWhenCaching1.compNameToTest",
                    "valueType": "string",
                    "value": "_voxel"
                },
                {
                    "valueName": "createObjectWhenCaching1.filePath",
                    "valueType": "string",
                    "value": "putFileNameHere"
                },
                {
                    "valueName": "createObjectWhenCaching1.fileName",
                    "valueType": "string",
                    "value": "putFilePathHere"
                },
                {
                    "valueName": "Solids.str",
                    "valueType": "string",
                    "value": "Solids"
                },
                {
                    "valueName": "foamComp.emissionRate",
                    "value": "1000f"
                },
                {
                    "valueName": "foamComp.minLiquidSpeed",
                    "value": "0.2f"
                },
                {
                    "valueName": "foamComp.minLiquidChurn",
                    "value": "1f"
                },
                {
                    "valueName": "foamComp.minLiquidCurvature",
                    "value": "0.5f"
                },
                {
                    "valueName": "foamComp.inheritLiquidVelocity",
                    "value": "1f"
                },
                {
                    "valueName": "foamComp.emitFlatnessToSurface",
                    "value": "0f"
                },
                {
                    "valueName": "foamComp.dissipationRate",
                    "value": "5f"
                },
                {
                    "valueName": "foamComp.killDensityThreshold",
                    "value": "0.05f"
                },
                {
                    "valueName": "foamComp.buoyancy",
                    "value": "1f"
                },
                {
                    "valueName": "foamComp.collideKillDepth",
                    "value": "0f"
                },
                {
                    "valueName": "foamComp.windX",
                    "value": "0f"
                },
                {
                    "valueName": "foamComp.windZ",
                    "value": "0f"
                },
                {
                    "valueName": "foamComp.surfaceOffset",
                    "value": "0f"
                },
                {
                    "valueName": "foamComp.snapToSurface",
                    "value": "false"
                },
                {
                    "valueName": "foamComp.pointRadius",
                    "value": "0.3f"
                },
                {
                    "valueName": "foamComp.preserveVolume",
                    "value": "1f"
                },
                {
                    "valueName": "foamComp.gravity",
                    "value": "9.8f"
                },
                {
                    "valueName": "foamComp.maxSolidDepth",
                    "value": "0.3f"
                },
                {
                    "valueName": "foamComp.cameraAdaptivity",
                    "value": "0f"
                },
                {
                    "valueName": "foamComp.clipToCameraFrustum",
                    "value": "false"
                },
                {
                    "valueName": "foamComp.cameraFov",
                    "value": "110f"
                },
                {
                    "valueName": "foamComp.cameraAspect",
                    "value": "1f"
                },
                {
                    "valueName": "foamComp.cameraBuffer",
                    "value": "1f"
                },
                {
                    "valueName": "subStepLiquid.PIC",
                    "value": "1f"
                },
                {
                    "valueName": "cacheObjectToDisk1.pointComponentName",
                    "valueType": "string",
                    "value": "none"
                },
                {
                    "valueName": "cacheObjectToDisk1.voxelComponentName",
                    "valueType": "string",
                    "value": "Solids-volume"
                }
            ]
        }
    ]
}