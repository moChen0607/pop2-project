{
    "header": {
        "metadata": [
            {
                "metaName": "adskGraphlibVersion",
                "metaType": "string",
                "metaValue": "1.0"
            },
            {
                "metaName": "adskFileFormatVersion",
                "metaValue": "100L"
            }
        ]
    },
    "dependencies": [
        {
            "uri": "file:///getLiquidChannels.json"
        },
        {
            "uri": "file:///getDt.json"
        },
        {
            "uri": "file:///getFoamChannels.json"
        },
        {
            "uri": "file:///syncComponentAndReblock.json"
        },
        {
            "uri": "file:///basenodes.json"
        },
        {
            "uri": "file:///getLiquidChannels.json"
        },
        {
            "uri": "file:///getDt.json"
        },
        {
            "uri": "file:///getFoamChannels.json"
        },
        {
            "uri": "file:///syncComponentAndReblock.json"
        },
        {
            "uri": "file:///basenodes.json"
        }
    ],
    "types": [],
    "operators": [],
    "compounds": [
        {
            "name": "Bifrost::_private::emitSplash",
            "ports": [
                {
                    "portName": "object",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Object"
                },
                {
                    "portName": "liquidObject",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Object"
                },
                {
                    "portName": "solidsObject",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Object"
                },
                {
                    "portName": "rate",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "minSpeed",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "minChurn",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "minCurvature",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "minLiquidDepth",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "maxLiquidDepth",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "maxSolidDepth",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "inheritVelocity",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "emitFlatness",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "offset",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "value",
                    "portDirection": "output",
                    "portType": "Bifrost::Types::Object"
                },
                {
                    "portName": "cameraAdaptivity",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "cameraMatrix",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Mat44FloatArray"
                },
                {
                    "portName": "clipToFrustum",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "fov",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "aspect",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "cameraBufferDistance",
                    "portDirection": "input",
                    "portType": "float"
                }
            ],
            "compoundNodes": [
                {
                    "nodeName": "emitSplash",
                    "nodeType": "Bifrost::Nodes::Channel::emitSplash"
                },
                {
                    "nodeName": "getFoamChannels",
                    "nodeType": "Bifrost::_private::getFoamChannels"
                },
                {
                    "nodeName": "getLiquidChannels",
                    "nodeType": "Bifrost::_private::getLiquidChannels"
                },
                {
                    "nodeName": "getdt",
                    "nodeType": "Bifrost::Nodes::Misc::getDt"
                },
                {
                    "nodeName": "getSolidsCompName",
                    "nodeType": "Bifrost::Nodes::_privNames::getVoxelComponentName"
                },
                {
                    "nodeName": "getVoxelComponent",
                    "nodeType": "Bifrost::Nodes::Component::getVoxelComponent"
                },
                {
                    "nodeName": "getFloatVoxelChannel",
                    "nodeType": "Bifrost::Nodes::Channel::getChannel"
                },
                {
                    "nodeName": "getDistanceChannelName",
                    "nodeType": "Bifrost::Nodes::_privNames::getVoxelDistanceName"
                },
                {
                    "nodeName": "syncComponent",
                    "nodeType": "Bifrost::Nodes::Component::syncComponent"
                },
                {
                    "nodeName": "syncFlow",
                    "nodeType": "Bifrost::Nodes::Object::syncFlow"
                },
                {
                    "nodeName": "getEmptyVoxelChannelFloat",
                    "nodeType": "Bifrost::Nodes::Empty::voxelChannelFloat"
                },
                {
                    "nodeName": "syncComponentAndReblock",
                    "nodeType": "Bifrost::Nodes::Misc::syncComponentAndReblock"
                }
            ],
            "connections": [
                {
                    "source": ".object",
                    "target": "getFoamChannels.object"
                },
                {
                    "source": ".liquidObject",
                    "target": "getLiquidChannels.object"
                },
                {
                    "source": ".solidsObject",
                    "target": "getVoxelComponent.object"
                },
                {
                    "source": ".solidsObject",
                    "target": "getSolidsCompName.object"
                },
                {
                    "source": ".rate",
                    "target": "emitSplash.rate"
                },
                {
                    "source": ".minSpeed",
                    "target": "emitSplash.minSpeed"
                },
                {
                    "source": ".minChurn",
                    "target": "emitSplash.minChurn"
                },
                {
                    "source": ".minCurvature",
                    "target": "emitSplash.minCurvature"
                },
                {
                    "source": ".minLiquidDepth",
                    "target": "emitSplash.minLiquidDepth"
                },
                {
                    "source": ".maxLiquidDepth",
                    "target": "emitSplash.maxLiquidDepth"
                },
                {
                    "source": ".maxSolidDepth",
                    "target": "emitSplash.maxSolidDepth"
                },
                {
                    "source": ".inheritVelocity",
                    "target": "emitSplash.inheritVelocity"
                },
                {
                    "source": ".emitFlatness",
                    "target": "emitSplash.emitFlatness"
                },
                {
                    "source": ".offset",
                    "target": "emitSplash.offset"
                },
                {
                    "source": ".object",
                    "target": "syncFlow.object"
                },
                {
                    "source": "syncFlow.value",
                    "target": ".value"
                },
                {
                    "source": ".cameraAdaptivity",
                    "target": "emitSplash.adaptivity"
                },
                {
                    "source": ".cameraMatrix",
                    "target": "emitSplash.cameraMat44"
                },
                {
                    "source": ".clipToFrustum",
                    "target": "emitSplash.clipToFrustum"
                },
                {
                    "source": ".fov",
                    "target": "emitSplash.fov"
                },
                {
                    "source": ".aspect",
                    "target": "emitSplash.aspect"
                },
                {
                    "source": ".cameraBufferDistance",
                    "target": "emitSplash.cameraBufferDistance"
                },
                {
                    "source": "getFoamChannels.density",
                    "target": "emitSplash.pointDensity"
                },
                {
                    "source": "getFoamChannels.position",
                    "target": "emitSplash.pointPosition"
                },
                {
                    "source": "getFoamChannels.velocity",
                    "target": "emitSplash.pointVelocity"
                },
                {
                    "source": "getLiquidChannels.distance",
                    "target": "emitSplash.voxelDistance"
                },
                {
                    "source": "getLiquidChannels.velociy_u",
                    "target": "emitSplash.voxelVelocity_u"
                },
                {
                    "source": "getLiquidChannels.velociy_v",
                    "target": "emitSplash.voxelVelocity_v"
                },
                {
                    "source": "getLiquidChannels.velociy_w",
                    "target": "emitSplash.voxelVelocity_w"
                },
                {
                    "source": "getdt.value",
                    "target": "emitSplash.dt"
                },
                {
                    "source": "getFloatVoxelChannel.value",
                    "target": "emitSplash.solidDistance"
                },
                {
                    "source": "emitSplash.value",
                    "target": "syncComponentAndReblock.channel"
                },
                {
                    "source": "getFoamChannels.foamComponent",
                    "target": "syncComponentAndReblock.component"
                },
                {
                    "source": "getSolidsCompName.value",
                    "target": "getVoxelComponent.name"
                },
                {
                    "source": "getVoxelComponent.value",
                    "target": "getFloatVoxelChannel.component"
                },
                {
                    "source": "getVoxelComponent.value",
                    "target": "getDistanceChannelName.component"
                },
                {
                    "source": "getDistanceChannelName.value",
                    "target": "getFloatVoxelChannel.name"
                },
                {
                    "source": "getEmptyVoxelChannelFloat.value",
                    "target": "getFloatVoxelChannel.override"
                },
                {
                    "source": "syncComponent.outputComponent",
                    "target": "syncFlow.item"
                },
                {
                    "source": "syncComponentAndReblock.outComponent",
                    "target": "syncComponent.component"
                },
                {
                    "source": "syncComponentAndReblock.outChannel",
                    "target": "syncComponent.channel"
                }
            ],
            "values": [
                {
                    "valueName": "emitSplash.emitRadius",
                    "value": "1f"
                }
            ]
        }
    ]
}