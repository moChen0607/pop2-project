{
    "header": {
        "metadata": [
            {
                "metaName": "adskGraphlibVersion",
                "metaType": "string",
                "metaValue": "1.0"
            },
            {
                "metaName": "adskFileFormatVersion",
                "metaValue": "100L"
            }
        ]
    },
    "dependencies": [
        {
            "uri": "file:///basenodes.json"
        },
        {
            "uri": "file:///createEmptyItems.json"
        },
        {
            "uri": "file:///computeSmokeDistancesFlipAero.json"
        },
        {
            "uri": "file:///coarsenRefineFlipAero.json"
        },
        {
            "uri": "file:///basenodes.json"
        },
        {
            "uri": "file:///createEmptyItems.json"
        },
        {
            "uri": "file:///computeSmokeDistancesFlipAero.json"
        },
        {
            "uri": "file:///coarsenRefineFlipAero.json"
        }
    ],
    "types": [],
    "operators": [],
    "compounds": [
        {
            "name": "Bifrost::_incomplet::evaluateFlipAero",
            "ports": [
                {
                    "portName": "emitters",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::IOMeshArray"
                },
                {
                    "portName": "solids",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::IOMeshArray"
                },
                {
                    "portName": "accelerators",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::IOMeshArray"
                },
                {
                    "portName": "adaptiveMeshes",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::IOMeshArray"
                },
                {
                    "portName": "airDensity",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "airTemperature",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "flipPointDensity",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "masterVoxelSize",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "bboxMin",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Vec3Float"
                },
                {
                    "portName": "bboxMax",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Vec3Float"
                },
                {
                    "portName": "transform",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Mat44Float"
                },
                {
                    "portName": "killplanes",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Mat44FloatArray"
                },
                {
                    "portName": "gravityVector",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Vec3Float"
                },
                {
                    "portName": "smokeThreshold",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "transportTimeScale",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "transportStepAdaptivity",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "minSteps",
                    "portDirection": "input",
                    "portType": "int"
                },
                {
                    "portName": "maxSteps",
                    "portDirection": "input",
                    "portType": "int"
                },
                {
                    "portName": "isAdaptive",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "aeroObjectOut",
                    "portDirection": "output",
                    "portType": "Bifrost::Types::Object"
                },
                {
                    "portName": "solidObjectOut",
                    "portDirection": "output",
                    "portType": "Bifrost::Types::Object"
                },
                {
                    "portName": "camObjectOut",
                    "portDirection": "output",
                    "portType": "Bifrost::Types::Object"
                }
            ],
            "compoundNodes": [
                {
                    "nodeName": "aerodynamicsFlipAero",
                    "nodeType": "Bifrost::Nodes::_incObject::aerodynamicsFlipAero"
                },
                {
                    "nodeName": "emitFlipAero",
                    "nodeType": "Bifrost::Nodes::_incObject::emitFlipAero"
                },
                {
                    "nodeName": "flipGridToPointFlipAero",
                    "nodeType": "Bifrost::Nodes::_incObject::flipGridToPointFlipAero"
                },
                {
                    "nodeName": "flipPointToGridFlipAero",
                    "nodeType": "Bifrost::Nodes::_incObject::flipPointToGridFlipAero"
                },
                {
                    "nodeName": "pointCntFlipAero",
                    "nodeType": "Bifrost::Nodes::_incObject::pointCntFlipAero"
                },
                {
                    "nodeName": "reseedPointFlipAero",
                    "nodeType": "Bifrost::Nodes::_incObject::reseedPointFlipAero"
                },
                {
                    "nodeName": "transportFlipAero",
                    "nodeType": "Bifrost::Nodes::_incObject::transportFlipAero"
                },
                {
                    "nodeName": "voxelizeFlipAero",
                    "nodeType": "Bifrost::Nodes::_incObject::voxelizeFlipAero"
                },
                {
                    "nodeName": "computeSmokeDistancesFlipAero",
                    "nodeType": "Bifrost::_private::computeSmokeDistancesFlipAero"
                },
                {
                    "nodeName": "coarsenRefineFlipAero",
                    "nodeType": "Bifrost::_private::coarsenRefineFlipAero"
                }
            ],
            "connections": [
                {
                    "source": ".emitters",
                    "target": "voxelizeFlipAero.emitters"
                },
                {
                    "source": ".solids",
                    "target": "voxelizeFlipAero.solids"
                },
                {
                    "source": ".accelerators",
                    "target": "voxelizeFlipAero.accelerators"
                },
                {
                    "source": ".adaptiveMeshes",
                    "target": "voxelizeFlipAero.adaptiveMeshes"
                },
                {
                    "source": ".masterVoxelSize",
                    "target": "voxelizeFlipAero.masterVoxelSize"
                },
                {
                    "source": ".airDensity",
                    "target": "voxelizeFlipAero.airDensity"
                },
                {
                    "source": ".airTemperature",
                    "target": "voxelizeFlipAero.airTemperature"
                },
                {
                    "source": ".isAdaptive",
                    "target": "voxelizeFlipAero.isAdaptive"
                },
                {
                    "source": ".killplanes",
                    "target": "transportFlipAero.killplanes"
                },
                {
                    "source": ".minSteps",
                    "target": "transportFlipAero.minSteps"
                },
                {
                    "source": ".maxSteps",
                    "target": "transportFlipAero.maxSteps"
                },
                {
                    "source": ".transportTimeScale",
                    "target": "transportFlipAero.transportTimeScale"
                },
                {
                    "source": ".transportStepAdaptivity",
                    "target": "transportFlipAero.cfl"
                },
                {
                    "source": ".isAdaptive",
                    "target": "transportFlipAero.isAdaptive"
                },
                {
                    "source": ".isAdaptive",
                    "target": "flipPointToGridFlipAero.isAdaptive"
                },
                {
                    "source": ".bboxMin",
                    "target": "emitFlipAero.bboxMin"
                },
                {
                    "source": ".bboxMax",
                    "target": "emitFlipAero.bboxMax"
                },
                {
                    "source": ".transform",
                    "target": "emitFlipAero.transform"
                },
                {
                    "source": ".masterVoxelSize",
                    "target": "emitFlipAero.masterVoxelSize"
                },
                {
                    "source": ".masterVoxelSize",
                    "target": "reseedPointFlipAero.masterVoxelSize"
                },
                {
                    "source": ".airDensity",
                    "target": "aerodynamicsFlipAero.density"
                },
                {
                    "source": ".flipPointDensity",
                    "target": "reseedPointFlipAero.flipPointDensity"
                },
                {
                    "source": "flipGridToPointFlipAero.value",
                    "target": ".aeroObjectOut"
                },
                {
                    "source": "aerodynamicsFlipAero.solidObjectOut",
                    "target": ".solidObjectOut"
                },
                {
                    "source": ".smokeThreshold",
                    "target": "computeSmokeDistancesFlipAero.smokeThreshold"
                },
                {
                    "source": "voxelizeFlipAero.cameraObject",
                    "target": ".camObjectOut"
                },
                {
                    "source": "reseedPointFlipAero.aeroObjectOut",
                    "target": "aerodynamicsFlipAero.aeroObject"
                },
                {
                    "source": "reseedPointFlipAero.solidObjectOut",
                    "target": "aerodynamicsFlipAero.solidObject"
                },
                {
                    "source": "aerodynamicsFlipAero.aeroObjectOut",
                    "target": "flipGridToPointFlipAero.aeroObject"
                },
                {
                    "source": "flipPointToGridFlipAero.value",
                    "target": "emitFlipAero.aeroObject"
                },
                {
                    "source": "voxelizeFlipAero.emitFlipObject",
                    "target": "emitFlipAero.emitFlipObject"
                },
                {
                    "source": "emitFlipAero.value",
                    "target": "computeSmokeDistancesFlipAero.aeroObject"
                },
                {
                    "source": "pointCntFlipAero.flipPointCnt",
                    "target": "flipGridToPointFlipAero.flipPointsStartId"
                },
                {
                    "source": "pointCntFlipAero.aeroObjectOut",
                    "target": "flipPointToGridFlipAero.aeroObject"
                },
                {
                    "source": "transportFlipAero.aeroObjectOut",
                    "target": "pointCntFlipAero.aeroObject"
                },
                {
                    "source": "transportFlipAero.solidObjectOut",
                    "target": "reseedPointFlipAero.solidObject"
                },
                {
                    "source": "coarsenRefineFlipAero.aeroObjectOut",
                    "target": "reseedPointFlipAero.aeroObject"
                },
                {
                    "source": "voxelizeFlipAero.aeroObject",
                    "target": "transportFlipAero.aeroObject"
                },
                {
                    "source": "voxelizeFlipAero.solidObject",
                    "target": "transportFlipAero.solidObject"
                },
                {
                    "source": "transportFlipAero.solidObjectOut",
                    "target": "coarsenRefineFlipAero.solidObjectOut"
                },
                {
                    "source": "voxelizeFlipAero.cameraObject",
                    "target": "coarsenRefineFlipAero.camObjectOut"
                },
                {
                    "source": "computeSmokeDistancesFlipAero.aeroObjectOut",
                    "target": "coarsenRefineFlipAero.aeroObject"
                }
            ],
            "values": []
        }
    ]
}