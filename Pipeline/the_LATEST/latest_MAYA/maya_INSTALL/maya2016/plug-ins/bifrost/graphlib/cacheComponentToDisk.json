{
    "header": {
        "metadata": [
            {
                "metaName": "adskGraphlibVersion",
                "metaType": "string",
                "metaValue": "1.0"
            },
            {
                "metaName": "adskFileFormatVersion",
                "metaValue": "100L"
            }
        ]
    },
    "dependencies": [
        {
            "uri": "file:///basenodes.json"
        }
    ],
    "types": [],
    "operators": [],
    "compounds": [
        {
            "name": "cacheComponentToDisk",
            "ports": [
                {
                    "portName": "inComponent",
                    "portDirection": "input",
					"portType": "Bifrost::Types::PointComponent"
                },
                {
                    "portName": "outComponent",
                    "portDirection": "output",
					"portType": "Bifrost::Types::PointComponent"
                },
                {
                    "portName": "useGlobals",
                    "portDirection": "input",
                    "portType": "int"
                },
                {
                    "portName": "cacheControl",
                    "portDirection": "input",
                    "portType": "int"
                },
                {
                    "portName": "compressionQuality",
                    "portDirection": "input",
                    "portType": "int"
                },
                {
                    "portName": "cachePath",
                    "portDirection": "input",
                    "portType": "string"
                },
                {
                    "portName": "cacheFileName",
                    "portDirection": "input",
                    "portType": "string"
                },
                {
                    "portName": "writeCacheName",
                    "portDirection": "input",
                    "portType": "string"
                },
                {
                    "portName": "writeCachePath",
                    "portDirection": "input",
                    "portType": "string"
                }
            ],
            "compoundNodes": [
                {
                    "nodeName": "cacheOnDisk",
                    "nodeType": "Bifrost::Nodes::Component::cacheOnDisk"
                },
                {
                    "nodeName": "getStringContextValue",
                    "nodeType": "Bifrost::Nodes::Misc::getContextValueString"
                },
                {
                    "nodeName": "getCachePathName",
                    "nodeType": "Bifrost::Nodes::_privNames::getCachePathName"
                },
                {
                    "nodeName": "getCacheBaseName",
                    "nodeType": "Bifrost::Nodes::_privNames::getCacheBaseName"
                },
                {
                    "nodeName": "getStringContextValue1",
                    "nodeType": "Bifrost::Nodes::Misc::getContextValueString"
                },
                {
                    "nodeName": "getFrameName",
                    "nodeType": "Bifrost::Nodes::_privNames::getFrameName"
                },
                {
                    "nodeName": "getCompressionQualityName",
                    "nodeType": "Bifrost::Nodes::_privNames::getCompressionQualityName"
                },
                {
                    "nodeName": "loadFromDisk",
                    "nodeType": "Bifrost::Nodes::Component::loadFromDisk"
                },
                {
                    "nodeName": "getStringContextValue4",
                    "nodeType": "Bifrost::Nodes::Misc::getContextValueString"
                },
                {
                    "nodeName": "getStringContextValue5",
                    "nodeType": "Bifrost::Nodes::Misc::getContextValueString"
                },
                {
                    "nodeName": "getCachePathName1",
                    "nodeType": "Bifrost::Nodes::_privNames::getCachePathName"
                },
                {
                    "nodeName": "getCacheBaseName1",
                    "nodeType": "Bifrost::Nodes::_privNames::getCacheBaseName"
                },
                {
                    "nodeName": "getFrameName1",
                    "nodeType": "Bifrost::Nodes::_privNames::getFrameName"
                },
                {
                    "nodeName": "IfRead",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "ifWrite",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "getCachingControlName",
                    "nodeType": "Bifrost::Nodes::_privNames::getCachingControlName"
                },
                {
                    "nodeName": "getInt32ContextValue",
                    "nodeType": "Bifrost::Nodes::Misc::getContextValueInt32"
                },
                {
                    "nodeName": "equalToTwo",
                    "nodeType": "Bifrost::Nodes::Math::equal"
                },
                {
                    "nodeName": "getInt32ContextValue1",
                    "nodeType": "Bifrost::Nodes::Misc::getContextValueInt32"
                },
                {
                    "nodeName": "getInt32ContextValue2",
                    "nodeType": "Bifrost::Nodes::Misc::getContextValueInt32"
                },
                {
                    "nodeName": "getInt32ContextValue3",
                    "nodeType": "Bifrost::Nodes::Misc::getContextValueInt32"
                },
                {
                    "nodeName": "equalToOne",
                    "nodeType": "Bifrost::Nodes::Math::equal"
                },
                {
                    "nodeName": "useGlobalsEqual1",
                    "nodeType": "Bifrost::Nodes::Math::equal"
                },
                {
                    "nodeName": "ifUseGlobalCacheControl",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "ifUseGlobalCompQuality",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "ifUseGlobalWritePath",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "ifUseGlobalWriteBase",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "inputWriteBase",
                    "nodeType": "Bifrost::Nodes::Misc::valueString"
                },
                {
                    "nodeName": "inputWritePath",
                    "nodeType": "Bifrost::Nodes::Misc::valueString"
                },
                {
                    "nodeName": "ifUseGlobalReadBase",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "ifUseGlobalReadPath",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "inputReadBase",
                    "nodeType": "Bifrost::Nodes::Misc::valueString"
                },
                {
                    "nodeName": "inputReadPath",
                    "nodeType": "Bifrost::Nodes::Misc::valueString"
                },
                {
                    "nodeName": "cacheWriteName",
                    "nodeType": "Bifrost::Nodes::_private::cacheName"
                },
                {
                    "nodeName": "cacheReadName",
                    "nodeType": "Bifrost::Nodes::_private::cacheName"
                }
            ],
            "connections": [
                {
                    "source": ".inComponent",
                    "target": "cacheOnDisk.component"
                },
                {
                    "source": ".inComponent",
                    "target": "loadFromDisk.component"
                },
                {
                    "source": ".inComponent",
                    "target": "IfRead.falseCase"
                },
                {
                    "source": "ifWrite.output",
                    "target": ".outComponent"
                },
                {
                    "source": ".useGlobals",
                    "target": "useGlobalsEqual1.first"
                },
                {
                    "source": ".cacheControl",
                    "target": "ifUseGlobalCacheControl.falseCase"
                },
                {
                    "source": ".compressionQuality",
                    "target": "ifUseGlobalCompQuality.falseCase"
                },
                {
                    "source": ".cacheFileName",
                    "target": "inputReadBase.str"
                },
                {
                    "source": ".cachePath",
                    "target": "inputReadPath.str"
                },
                {
                    "source": ".writeCacheName",
                    "target": "inputWriteBase.str"
                },
                {
                    "source": ".writeCachePath",
                    "target": "inputWritePath.str"
                },
                {
                    "source": ".writeCacheName",
                    "target": "cacheWriteName.suffix"
                },
                {
                    "source": ".cacheFileName",
                    "target": "cacheReadName.suffix"
                },
                {
                    "source": "cacheOnDisk.value",
                    "target": "ifWrite.trueCase"
                },
                {
                    "source": "ifUseGlobalCompQuality.output",
                    "target": "cacheOnDisk.compressionQuality"
                },
                {
                    "source": "ifUseGlobalWritePath.output",
                    "target": "cacheOnDisk.filePath"
                },
                {
                    "source": "ifUseGlobalWriteBase.output",
                    "target": "cacheOnDisk.fileName"
                },
                {
                    "source": "getInt32ContextValue1.value",
                    "target": "cacheOnDisk.frame"
                },
                {
                    "source": "getCachePathName.value",
                    "target": "getStringContextValue.name"
                },
                {
                    "source": "getStringContextValue.value",
                    "target": "ifUseGlobalWritePath.trueCase"
                },
                {
                    "source": "getCacheBaseName.value",
                    "target": "getStringContextValue1.name"
                },
                {
                    "source": "getStringContextValue1.value",
                    "target": "cacheWriteName.prefix"
                },
                {
                    "source": "getFrameName.value",
                    "target": "getInt32ContextValue1.name"
                },
                {
                    "source": "getCompressionQualityName.value",
                    "target": "getInt32ContextValue2.name"
                },
                {
                    "source": "loadFromDisk.value",
                    "target": "IfRead.trueCase"
                },
                {
                    "source": "getInt32ContextValue3.value",
                    "target": "loadFromDisk.frame"
                },
                {
                    "source": "ifUseGlobalReadBase.output",
                    "target": "loadFromDisk.fileName"
                },
                {
                    "source": "ifUseGlobalReadPath.output",
                    "target": "loadFromDisk.filePath"
                },
                {
                    "source": "getCachePathName1.value",
                    "target": "getStringContextValue4.name"
                },
                {
                    "source": "getStringContextValue4.value",
                    "target": "ifUseGlobalReadPath.trueCase"
                },
                {
                    "source": "getCacheBaseName1.value",
                    "target": "getStringContextValue5.name"
                },
                {
                    "source": "getStringContextValue5.value",
                    "target": "cacheReadName.prefix"
                },
                {
                    "source": "getFrameName1.value",
                    "target": "getInt32ContextValue3.name"
                },
                {
                    "source": "IfRead.output",
                    "target": "ifWrite.falseCase"
                },
                {
                    "source": "equalToOne.value",
                    "target": "IfRead.condition"
                },
                {
                    "source": "equalToTwo.value",
                    "target": "ifWrite.condition"
                },
                {
                    "source": "getCachingControlName.value",
                    "target": "getInt32ContextValue.name"
                },
                {
                    "source": "getInt32ContextValue.value",
                    "target": "ifUseGlobalCacheControl.trueCase"
                },
                {
                    "source": "ifUseGlobalCacheControl.output",
                    "target": "equalToTwo.first"
                },
                {
                    "source": "getInt32ContextValue2.value",
                    "target": "ifUseGlobalCompQuality.trueCase"
                },
                {
                    "source": "ifUseGlobalCacheControl.output",
                    "target": "equalToOne.first"
                },
                {
                    "source": "useGlobalsEqual1.value",
                    "target": "ifUseGlobalCacheControl.condition"
                },
                {
                    "source": "useGlobalsEqual1.value",
                    "target": "ifUseGlobalCompQuality.condition"
                },
                {
                    "source": "useGlobalsEqual1.value",
                    "target": "ifUseGlobalWritePath.condition"
                },
                {
                    "source": "useGlobalsEqual1.value",
                    "target": "ifUseGlobalWriteBase.condition"
                },
                {
                    "source": "useGlobalsEqual1.value",
                    "target": "ifUseGlobalReadBase.condition"
                },
                {
                    "source": "useGlobalsEqual1.value",
                    "target": "ifUseGlobalReadPath.condition"
                },
                {
                    "source": "inputWritePath.value",
                    "target": "ifUseGlobalWritePath.falseCase"
                },
                {
                    "source": "inputWriteBase.value",
                    "target": "ifUseGlobalWriteBase.falseCase"
                },
                {
                    "source": "cacheWriteName.value",
                    "target": "ifUseGlobalWriteBase.trueCase"
                },
                {
                    "source": "inputReadBase.value",
                    "target": "ifUseGlobalReadBase.falseCase"
                },
                {
                    "source": "cacheReadName.value",
                    "target": "ifUseGlobalReadBase.trueCase"
                },
                {
                    "source": "inputReadPath.value",
                    "target": "ifUseGlobalReadPath.falseCase"
                }
            ],
            "values": [
                {
                    "valueName": "equalToTwo.second",
                    "value": "2L"
                },
                {
                    "valueName": "equalToOne.second",
                    "value": "1L"
                },
                {
                    "valueName": "useGlobalsEqual1.second",
                    "value": "1L"
                }
            ]
        },
        {
            "name": "cacheComponentToDisk",
            "ports": [
                {
                    "portName": "inComponent",
                    "portDirection": "input",
					"portType": "Bifrost::Types::VoxelComponent"
                },
                {
                    "portName": "outComponent",
                    "portDirection": "output",
					"portType": "Bifrost::Types::VoxelComponent"
                },
                {
                    "portName": "useGlobals",
                    "portDirection": "input",
                    "portType": "int"
                },
                {
                    "portName": "cacheControl",
                    "portDirection": "input",
                    "portType": "int"
                },
                {
                    "portName": "compressionQuality",
                    "portDirection": "input",
                    "portType": "int"
                },
                {
                    "portName": "cachePath",
                    "portDirection": "input",
                    "portType": "string"
                },
                {
                    "portName": "cacheFileName",
                    "portDirection": "input",
                    "portType": "string"
                },
                {
                    "portName": "writeCacheName",
                    "portDirection": "input",
                    "portType": "string"
                },
                {
                    "portName": "writeCachePath",
                    "portDirection": "input",
                    "portType": "string"
                }
            ],
            "compoundNodes": [
                {
                    "nodeName": "cacheOnDisk",
                    "nodeType": "Bifrost::Nodes::Component::cacheOnDisk"
                },
                {
                    "nodeName": "getStringContextValue",
                    "nodeType": "Bifrost::Nodes::Misc::getContextValueString"
                },
                {
                    "nodeName": "getCachePathName",
                    "nodeType": "Bifrost::Nodes::_privNames::getCachePathName"
                },
                {
                    "nodeName": "getCacheBaseName",
                    "nodeType": "Bifrost::Nodes::_privNames::getCacheBaseName"
                },
                {
                    "nodeName": "getStringContextValue1",
                    "nodeType": "Bifrost::Nodes::Misc::getContextValueString"
                },
                {
                    "nodeName": "getFrameName",
                    "nodeType": "Bifrost::Nodes::_privNames::getFrameName"
                },
                {
                    "nodeName": "getCompressionQualityName",
                    "nodeType": "Bifrost::Nodes::_privNames::getCompressionQualityName"
                },
                {
                    "nodeName": "loadFromDisk",
                    "nodeType": "Bifrost::Nodes::Component::loadFromDisk"
                },
                {
                    "nodeName": "getStringContextValue4",
                    "nodeType": "Bifrost::Nodes::Misc::getContextValueString"
                },
                {
                    "nodeName": "getStringContextValue5",
                    "nodeType": "Bifrost::Nodes::Misc::getContextValueString"
                },
                {
                    "nodeName": "getCachePathName1",
                    "nodeType": "Bifrost::Nodes::_privNames::getCachePathName"
                },
                {
                    "nodeName": "getCacheBaseName1",
                    "nodeType": "Bifrost::Nodes::_privNames::getCacheBaseName"
                },
                {
                    "nodeName": "getFrameName1",
                    "nodeType": "Bifrost::Nodes::_privNames::getFrameName"
                },
                {
                    "nodeName": "IfRead",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "ifWrite",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "getCachingControlName",
                    "nodeType": "Bifrost::Nodes::_privNames::getCachingControlName"
                },
                {
                    "nodeName": "getInt32ContextValue",
                    "nodeType": "Bifrost::Nodes::Misc::getContextValueInt32"
                },
                {
                    "nodeName": "equalToTwo",
                    "nodeType": "Bifrost::Nodes::Math::equal"
                },
                {
                    "nodeName": "getInt32ContextValue1",
                    "nodeType": "Bifrost::Nodes::Misc::getContextValueInt32"
                },
                {
                    "nodeName": "getInt32ContextValue2",
                    "nodeType": "Bifrost::Nodes::Misc::getContextValueInt32"
                },
                {
                    "nodeName": "getInt32ContextValue3",
                    "nodeType": "Bifrost::Nodes::Misc::getContextValueInt32"
                },
                {
                    "nodeName": "equalToOne",
                    "nodeType": "Bifrost::Nodes::Math::equal"
                },
                {
                    "nodeName": "useGlobalsEqual1",
                    "nodeType": "Bifrost::Nodes::Math::equal"
                },
                {
                    "nodeName": "ifUseGlobalCacheControl",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "ifUseGlobalCompQuality",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "ifUseGlobalWritePath",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "ifUseGlobalWriteBase",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "inputWriteBase",
                    "nodeType": "Bifrost::Nodes::Misc::valueString"
                },
                {
                    "nodeName": "inputWritePath",
                    "nodeType": "Bifrost::Nodes::Misc::valueString"
                },
                {
                    "nodeName": "ifUseGlobalReadBase",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "ifUseGlobalReadPath",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "inputReadBase",
                    "nodeType": "Bifrost::Nodes::Misc::valueString"
                },
                {
                    "nodeName": "inputReadPath",
                    "nodeType": "Bifrost::Nodes::Misc::valueString"
                },
                {
                    "nodeName": "cacheWriteName",
                    "nodeType": "Bifrost::Nodes::_private::cacheName"
                },
                {
                    "nodeName": "cacheReadName",
                    "nodeType": "Bifrost::Nodes::_private::cacheName"
                }
            ],
            "connections": [
                {
                    "source": ".inComponent",
                    "target": "cacheOnDisk.component"
                },
                {
                    "source": ".inComponent",
                    "target": "loadFromDisk.component"
                },
                {
                    "source": ".inComponent",
                    "target": "IfRead.falseCase"
                },
                {
                    "source": "ifWrite.output",
                    "target": ".outComponent"
                },
                {
                    "source": ".useGlobals",
                    "target": "useGlobalsEqual1.first"
                },
                {
                    "source": ".cacheControl",
                    "target": "ifUseGlobalCacheControl.falseCase"
                },
                {
                    "source": ".compressionQuality",
                    "target": "ifUseGlobalCompQuality.falseCase"
                },
                {
                    "source": ".cacheFileName",
                    "target": "inputReadBase.str"
                },
                {
                    "source": ".cachePath",
                    "target": "inputReadPath.str"
                },
                {
                    "source": ".writeCacheName",
                    "target": "inputWriteBase.str"
                },
                {
                    "source": ".writeCachePath",
                    "target": "inputWritePath.str"
                },
                {
                    "source": ".writeCacheName",
                    "target": "cacheWriteName.suffix"
                },
                {
                    "source": ".cacheFileName",
                    "target": "cacheReadName.suffix"
                },
                {
                    "source": "cacheOnDisk.value",
                    "target": "ifWrite.trueCase"
                },
                {
                    "source": "ifUseGlobalCompQuality.output",
                    "target": "cacheOnDisk.compressionQuality"
                },
                {
                    "source": "ifUseGlobalWritePath.output",
                    "target": "cacheOnDisk.filePath"
                },
                {
                    "source": "ifUseGlobalWriteBase.output",
                    "target": "cacheOnDisk.fileName"
                },
                {
                    "source": "getInt32ContextValue1.value",
                    "target": "cacheOnDisk.frame"
                },
                {
                    "source": "getCachePathName.value",
                    "target": "getStringContextValue.name"
                },
                {
                    "source": "getStringContextValue.value",
                    "target": "ifUseGlobalWritePath.trueCase"
                },
                {
                    "source": "getCacheBaseName.value",
                    "target": "getStringContextValue1.name"
                },
                {
                    "source": "getStringContextValue1.value",
                    "target": "cacheWriteName.prefix"
                },
                {
                    "source": "getFrameName.value",
                    "target": "getInt32ContextValue1.name"
                },
                {
                    "source": "getCompressionQualityName.value",
                    "target": "getInt32ContextValue2.name"
                },
                {
                    "source": "loadFromDisk.value",
                    "target": "IfRead.trueCase"
                },
                {
                    "source": "getInt32ContextValue3.value",
                    "target": "loadFromDisk.frame"
                },
                {
                    "source": "ifUseGlobalReadBase.output",
                    "target": "loadFromDisk.fileName"
                },
                {
                    "source": "ifUseGlobalReadPath.output",
                    "target": "loadFromDisk.filePath"
                },
                {
                    "source": "getCachePathName1.value",
                    "target": "getStringContextValue4.name"
                },
                {
                    "source": "getStringContextValue4.value",
                    "target": "ifUseGlobalReadPath.trueCase"
                },
                {
                    "source": "getCacheBaseName1.value",
                    "target": "getStringContextValue5.name"
                },
                {
                    "source": "getStringContextValue5.value",
                    "target": "cacheReadName.prefix"
                },
                {
                    "source": "getFrameName1.value",
                    "target": "getInt32ContextValue3.name"
                },
                {
                    "source": "IfRead.output",
                    "target": "ifWrite.falseCase"
                },
                {
                    "source": "equalToOne.value",
                    "target": "IfRead.condition"
                },
                {
                    "source": "equalToTwo.value",
                    "target": "ifWrite.condition"
                },
                {
                    "source": "getCachingControlName.value",
                    "target": "getInt32ContextValue.name"
                },
                {
                    "source": "getInt32ContextValue.value",
                    "target": "ifUseGlobalCacheControl.trueCase"
                },
                {
                    "source": "ifUseGlobalCacheControl.output",
                    "target": "equalToTwo.first"
                },
                {
                    "source": "getInt32ContextValue2.value",
                    "target": "ifUseGlobalCompQuality.trueCase"
                },
                {
                    "source": "ifUseGlobalCacheControl.output",
                    "target": "equalToOne.first"
                },
                {
                    "source": "useGlobalsEqual1.value",
                    "target": "ifUseGlobalCacheControl.condition"
                },
                {
                    "source": "useGlobalsEqual1.value",
                    "target": "ifUseGlobalCompQuality.condition"
                },
                {
                    "source": "useGlobalsEqual1.value",
                    "target": "ifUseGlobalWritePath.condition"
                },
                {
                    "source": "useGlobalsEqual1.value",
                    "target": "ifUseGlobalWriteBase.condition"
                },
                {
                    "source": "useGlobalsEqual1.value",
                    "target": "ifUseGlobalReadBase.condition"
                },
                {
                    "source": "useGlobalsEqual1.value",
                    "target": "ifUseGlobalReadPath.condition"
                },
                {
                    "source": "inputWritePath.value",
                    "target": "ifUseGlobalWritePath.falseCase"
                },
                {
                    "source": "inputWriteBase.value",
                    "target": "ifUseGlobalWriteBase.falseCase"
                },
                {
                    "source": "cacheWriteName.value",
                    "target": "ifUseGlobalWriteBase.trueCase"
                },
                {
                    "source": "inputReadBase.value",
                    "target": "ifUseGlobalReadBase.falseCase"
                },
                {
                    "source": "cacheReadName.value",
                    "target": "ifUseGlobalReadBase.trueCase"
                },
                {
                    "source": "inputReadPath.value",
                    "target": "ifUseGlobalReadPath.falseCase"
                }
            ],
            "values": [
                {
                    "valueName": "equalToTwo.second",
                    "value": "2L"
                },
                {
                    "valueName": "equalToOne.second",
                    "value": "1L"
                },
                {
                    "valueName": "useGlobalsEqual1.second",
                    "value": "1L"
                }
            ]
        }
    ]
}