{
    "header": {
        "metadata": [
            {
                "metaName": "adskGraphlibVersion",
                "metaType": "string",
                "metaValue": "1.0"
            },
            {
                "metaName": "adskFileFormatVersion",
                "metaValue": "100L"
            }
        ]
    },
    "dependencies": [
        {
            "uri": "file:///basenodes.json"
        },
        {
            "uri": "file:///getFrame.json"
        },
        {
            "uri": "file:///basenodes.json"
        },
        {
            "uri": "file:///getFrame.json"
        }
    ],
    "types": [],
    "operators": [],
    "compounds": [
        {
            "name": "Bifrost::Nodes::Misc::createObjectWhenCaching",
            "ports": [
                {
                    "portName": "inObject",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Object"
                },
                {
                    "portName": "name",
                    "portDirection": "input",
                    "portType": "string"
                },
                {
                    "portName": "outObject",
                    "portDirection": "output",
                    "portType": "Bifrost::Types::Object"
                },
                {
                    "portName": "cacheControl",
                    "portDirection": "input",
                    "portType": "int"
                },
                {
                    "portName": "enable",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "newObject",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Object"
                },
                {
                    "portName": "compNameToTest",
                    "portDirection": "input",
                    "portType": "string"
                },
                {
                    "portName": "filePath",
                    "portDirection": "input",
                    "portType": "string"
                },
                {
                    "portName": "fileName",
                    "portDirection": "input",
                    "portType": "string"
                },
                {
                    "portName": "outCacheControl",
                    "portDirection": "output",
                    "portType": "int"
                }
            ],
            "compoundNodes": [
                {
                    "nodeName": "equal",
                    "nodeType": "Bifrost::Nodes::Math::equal"
                },
                {
                    "nodeName": "getObject",
                    "nodeType": "Bifrost::Nodes::Object::getObject"
                },
                {
                    "nodeName": "hasObject",
                    "nodeType": "Bifrost::Nodes::Object::hasObject"
                },
                {
                    "nodeName": "ifObjectExists",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "ifReadCache",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "readCache_1",
                    "nodeType": "Bifrost::Nodes::Math::valueInt"
                },
                {
                    "nodeName": "ifCachingEnabled",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "ignoreCache",
                    "nodeType": "Bifrost::Nodes::Math::valueInt"
                },
                {
                    "nodeName": "ifLazyEval",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "ifFrameIsCached",
                    "nodeType": "Bifrost::if"
                },
                {
                    "nodeName": "ccEqual3",
                    "nodeType": "Bifrost::Nodes::Math::equal"
                },
                {
                    "nodeName": "writeCache_2",
                    "nodeType": "Bifrost::Nodes::Math::valueInt"
                },
                {
                    "nodeName": "lazyEval_3",
                    "nodeType": "Bifrost::Nodes::Math::valueInt"
                },
                {
                    "nodeName": "compNameStr",
                    "nodeType": "Bifrost::Nodes::Misc::valueString"
                },
                {
                    "nodeName": "fiePathStr",
                    "nodeType": "Bifrost::Nodes::Misc::valueString"
                },
                {
                    "nodeName": "fileNameStr",
                    "nodeType": "Bifrost::Nodes::Misc::valueString"
                },
                {
                    "nodeName": "isFrameCached",
                    "nodeType": "Bifrost::Nodes::isFrameCached"
                },
                {
                    "nodeName": "getFrame",
                    "nodeType": "Bifrost::Nodes::Misc::getFrame"
                }
            ],
            "connections": [
                {
                    "source": ".inObject",
                    "target": "ifReadCache.falseCase"
                },
                {
                    "source": ".name",
                    "target": "getObject.name"
                },
                {
                    "source": ".name",
                    "target": "hasObject.name"
                },
                {
                    "source": "ifReadCache.output",
                    "target": ".outObject"
                },
                {
                    "source": ".enable",
                    "target": "ifCachingEnabled.condition"
                },
                {
                    "source": ".cacheControl",
                    "target": "ifCachingEnabled.trueCase"
                },
                {
                    "source": ".newObject",
                    "target": "ifObjectExists.falseCase"
                },
                {
                    "source": ".filePath",
                    "target": "fiePathStr.str"
                },
                {
                    "source": ".fileName",
                    "target": "fileNameStr.str"
                },
                {
                    "source": "ifLazyEval.output",
                    "target": ".outCacheControl"
                },
                {
                    "source": ".compNameToTest",
                    "target": "compNameStr.str"
                },
                {
                    "source": "equal.value",
                    "target": "ifReadCache.condition"
                },
                {
                    "source": "readCache_1.value",
                    "target": "equal.second"
                },
                {
                    "source": "ifLazyEval.output",
                    "target": "equal.first"
                },
                {
                    "source": "getObject.value",
                    "target": "ifObjectExists.trueCase"
                },
                {
                    "source": "hasObject.value",
                    "target": "ifObjectExists.condition"
                },
                {
                    "source": "ifObjectExists.output",
                    "target": "ifReadCache.trueCase"
                },
                {
                    "source": "readCache_1.value",
                    "target": "ifFrameIsCached.trueCase"
                },
                {
                    "source": "ignoreCache.value",
                    "target": "ifCachingEnabled.falseCase"
                },
                {
                    "source": "ifCachingEnabled.output",
                    "target": "ccEqual3.first"
                },
                {
                    "source": "ifCachingEnabled.output",
                    "target": "ifLazyEval.falseCase"
                },
                {
                    "source": "ccEqual3.value",
                    "target": "ifLazyEval.condition"
                },
                {
                    "source": "ifFrameIsCached.output",
                    "target": "ifLazyEval.trueCase"
                },
                {
                    "source": "isFrameCached.value",
                    "target": "ifFrameIsCached.condition"
                },
                {
                    "source": "writeCache_2.value",
                    "target": "ifFrameIsCached.falseCase"
                },
                {
                    "source": "lazyEval_3.value",
                    "target": "ccEqual3.second"
                },
                {
                    "source": "compNameStr.value",
                    "target": "isFrameCached.compName"
                },
                {
                    "source": "fiePathStr.value",
                    "target": "isFrameCached.filePath"
                },
                {
                    "source": "fileNameStr.value",
                    "target": "isFrameCached.fileName"
                },
                {
                    "source": "getFrame.value",
                    "target": "isFrameCached.frame"
                }
            ],
            "values": [
                {
                    "valueName": "readCache_1.val",
                    "value": "1L"
                },
                {
                    "valueName": "ignoreCache.val",
                    "value": "0L"
                },
                {
                    "valueName": "writeCache_2.val",
                    "value": "2L"
                },
                {
                    "valueName": "lazyEval_3.val",
                    "value": "3L"
                },
                {
                    "valueName": "compNameStr.str",
                    "valueType": "string",
                    "value": "_voxel"
                },
                {
                    "valueName": "fiePathStr.str",
                    "valueType": "string",
                    "value": "fileName"
                },
                {
                    "valueName": "fileNameStr.str",
                    "valueType": "string",
                    "value": "putFilePathHere"
                }
            ]
        }
    ]
}