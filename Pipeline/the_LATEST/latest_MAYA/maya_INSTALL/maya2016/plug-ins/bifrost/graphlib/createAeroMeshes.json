{
    "header": {
        "metadata": [
            {
                "metaName": "adskGraphlibVersion",
                "metaType": "string",
                "metaValue": "1.0"
            },
            {
                "metaName": "adskFileFormatVersion",
                "metaValue": "100L"
            }
        ]
    },
    "dependencies": [
        {
            "uri": "file:///createMeshes.json"
        },
        {
            "uri": "file:///basenodes.json"
        }
    ],
    "types": [],
    "operators": [],
    "compounds": [
        {
            "name": "Bifrost::Nodes::_private::createAeroMeshes",
            "ports": [
                {
                    "portName": "inEmitters",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::IOMeshArray"
                },
                {
                    "portName": "outEmitters",
                    "portDirection": "output",
                    "portType": "Bifrost::Types::IOMeshArray"
                },
                {
                    "portName": "inColliders",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::IOMeshArray"
                },
                {
                    "portName": "outColliders",
                    "portDirection": "output",
                    "portType": "Bifrost::Types::IOMeshArray"
                },
                {
                    "portName": "inAccelerators",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::IOMeshArray"
                },
                {
                    "portName": "outAccelerators",
                    "portDirection": "output",
                    "portType": "Bifrost::Types::IOMeshArray"
                },
                {
                    "portName": "inAdaptives",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::IOMeshArray"
                },
                {
                    "portName": "outAdaptives",
                    "portDirection": "output",
                    "portType": "Bifrost::Types::IOMeshArray"
                }
            ],
            "compoundNodes": [
                {
                    "nodeName": "createMeshColliders",
                    "nodeType": "Bifrost::Nodes::Mesh::createMeshArray"
                },
                {
                    "nodeName": "createMeshAccelerators",
                    "nodeType": "Bifrost::Nodes::Mesh::createMeshArray"
                },
                {
                    "nodeName": "createMeshAdaptives",
                    "nodeType": "Bifrost::Nodes::Mesh::createMeshArray"
                },
                {
                    "nodeName": "createMeshEmitters",
                    "nodeType": "Bifrost::Nodes::Mesh::createMeshArray"
                }
            ],
            "connections": [
                {
                    "source": ".inColliders",
                    "target": "createMeshColliders.meshArray"
                },
                {
                    "source": "createMeshColliders.value",
                    "target": ".outColliders"
                },
                {
                    "source": ".inAccelerators",
                    "target": "createMeshAccelerators.meshArray"
                },
                {
                    "source": "createMeshAccelerators.value",
                    "target": ".outAccelerators"
                },
                {
                    "source": ".inAdaptives",
                    "target": "createMeshAdaptives.meshArray"
                },
                {
                    "source": "createMeshAdaptives.value",
                    "target": ".outAdaptives"
                },
                {
                    "source": ".inEmitters",
                    "target": "createMeshEmitters.meshArray"
                },
                {
                    "source": "createMeshEmitters.value",
                    "target": ".outEmitters"
                }
            ],
            "values": []
        }
    ]
}