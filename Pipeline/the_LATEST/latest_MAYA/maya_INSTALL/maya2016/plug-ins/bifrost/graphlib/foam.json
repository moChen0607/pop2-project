{
    "header": {
        "metadata": [
            {
                "metaName": "adskGraphlibVersion",
                "metaType": "string",
                "metaValue": "1.0"
            },
            {
                "metaName": "adskFileFormatVersion",
                "metaValue": "100L"
            }
        ]
    },
    "dependencies": [
        {
            "uri": "file:///solveFoam.json"
        },
        {
            "uri": "file:///createObjectWhenCaching.json"
        },
        {
            "uri": "file:///getFoamVelocity.json"
        },
        {
            "uri": "file:///getFoamComponent.json"
        },
        {
            "uri": "file:///createFoamComponent.json"
        },
        {
            "uri": "file:///createFoamObject.json"
        },
        {
            "uri": "file:///dissipatePointDensity.json"
        },
        {
            "uri": "file:///getDt.json"
        },
        {
            "uri": "file:///getFoamDensity.json"
        },
        {
            "uri": "file:///getLiquidChannels.json"
        },
        {
            "uri": "file:///getFoamChannels.json"
        },
        {
            "uri": "file:///getFoamPosition.json"
        },
        {
            "uri": "file:///emitSplash.json"
        },
        {
            "uri": "file:///getLiquidDistance.json"
        },
        {
            "uri": "file:///killPoint.json"
        },
        {
            "uri": "file:///preserveVolume.json"
        },
        {
            "uri": "file:///projectToSurface.json"
        },
        {
            "uri": "file:///transportSplash.json"
        },
        {
            "uri": "file:///updatePointPosition.json"
        },
        {
            "uri": "file:///cacheFoamToScratch.json"
        },
        {
            "uri": "file:///scratchCacheEnable.json"
        },
        {
            "uri": "file:///basenodes.json"
        },
        {
            "uri": "file:///cacheObjectToDisk.json"
        },
        {
            "uri": "file:///solveFoam.json"
        },
        {
            "uri": "file:///createObjectWhenCaching.json"
        },
        {
            "uri": "file:///getFoamVelocity.json"
        },
        {
            "uri": "file:///getFoamComponent.json"
        },
        {
            "uri": "file:///createFoamComponent.json"
        },
        {
            "uri": "file:///createFoamObject.json"
        },
        {
            "uri": "file:///dissipatePointDensity.json"
        },
        {
            "uri": "file:///getDt.json"
        },
        {
            "uri": "file:///getFoamDensity.json"
        },
        {
            "uri": "file:///getLiquidChannels.json"
        },
        {
            "uri": "file:///getFoamChannels.json"
        },
        {
            "uri": "file:///getFoamPosition.json"
        },
        {
            "uri": "file:///emitSplash.json"
        },
        {
            "uri": "file:///getLiquidDistance.json"
        },
        {
            "uri": "file:///killPoint.json"
        },
        {
            "uri": "file:///preserveVolume.json"
        },
        {
            "uri": "file:///projectToSurface.json"
        },
        {
            "uri": "file:///transportSplash.json"
        },
        {
            "uri": "file:///updatePointPosition.json"
        },
        {
            "uri": "file:///cacheFoamToScratch.json"
        },
        {
            "uri": "file:///scratchCacheEnable.json"
        },
        {
            "uri": "file:///basenodes.json"
        },
        {
            "uri": "file:///cacheObjectToDisk.json"
        }
    ],
    "types": [],
    "operators": [],
    "compounds": [
        {
            "name": "foam",
            "ports": [
                {
                    "portName": "liquidObject",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::ObjectDescriptor"
                },
                {
                    "portName": "solidObject",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::ObjectDescriptor"
                },
                {
                    "portName": "emissionRate",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "minLiquidSpeed",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "minLiquidChurn",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "minLiquidCurvature",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "minLiquidDepth",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "maxLiquidDepth",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "inheritLiquidVelocity",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "emitFlatnessToSurface",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "dissipationRate",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "killDensityThreshold",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "buoyancy",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "collideKillDepth",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "windX",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "windZ",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "surfaceOffset",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "snapToSurface",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "pointRadius",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "preserveVolume",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "gravity",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "maxSolidDepth",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "Foam",
                    "portDirection": "output",
                    "portType": "Bifrost::Types::ObjectDescriptor"
                },
                {
                    "portName": "cameraAdaptivity",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "cameraMatrixList",
                    "portDirection": "input",
                    "portType": "Bifrost::Types::Mat44FloatArray"
                },
                {
                    "portName": "clipToCameraFrustum",
                    "portDirection": "input",
                    "portType": "bool"
                },
                {
                    "portName": "cameraFov",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "cameraAspect",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "cameraBuffer",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "cacheControl",
                    "portDirection": "input",
                    "portType": "int"
                },
                {
                    "portName": "compressionQuality",
                    "portDirection": "input",
                    "portType": "int"
                },
                {
                    "portName": "cachePath",
                    "portDirection": "input",
                    "portType": "string"
                },
                {
                    "portName": "cacheFileName",
                    "portDirection": "input",
                    "portType": "string"
                },
                {
                    "portName": "enableFoamCache",
                    "portDirection": "input",
                    "portType": "bool"
                }
            ],
            "compoundNodes": [
                {
                    "nodeName": "getObjectFromDescriptorNode1",
                    "nodeType": "Bifrost::Nodes::Object::getObjectFromDescriptor"
                },
                {
                    "nodeName": "getObjectFromDescriptorNode2",
                    "nodeType": "Bifrost::Nodes::Object::getObjectFromDescriptor"
                },
                {
                    "nodeName": "setDescriptorFromObjectNode",
                    "nodeType": "Bifrost::Nodes::Object::setDescriptorFromObject"
                },
                {
                    "nodeName": "solveFoam",
                    "nodeType": "Bifrost::Nodes::Misc::solveFoam"
                },
                {
                    "nodeName": "cacheFoamToScratch",
                    "nodeType": "Bifrost::_private::cacheFoamToScratch"
                },
                {
                    "nodeName": "foamOut",
                    "nodeType": "Bifrost::Nodes::Misc::valueString"
                },
                {
                    "nodeName": "createObjectWhenCaching",
                    "nodeType": "Bifrost::Nodes::Misc::createObjectWhenCaching"
                },
                {
                    "nodeName": "getFoamObjectName",
                    "nodeType": "Bifrost::Nodes::Misc::valueString"
                },
                {
                    "nodeName": "cacheObjectToDisk",
                    "nodeType": "Bifrost::Nodes::Misc::cacheObjectToDisk"
                }
            ],
            "connections": [
                {
                    "source": ".liquidObject",
                    "target": "getObjectFromDescriptorNode1.objectDescriptor"
                },
                {
                    "source": ".solidObject",
                    "target": "getObjectFromDescriptorNode2.objectDescriptor"
                },
                {
                    "source": "setDescriptorFromObjectNode.value",
                    "target": ".Foam"
                },
                {
                    "source": ".emissionRate",
                    "target": "solveFoam.emissionRate"
                },
                {
                    "source": ".minLiquidSpeed",
                    "target": "solveFoam.minLiquidSpeed"
                },
                {
                    "source": ".minLiquidChurn",
                    "target": "solveFoam.minLiquidChurn"
                },
                {
                    "source": ".minLiquidCurvature",
                    "target": "solveFoam.minLiquidCurvature"
                },
                {
                    "source": ".minLiquidDepth",
                    "target": "solveFoam.minLiquidDepth"
                },
                {
                    "source": ".maxLiquidDepth",
                    "target": "solveFoam.maxLiquidDepth"
                },
                {
                    "source": ".inheritLiquidVelocity",
                    "target": "solveFoam.inheritLiquidVelocity"
                },
                {
                    "source": ".emitFlatnessToSurface",
                    "target": "solveFoam.emitFlatnessToSurface"
                },
                {
                    "source": ".dissipationRate",
                    "target": "solveFoam.dissipationRate"
                },
                {
                    "source": ".killDensityThreshold",
                    "target": "solveFoam.killDensityThreshold"
                },
                {
                    "source": ".surfaceOffset",
                    "target": "solveFoam.surfaceOffset"
                },
                {
                    "source": ".snapToSurface",
                    "target": "solveFoam.snapToSurface"
                },
                {
                    "source": ".pointRadius",
                    "target": "solveFoam.pointRadius"
                },
                {
                    "source": ".preserveVolume",
                    "target": "solveFoam.preserveVolume"
                },
                {
                    "source": ".gravity",
                    "target": "solveFoam.gravity"
                },
                {
                    "source": ".maxSolidDepth",
                    "target": "solveFoam.maxSolidDepth"
                },
                {
                    "source": ".buoyancy",
                    "target": "solveFoam.buoyancy"
                },
                {
                    "source": ".collideKillDepth",
                    "target": "solveFoam.collideKillDepth"
                },
                {
                    "source": ".windX",
                    "target": "solveFoam.windX"
                },
                {
                    "source": ".windZ",
                    "target": "solveFoam.windZ"
                },
                {
                    "source": ".cameraAdaptivity",
                    "target": "solveFoam.cameraAdaptivity"
                },
                {
                    "source": ".cameraMatrixList",
                    "target": "solveFoam.cameraMatrix"
                },
                {
                    "source": ".clipToCameraFrustum",
                    "target": "solveFoam.clipToFrustum"
                },
                {
                    "source": ".cameraFov",
                    "target": "solveFoam.fov"
                },
                {
                    "source": ".cameraAspect",
                    "target": "solveFoam.aspect"
                },
                {
                    "source": ".cameraBuffer",
                    "target": "solveFoam.cameraBufferDistance"
                },
                {
                    "source": ".enableFoamCache",
                    "target": "createObjectWhenCaching.enable"
                },
                {
                    "source": ".cacheControl",
                    "target": "createObjectWhenCaching.cacheControl"
                },
                {
                    "source": ".enableFoamCache",
                    "target": "cacheObjectToDisk.enable"
                },
                {
                    "source": ".cacheFileName",
                    "target": "cacheObjectToDisk.cacheFileName"
                },
                {
                    "source": ".cachePath",
                    "target": "cacheObjectToDisk.cachePath"
                },
                {
                    "source": ".compressionQuality",
                    "target": "cacheObjectToDisk.compressionQuality"
                },
                {
                    "source": "getObjectFromDescriptorNode1.value",
                    "target": "solveFoam.liquidObject"
                },
                {
                    "source": "getObjectFromDescriptorNode2.value",
                    "target": "solveFoam.solidObject"
                },
                {
                    "source": "cacheFoamToScratch.scopedObject",
                    "target": "setDescriptorFromObjectNode.object"
                },
                {
                    "source": "solveFoam.foamObject",
                    "target": "createObjectWhenCaching.inObject"
                },
                {
                    "source": "solveFoam.foamObject",
                    "target": "createObjectWhenCaching.newObject"
                },
                {
                    "source": "foamOut.value",
                    "target": "cacheFoamToScratch.scopeName"
                },
                {
                    "source": "cacheObjectToDisk.outObject",
                    "target": "cacheFoamToScratch.object"
                },
                {
                    "source": "getFoamObjectName.value",
                    "target": "createObjectWhenCaching.name"
                },
                {
                    "source": "createObjectWhenCaching.outObject",
                    "target": "cacheObjectToDisk.inObject"
                },
                {
                    "source": "createObjectWhenCaching.outCacheControl",
                    "target": "cacheObjectToDisk.cacheControl"
                }
            ],
            "values": [
                {
                    "valueName": "foamOut.str",
                    "valueType": "string",
                    "value": "foamOut"
                },
                {
                    "valueName": "createObjectWhenCaching.compNameToTest",
                    "valueType": "string",
                    "value": "_point"
                },
                {
                    "valueName": "createObjectWhenCaching.filePath",
                    "valueType": "string",
                    "value": "putFilePathHere"
                },
                {
                    "valueName": "createObjectWhenCaching.fileName",
                    "valueType": "string",
                    "value": "putFileNameHere"
                },
                {
                    "valueName": "getFoamObjectName.str",
                    "valueType": "string",
                    "value": "Foam"
                },
                {
                    "valueName": "cacheObjectToDisk.pointComponentName",
                    "valueType": "string",
                    "value": "Foam-particle"
                },
                {
                    "valueName": "cacheObjectToDisk.voxelComponentName",
                    "valueType": "string",
                    "value": "none"
                }
            ]
        }
    ]
}