// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
// Description : script to remove bogus lightLinks between defaultLightSet
//				 and hyperGraphLayout. This script may take several minutes to
//				 complete, depending on the number of links on your light
//				 linker node.
//
// Warning : This is an example script, use at your own risk.
//

global proc cleanUpSpuriousLightLinks()
{
	// Go through all the light links, and break the connections between
	// defaultLightSet and hyperGraphLayout.
	//
	string $linkers[] =`ls -type lightLinker`;
	int $numLinkers = size( $linkers );
	int $indexLinkers = $numLinkers;
	while( $indexLinkers-- > 0 ){
		string $linker = $linkers[$indexLinkers];
		if( `reference -isNodeReferenced $linker` ){
			// Light linker node is from a reference, can't cleanup
			//
			continue;
		}
		string $linkerPrefix = ($linker + ".lnk[");
		int $numLinks = `getAttr -size ($linker + ".lnk")`;
		int $indexLink = $numLinks;
		while( $indexLink-- > 0 ){
			string $objectLink = ($linkerPrefix + $indexLink + "].object");
			string $lightLink = ($linkerPrefix + $indexLink + "].light");
			$hyperGraphLink = `connectionInfo -sourceFromDestination $objectLink`;
			if ($hyperGraphLink == "hyperGraphLayout.message") {
				$defaultLightLink = `connectionInfo -sourceFromDestination $lightLink`;
				if ($defaultLightLink == "defaultLightSet.message") {
					disconnectAttr $hyperGraphLink $objectLink;
					disconnectAttr $defaultLightLink $lightLink;
				}
			}
		}
	}
}
