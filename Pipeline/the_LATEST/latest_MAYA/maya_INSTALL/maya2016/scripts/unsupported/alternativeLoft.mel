// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  Mar. 14, 1997
//
//  Description:
//      Produce a lofted surface through the curves, but have it so that
//      the resulting surface's CVs go through the original curves' CVs,
//      rather than having the surface going through the curves.

global proc string alternativeLoft()
{
	int $hist = `constructionHistory -q -tgl`;

	global int $gSelectNurbsCurvesBit;
	global int $gSelectIsoparmsBit;
	global int $gSelectCurvesOnSurfacesBit;
	global int $gSelectSurfaceEdgeBit;

	string $curves[] = `filterExpand -ex true -sm $gSelectNurbsCurvesBit -sm $gSelectIsoparmsBit -sm $gSelectCurvesOnSurfacesBit -sm $gSelectSurfaceEdgeBit`;

	string $surface = "";

	int $n = size($curves);
	int $i;

	if( $n < 2 ) return $surface;

	string $cmd = "loft -ch " + $hist + " ";

	// Rebuild them into linears (keep cvs):
	for( $i=0; $i<$n; $i+=1 ) {
		string $now[] = `rebuildCurve -ch $hist -rpo false -kcp on -d 1 -rt 0 $curves[$i]`;
		$curves[$i] = $now[0];
		$cmd = $cmd + $curves[$i] + " ";
	}

	// Convert back into cubic:
	string $res[] = eval($cmd);
	if( size($res) > 0 ) {
		$surface = $res[0];
		rebuildSurface -ch $hist -rpo true -kcp on -du 3 -dv 3 -rt 0 $surface;
	}

	if( !$hist ) {
		for( $i=0; $i<$n; $i+=1 ) {
			delete $curves[$i];
		}
	}

	select -r $surface;
	return $surface;
}
