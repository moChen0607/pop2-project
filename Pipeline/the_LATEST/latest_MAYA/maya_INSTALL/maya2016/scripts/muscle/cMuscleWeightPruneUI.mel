// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

// --------------------------------------------------------------------------

// --------------------------------------------------------------------------
//	UI Procs
// --------------------------------------------------------------------------

// --------------------------------------------------------------------------

/*
 * cMuscleWeightPruneUI() - UI For default weight stuff
 */
global proc cMuscleWeightPruneUI()
{
	global int $cMusclePaint_wtCnt ;
	global string $cMusclePaint_wtLabels[] ;

	
    if (!`pluginInfo -q -loaded "MayaMuscle"`)
		error (uiRes("m_cMuscleWeightPruneUI.kMustLoadMusclePlugin"));
	
    if (`window -q -ex cMuscleWeightPruneUIWin`)
        {
        showWindow cMuscleWeightPruneUIWin ;
        return ;
        }

	window -w 290 
		-h 145 
		-t (uiRes("m_cMuscleWeightPruneUI.kWindowTitlePruneWeights")) cMuscleWeightPruneUIWin ;
    
    scrollLayout mainMuscleWeightPruneUIScrollLayout;
    formLayout -parent mainMuscleWeightPruneUIScrollLayout mainWtForm ;
	
	optionMenu -l (uiRes("m_cMuscleWeightPruneUI.kWeights")) omWts ;
	int $i ;
	for ($i=0; $i < $cMusclePaint_wtCnt; ++$i)
		menuItem -l ($cMusclePaint_wtLabels[ $i ]) ;
//		menuItem -l "Sticky A" ;
//		menuItem -l "Sticky B" ;
//		menuItem -l "Sticky C" ;
//		menuItem -l "Sliding" ;
//		menuItem -l "Direction" ;
//    	menuItem -l "Force" ;
//    	menuItem -l "Jiggle" ;
//    	menuItem -l "Cycle" ;
//    	menuItem -l "Rest" ;
//    	menuItem -l "Relax" ;
//    	menuItem -l "Wrinkle" ;
//    	menuItem -l "Smooth" ;
		
//	optionMenu -e -sl 1 -cc ("cMuscle_updateWeightDefaultUI();") omWts ;
	
    text -l (uiRes("m_cMuscleWeightPruneUI.kPruneWeightsIfLessThan")) txPrePruneWD ;
    floatField -v 0.001 -min 0.0 -max 1024 -w 60 ffPruneWD ;
    text -l (uiRes("m_cMuscleWeightPruneUI.kPruneWeightsIfLessThan2")) txPruneWD ;
    popupMenu -p ffPruneWD ;
    	menuItem -l "1" -c ("floatField -e -v 1 ffPruneWD ;") ;
    	menuItem -l "2" -c ("floatField -e -v 2 ffPruneWD ;") ;
    	menuItem -l "3" -c ("floatField -e -v 3 ffPruneWD ;") ;
    	menuItem -l "4" -c ("floatField -e -v 4 ffPruneWD ;") ;
    	menuItem -l "5" -c ("floatField -e -v 5 ffPruneWD ;") ;

	button -l (uiRes("m_cMuscleWeightPruneUI.kPruneWeights")) 
		-w 300 
		-c ("cMuscleWeightPruneUICB();") 
		-ann (uiRes("m_cMuscleWeightPruneUI.kPruneWeightsAnnot")) btnPruneWeight ;
		
	formLayout -e
		-af omWts "top" 5
    	-an omWts "bottom" 
    	-af omWts "left" 5
    	-an omWts "right" 

	   	-ac txPrePruneWD "top" 8 omWts
    	-an txPrePruneWD "bottom" 
    	-af txPrePruneWD "left" 5 
    	-an txPrePruneWD "right" 

    	-ac ffPruneWD "top" 5 omWts
    	-an ffPruneWD "bottom" 
    	-ac ffPruneWD "left" 0 txPrePruneWD
    	-an ffPruneWD "right" 

    	-ac txPruneWD "top" 8 omWts
    	-an txPruneWD "bottom" 
    	-ac txPruneWD "left" 5 ffPruneWD
    	-an txPruneWD "right" 
		
		-ac btnPruneWeight "top" 8 ffPruneWD
    	-an btnPruneWeight "bottom" 
    	-af btnPruneWeight "left" 5 
    	-af btnPruneWeight "right" 5
			
		mainWtForm ;
		
		
	showWindow cMuscleWeightPruneUIWin ;
}


// --------------------------------------------------------------------------

/*
 * cMuscleWeightPruneUICB() - UI Wrapper
 */
global proc cMuscleWeightPruneUICB()
{
	global int $cMusclePaint_wtCnt ;
	global string $cMusclePaint_wtNames[] ;
	global string $cMusclePaint_wtLabels[] ;
	global int $cMusclePaint_wtNormalize[] ; 

	
	int $idxWt = `optionMenu -q -sl omWts` -  1;
	string $strWt = `optionMenu -q -v omWts` ;
	float $fPrune = `floatField -q -v ffPruneWD` ;

	int $bNormalize = $cMusclePaint_wtNormalize[$idxWt] ;
	string $strWtName = $cMusclePaint_wtNames[$idxWt] ;
	
	
	string $mSs[] = cMuscle_getSelectedDeformers("cMuscleSystem") ;
	string $mS ;
	
	string $objs[] = `ls -sl -l`; 
	
	// Now call real command....
	//
	for ($mS in $mSs)
		{
		cMuscle_fixDisconnected($mS) ;
			
		string $comps[] = cMuscle_getSelComps($mS, true) ;
		select -r $comps ;
		
		cMuscleWeightPrune -system $mS -weight $strWtName -normalize $bNormalize -prune $fPrune ;
		}
	
		
	if (size($objs) > 0)		// reselect
		select $objs ;
}


// --------------------------------------------------------------------------


