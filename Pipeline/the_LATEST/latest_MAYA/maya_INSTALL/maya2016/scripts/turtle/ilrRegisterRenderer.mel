// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
// provided at the time of installation or download, or which otherwise accompanies 

global proc ilrRenderLogoCallback()
{
	waitCursor -state on;
	showHelp -absolute "http://www.autodesk.com";
	waitCursor -state off;
}

global proc ilrRenderingEditorsSubMenu(string $parentMenuItem)
{
	popupMenu -e -deleteAllItems $parentMenuItem;
	setParent -m $parentMenuItem;

	menuItem -ecr false -l "Bake Layer Editor..."
		-annotation "Turtle's Bake Layer Editor"
		-c "eval ilrBakeLayerEditor";

	menuItem -ecr false -l "Point Cloud Bake Editor..."
		-annotation "Turtle's Point Cloud Bake Editor"
		-c "eval ilrPointCloudBakeEditor";

	menuItem -ecr false -l "IBL Light Rig Editor..."
		-annotation "Turtle's IBL Light Rig Editor"
		-c "eval ilrIBLLightRigEditor";

	menuItem -ecr false -l "Texture Resampling Editor..."
		-annotation "Turtle's Texture Resampling Editor"
		-c "eval ilrTextureResamplingEditor";
}

//
// Description: This procedure is called to unregister the TURTLE renderer.
//
global proc ilrUnRegisterRenderer()
{
	if (`renderer -exists "turtle"`)
	{
		renderer -unregisterRenderer "turtle";
		print("+++++++ Turtle for Maya unregistered successfully ++++++\n");
	}

	updateRendererUI;
}

//
// Description: This procedure is called to register the TURTLE renderer.
//
global proc ilrRegisterRenderer()
{
	if (!`renderer -exists "turtle"`)
	{
		global float $g_ilrMayaVersion;

		// Make sure that the turtle icon exists
		string $icon = "turtleIcon.xpm";
		// shouldn't have to do this as the plugin is now included in Maya build
		//if (!`file -query -exists $icon`) {
		//	$icon = "";
		//}

		if ($g_ilrMayaVersion >= 8.0)
		{
			renderer -rendererUIName			  "TURTLE"
				-renderProcedure                  "ilrRender"
				-renderRegionProcedure            "ilrRegionRender"
				-commandRenderProcedure           "ilrBatchRender"
				-batchRenderProcedure             "ilrBatchRender"
				-cancelBatchRenderProcedure       "batchRender"
				-showBatchRenderProcedure         "batchRender -showImage true"
				-renderOptionsProcedure           ""
				-batchRenderOptionsProcedure      ""
				-renderDiagnosticsProcedure       ""
				-showRenderLogProcedure           ""
				-showBatchRenderLogProcedure      ""
				-iprRenderProcedure               ""
				-isRunningIprProcedure            ""
				-startIprRenderProcedure          ""
				-stopIprRenderProcedure           ""
				-refreshIprRenderProcedure        ""
				-pauseIprRenderProcedure          ""
				-changeIprRegionProcedure         ""
				-iprOptionsMenuLabel              ""
				-iprOptionsSubMenuProcedure       ""
				-textureBakingProcedure           ""
				-polyPrelightProcedure            ""
				-logoImageName                    $icon
				-logoCallbackProcedure            "ilrRenderLogoCallback"
				-renderingEditorsSubMenuProcedure "ilrRenderingEditorsSubMenu"
				turtle;
		}
		else if ($g_ilrMayaVersion >= 7.0)
		{
			renderer -rendererUIName			  "TURTLE"
				-renderProcedure                  "ilrRender"
				-renderRegionProcedure            "ilrRegionRender"
				-commandRenderProcedure           "ilrBatchRender"
				-batchRenderProcedure             "ilrBatchRender"
				-cancelBatchRenderProcedure       "batchRender"
				-showBatchRenderProcedure         "batchRender -showImage true"
				-renderOptionsProcedure           ""
				-batchRenderOptionsProcedure      ""
				-renderDiagnosticsProcedure       ""
				-showRenderLogProcedure           ""
				-showBatchRenderLogProcedure      ""
				-iprRenderProcedure               ""
				-isRunningIprProcedure            ""
				-startIprRenderProcedure          ""
				-stopIprRenderProcedure           ""
				-refreshIprRenderProcedure        ""
				-pauseIprRenderProcedure          ""
				-changeIprRegionProcedure         ""
				-iprOptionsMenuLabel              ""
				-iprOptionsSubMenuProcedure       ""
				-textureBakingProcedure           ""
				-polyPrelightProcedure            ""
				-logoImageName                    $icon
				-logoCallbackProcedure            "ilrRenderLogoCallback"
				-renderingEditorsSubMenuProcedure "ilrRenderingEditorsSubMenu"
				-hasCommonGlobalValueProcedure    "mayaSoftwareHasCommonGlobalValue"
				-getCommonGlobalValueProcedure    "mayaSoftwareGetCommonGlobalValue"
				-setCommonGlobalValueProcedure    "mayaSoftwareSetCommonGlobalValue"
				turtle;
		}
		else
		{
			error("TurtleForMaya: Unsupported Maya version: " + $g_ilrMayaVersion + "\n");
		}


		renderer -edit -addGlobalsNode "TurtleRenderOptions" turtle;

		registerUpdateRendererUIProc("evalDeferred -lp ilrTakeOverRenderGlobalsWindow");
		
		renderer -edit -addGlobalsTab "Common" "createMayaSoftwareCommonGlobalsTab" "updateMayaSoftwareCommonGlobalsTab; ilrModifyCommonTab;" turtle;
		renderer -edit -addGlobalsTab "TURTLE" "ilrBuildTurtleTab" "ilrUpdateTurtleTab" turtle;

		print("+++++++ Turtle for Maya registered successfully ++++++\n");
	}
}
