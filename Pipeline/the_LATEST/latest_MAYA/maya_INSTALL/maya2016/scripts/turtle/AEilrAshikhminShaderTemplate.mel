// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
// provided at the time of installation or download, or which otherwise accompanies 

//
// Procedures specifying the UI layout for ilrAshikhminShader
// in Maya's Attribute Editor
//

global proc AEilrAshikhminShaderNormalNew(string $attr)
{
	attrNavigationControlGrp 
		-l "Bump Mapping"
		AEilrAshikhminShaderNormalControl;

	AEilrAshikhminShaderNormalReplace $attr;
}

global proc AEilrAshikhminShaderNormalReplace(string $attr)
{
	attrNavigationControlGrp -edit
		-at $attr
		AEilrAshikhminShaderNormalControl;
}


global proc AEilrUpdateAshikhminfShader(string $node)
{
	int $dim = (`getAttr ($node + ".matchSpec")`);
	editorTemplate -dimControl $node "phongExpURef" $dim;
	editorTemplate -dimControl $node "phongExpVRef" $dim;
	editorTemplate -dimControl $node "rotationRef" $dim;
	editorTemplate -dimControl $node "iorRef" $dim;

	int $dim2 = !(`getAttr ($node + ".attenuateReflections")`);
	editorTemplate -dimControl $node "attenuationStart" $dim2;
	editorTemplate -dimControl $node "attenuationEnd" $dim2;
	
}

global proc AEilrUpdateAttEnd(string $node)
{
	float $ae = (`getAttr ($node + ".attenuationEnd")`);
	float $as = (`getAttr ($node + ".attenuationStart")`);
	if($ae < $as) {
		setAttr ($node + ".attenuationEnd") $as;
	}
}

global proc AEilrUpdateAttStart(string $node)
{
	float $ae = (`getAttr ($node + ".attenuationEnd")`);
	float $as = (`getAttr ($node + ".attenuationStart")`);
	if($as > $ae) {
		setAttr ($node + ".attenuationStart") $ae;
	}
}


global proc AEilrAshikhminShaderTemplate(string $node)
{
	editorTemplate -beginScrollLayout;

		editorTemplate -beginLayout "Common Material Attributes" -collapse false;

			editorTemplate -label "Diffuse" -addControl "diffuse";
			editorTemplate -callCustom "AEilrAshikhminShaderNormalNew" "AEilrAshikhminShaderNormalReplace" "normalCamera";
			editorTemplate -s "normalCamera";
		editorTemplate -endLayout;
		
		editorTemplate -beginLayout "Specular Material Attributes" -collapse false;
			editorTemplate -label "Specular" -addControl "specular";
			editorTemplate -label "Spread U" -addControl "phongExpU";
			editorTemplate -label "Spread V" -addControl "phongExpV";
			editorTemplate -label "Rotation" -addControl "rotation";
			editorTemplate -label "Fresnel Index" -addControl "ior";
		editorTemplate -endLayout;

		editorTemplate -beginLayout "Reflection Material Attributes" -collapse false;
			editorTemplate -label "Reflectivity" -addControl "reflectivity";
			editorTemplate -label "Match Specular" -addControl "matchSpec" "AEilrUpdateAshikhminfShader";
			editorTemplate -label "Spread U" -addControl "phongExpURef";
			editorTemplate -label "Spread V" -addControl "phongExpVRef";
			editorTemplate -label "Rotation" -addControl "rotationRef";
			editorTemplate -label "Fresnel Index" -addControl "iorRef";
			editorTemplate -label "Glossy rays" -addControl "maxGlossyRays";
		editorTemplate -endLayout;


		editorTemplate -beginLayout "Environment Material Attributes" -collapse false;
			editorTemplate -label "Reflected Color" -addControl "reflectedColor";
			editorTemplate -label "Attenuate Reflections" -addControl "attenuateReflections" "AEilrUpdateAshikhminfShader";
			editorTemplate -label "Attenuation Start" -addControl "attenuationStart" "AEilrUpdateAttStart";
			editorTemplate -label "Attenuation End" -addControl "attenuationEnd" "AEilrUpdateAttEnd";
		editorTemplate -endLayout;


		editorTemplate -addExtraControls;
	editorTemplate -endScrollLayout;

	// suppressed attributes
 	editorTemplate -suppress "caching";
	editorTemplate -suppress "nodeState";
	editorTemplate -suppress "version";
	//`AEilrUpdateAshikhminfShader`;
}
