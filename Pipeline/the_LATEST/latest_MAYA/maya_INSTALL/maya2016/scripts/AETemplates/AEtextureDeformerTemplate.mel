// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//	Procedure Name:
//	AEtextureDeformerTemplate
//
//	Description:
//	Creates the attribute editor controls for the textureDeformer node
//
//	Input Value:
//	nodeName
//
//	Output Value:
//	None
//

// dim or undim the vector-related UI when direction mode is changed
global proc switchTextureDeformerVectorModeUI( string $nodeName )
{
	string $nodeAttr = $nodeName + ".direction";
	int $value = `getAttr $nodeAttr`;
	// if direction mode is "kVector"
	// dim "aStrength" and "aOffset"
	if ( $value == 2 ) {
		editorTemplate -dimControl $nodeName "strength" true;
		editorTemplate -dimControl $nodeName "offset" true;
		editorTemplate -dimControl $nodeName "vectorStrength" false;
		editorTemplate -dimControl $nodeName "vectorOffset" false;
		editorTemplate -dimControl $nodeName "vectorSpace" false;
	} 
	// Otherwise, dim "aVectorStrength" and "aVectorOffset"
	else
	{
		editorTemplate -dimControl $nodeName "strength" false;
		editorTemplate -dimControl $nodeName "offset" false;
		editorTemplate -dimControl $nodeName "vectorStrength" true;
		editorTemplate -dimControl $nodeName "vectorOffset" true;
		editorTemplate -dimControl $nodeName "vectorSpace" true;
	}
}

global proc AEtextureDeformerTemplate( string $nodeName )
{
	editorTemplate -beginScrollLayout;
	
	// create AE template for texture deformer attributes
	editorTemplate -beginLayout (uiRes("m_AEtextureDeformerTemplate.kTextureDeformerAttributes"))  -collapse false;
		editorTemplate -addControl "pointSpace";
		editorTemplate -addControl "direction" "switchTextureDeformerVectorModeUI";
		editorTemplate -addControl "vectorSpace";
		editorTemplate -addControl "texture";
	    editorTemplate -addControl "strength";
		editorTemplate -addControl "offset";
		editorTemplate -addControl "vectorStrength";
		editorTemplate -addControl "vectorOffset";
		editorTemplate -addSeparator;
	editorTemplate -endLayout;
	
	// the following attributes are hidden on AE
	editorTemplate -suppress "startPosition";
	editorTemplate -suppress "extendedEnd";
	editorTemplate -suppress "handleVisibility";
	editorTemplate -suppress "handleMatrix";

	// create UI for parent class attributes
	AEweightGeometryFilterTemplate $nodeName;

	editorTemplate -addExtraControls;
	editorTemplate -endScrollLayout;
}
