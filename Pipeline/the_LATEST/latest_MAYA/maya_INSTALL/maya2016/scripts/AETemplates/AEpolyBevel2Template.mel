// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.


global proc checkPolyBevelCompatibilityMode ( string $nodeName )
{
        string $nodeAttr = $nodeName + ".useLegacyBevelAlgorithm";
        int $value = `getAttr $nodeAttr`;

        if ( $value ) {
                editorTemplate -dimControl $nodeName "uvAssignment" false;
        } else {
                editorTemplate -dimControl $nodeName "uvAssignment" true;
        }
}

global proc AEpolyBevel2Template ( string $nodeName )
{
	if (!`exists AEpolyBevelTemplate`)
	{
		source AEpolyBevelTemplate;
	}

	editorTemplate -beginScrollLayout;

		// basic bevel controls
		editorTemplate -beginLayout (uiRes("m_AEpolyBevelTemplate.kPolyBevelHistory")) -collapse 0;

			editorTemplate -addControl "offsetAsFraction" "checkPolyBevelOffsetAsFraction";

			// include base class/node attribute (world space) here
			editorTemplate -addControl "worldSpace";

			editorTemplate -addControl "offset";
			editorTemplate -addControl "fraction";
			editorTemplate -addControl "segments";

			editorTemplate -addControl "smoothingAngle";

			editorTemplate -addControl "autoFit" "checkPolyBevelAutoFit";
			editorTemplate -addControl "roundness";

			editorTemplate -addControl "useLegacyBevelAlgorithm" "checkPolyBevelCompatibilityMode";
			editorTemplate -label (uiRes("m_AEpolyBevelTemplate.kUVAssignment")) -addControl "uvAssignment";

		editorTemplate -endLayout;

		// merge vertex tab
		editorTemplate -beginLayout (uiRes("m_AEpolyBevelTemplate.kCleanup")) -collapse 1;

			editorTemplate -label (uiRes("m_AEpolyBevelTemplate.kSubdivideNgons")) -addControl "fillNgons";

			editorTemplate -addControl "miteringAngle";

			editorTemplate -addControl "angleTolerance";
	
			editorTemplate -addControl "mergeVertices" "checkPolyBevelMergeVertices";
			editorTemplate -label (uiRes("m_AEpolyBevelTemplate.kMergeTolerance")) -addControl "mergeVertexTolerance";

		editorTemplate -endLayout;

		editorTemplate -suppress "maya2015";

		// include/call base class/node attributes		
		AEpolyModifierInclude $nodeName;

	editorTemplate -addExtraControls;
	editorTemplate -endScrollLayout;
}
