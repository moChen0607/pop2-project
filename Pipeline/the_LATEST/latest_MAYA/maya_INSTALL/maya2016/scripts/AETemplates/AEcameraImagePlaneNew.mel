// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:	May 13, 1997
//
//  Procedure Name:
//	AEcameraImagePlaneNew
//
//  Description:
//	Creates the custom attribute editor controls for the camera
//	image plane creation
//
//  Input Value:
//	nodeName
//	imagePlane
//	horizontalFilmAperture
//	verticalFilmAperture
//
//  Output Value:
//	None
//



//
//  Procedure Name:
//	AEcameraImagePlaneReplace
//
//


global proc AEcameraImagePlaneReplace(string $ip, string $hfa, string $vfa)
{
	button -e
		-command ("AEcameraImagePlaneCommand "+ $ip + " " + $hfa + " " + $vfa) 
		addImagePlaneButton;

	symbolButton -e
		-command ("{ string $i[] = `listConnections "+$ip+"`; "+
				  "if (size($i) > 0) showEditor $i[0]; }")
		propagateBtn;

	popupMenu -e
		-postMenuCommand ("AEcameraImagePlaneMenu propagateMenu "+$ip)
		propagateMenu;
}


//
//  Procedure Name:
//	AEcameraImagePlaneCommand
//
//


global proc AEcameraImagePlaneCommand(string $ip, string $hfa, string $vfa)
{
	string $cameraName[];
	tokenize( $ip, ".", $cameraName );

	// create imageplane shape.
	string $newImagePlane[] = createImagePlane($cameraName[0]);
}


global proc AEcameraImagePlaneNew (string $ip, string $hfa, string $vfa)
{
	setUITemplate -pst attributeEditorTemplate;
	rowLayout -nc 3;
		text -label (uiRes("m_AEcameraImagePlaneNew.kImagePlane")) ;

		button -label (uiRes("m_AEcameraImagePlaneNew.kCreate"))  addImagePlaneButton;

		symbolButton -image "inArrow.png" propagateBtn;

		popupMenu -parent propagateBtn -button 3 propagateMenu;
		setParent -m ..;
	setParent ..;
	setUITemplate -ppt;

	AEcameraImagePlaneReplace $ip $hfa $vfa;
}

//
//  Procedure Name:
//      AEcameraImagePlaneMenu
//
//  Description:
//      Procedure to build the propagate menu of image planes.
//
global proc AEcameraImagePlaneMenu( string $parent, string $ipAttr )
{
    popupMenu -e -deleteAllItems $parent;

    setParent -m $parent;

    string $imagePlanes[] = `listConnections $ipAttr`;

    for ($item in $imagePlanes) {
        menuItem
            -label $item
            -command ("showEditor "+$item);
    }
}
