// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//	Procedure Name:
//	AEffBlendSrfTemplate
//
//	Description Name;
//	Creates the attribute editor controls for the ffBlendSrf node
//
//	Input Value:
//	nodeName
//
//	Output Value:
//	None
//

global proc AEffBlendSrfTemplate( string $nodeName )
{
	string $leftCurve = (uiRes("m_AEffBlendSrfTemplate.kLeftCurve"));
	string $rightCurve = (uiRes("m_AEffBlendSrfTemplate.kRightCurve"));
	editorTemplate -beginScrollLayout;
	
		editorTemplate -beginLayout (uiRes("m_AEffBlendSrfTemplate.kRailCurves")) -collapse 1;
			editorTemplate -callCustom ("AEmultiInputNew \""+$leftCurve+"\"")
				("AEmultiInputReplace \""+$leftCurve+"\"")
				"leftCurve";
			editorTemplate -callCustom ("AEmultiInputNew \""+$rightCurve+"\"")
				("AEmultiInputReplace \""+$rightCurve+"\"")
				"rightCurve";
		editorTemplate -endLayout;

		editorTemplate -beginLayout (uiRes("m_AEffBlendSrfTemplate.kOrientation")) -collapse 0;
			editorTemplate -addControl "autoNormal" "ffBlendAutoDirControls";
			editorTemplate -interruptOptimize;
			editorTemplate -addControl "flipLeftNormal";
			editorTemplate -addControl "flipRightNormal";

			editorTemplate -addControl "reverseLeft";
			editorTemplate -addControl "reverseRight";
		editorTemplate -endLayout;

		editorTemplate -beginLayout (uiRes("m_AEffBlendSrfTemplate.kPositiion")) -collapse 0;
			editorTemplate -addControl "autoAnchor" "ffBlendAutoAnchorControls";

			editorTemplate -addControl "leftAnchor";
			editorTemplate -addControl "leftStart";
			editorTemplate -addControl "leftEnd";

			editorTemplate -addControl "rightAnchor";
			editorTemplate -addControl "rightStart";
			editorTemplate -addControl "rightEnd";
		editorTemplate -endLayout;

		editorTemplate -beginLayout (uiRes("m_AEffBlendSrfTemplate.kQuality")) -collapse 1;
			editorTemplate -addControl "positionTolerance";
			editorTemplate -addControl "tangentTolerance";
			editorTemplate -addControl "multipleKnots";
		editorTemplate -endLayout;

	// include/call base class/node attributes
	AEabstractBaseCreateTemplate $nodeName;

	editorTemplate -addExtraControls;

	editorTemplate -endScrollLayout;

	editorTemplate -suppress "leftRail";
	editorTemplate -suppress "rightRail";
}

global proc ffBlendAutoDirControls( string $nodeName )
{
	string $attr = $nodeName + ".autoNormal";
	int $value = `getAttr $attr`;

	if ($value == 0) {
		editorTemplate -dimControl $nodeName "flipLeftNormal" false;
		editorTemplate -dimControl $nodeName "flipRightNormal" false;
	} else {
		editorTemplate -dimControl $nodeName "flipLeftNormal" true;
		editorTemplate -dimControl $nodeName "flipRightNormal" true;
	}
}

global proc ffBlendAutoAnchorControls( string $nodeName )
{
	string $attr = $nodeName + ".autoAnchor";
	int $value = `getAttr $attr`;

	if ($value == 0) {
		editorTemplate -dimControl $nodeName "leftAnchor" false;
		editorTemplate -dimControl $nodeName "rightAnchor" false;
	} else {
		editorTemplate -dimControl $nodeName "leftAnchor" true;
		editorTemplate -dimControl $nodeName "rightAnchor" true;
	}
}
