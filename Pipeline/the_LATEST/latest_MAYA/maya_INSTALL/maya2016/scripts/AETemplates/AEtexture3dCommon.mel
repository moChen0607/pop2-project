// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//  Procedure Name:
//	AEtexture3dTemplate
//
//  Description:
//	Creates the attribute editor controls without a scroll layout
//	for the texture3d Node
//
//  Input Value:
//	nodeName
//
//  Output Value:
//	None
//


global proc AEtexture3dCommon ( string $nodeName )
{	
	
	// check on the type of the node
	// to place the correct widgets

	string $type = `nodeType $nodeName`;


    	editorTemplate -beginLayout (uiRes("m_AEtexture3dCommon.kColorBalance"));
        	editorTemplate -addControl "defaultColor";
        	editorTemplate -addControl "colorGain";
        	editorTemplate -addControl "colorOffset";
        	editorTemplate -addControl "alphaGain";
        	editorTemplate -addControl "alphaOffset";
			if ($type == "marble" || $type == "projection" ||
				$type == "wood")
			{
				editorTemplate -suppress "alphaIsLuminance";
			}
			else
			{
	       		editorTemplate -addControl "alphaIsLuminance";
			}

    	editorTemplate -endLayout;

    	editorTemplate -beginLayout (uiRes("m_AEtexture3dCommon.kEffects"));
		if ( $type == "granite" ||
			$type == "leather" || $type == "snow" )
		{
			editorTemplate -suppress "filter";
			editorTemplate -suppress "filterOffset";
		} else {
	        	editorTemplate -addControl "filter";
        		editorTemplate -addControl "filterOffset";
		}
        	editorTemplate -addControl "invert";
        	editorTemplate -addControl "wrap";
        	editorTemplate -addControl "local";
        	editorTemplate -addControl "blend";
           	editorTemplate -callCustom "AEcolorRemapNew" 
				"AEcolorRemapReplace" 
				"outColor";
    	editorTemplate -endLayout;

	// suppressed Attributes
	editorTemplate -suppress "placementMatrix";

	// include/call base class/node attributes
	AEdependNodeTemplate $nodeName;
}
