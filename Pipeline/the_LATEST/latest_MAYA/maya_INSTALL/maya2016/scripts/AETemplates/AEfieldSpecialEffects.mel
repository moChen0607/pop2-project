// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//  Procedure Name:
//	AEfieldSpecialEffects
//
//  Description Name;
//	Creates the attribute editor controls for the field Node
//
//  Input Value:
//	nodeName 
//
//  Output Value:
//	None
// 


//
//  Procedure Name:
//	AEapplyPerVertexNew
//

global proc AEapplyPerVertexNew ( string $applyPerVertex )
{
	string $nodeName[];
	tokenize($applyPerVertex, ".", $nodeName);
	
	setUITemplate -pst attributeEditorTemplate;
		checkBoxGrp -ncb 1 -label1 (uiRes("m_AEfieldSpecialEffects.kApplyPerVertex"))  ApplyPreVertexCheckBox;
	setUITemplate -ppt;
	
	connectControl -index 2  ApplyPreVertexCheckBox $applyPerVertex;
	
	checkAirPositional $nodeName;
}

//
//  Procedure Name:
//	AEapplyPerVertexReplace
//

global proc AEapplyPerVertexReplace ( string $applyPerVertex )
{
	string $nodeName[];
	tokenize($applyPerVertex, ".", $nodeName);

	connectControl -index 2  ApplyPreVertexCheckBox $applyPerVertex;

	checkAirPositional $nodeName;
}


//
//  Procedure Name:
//	checkAirPositional
//

global proc checkAirPositional ( string $nodeName[])
{
	if ( `getAttr ( $nodeName[0] + ".positional" )` ){
		checkBoxGrp -e -en 0 ApplyPreVertexCheckBox;
	} else {
		checkBoxGrp -e -en 1 ApplyPreVertexCheckBox;
	}
}

//
//  Procedure Name:
//	AEfieldNoScroll
//

global proc AEfieldSpecialEffects ( string $nodeName )
{
	editorTemplate -beginLayout (uiRes("m_AEfieldSpecialEffects.kSpecialEffects")) ;
		editorTemplate -callCustom "AEapplyPerVertexNew" 
					"AEapplyPerVertexReplace"
					"applyPerVertex";
	editorTemplate -endLayout;	
}	
