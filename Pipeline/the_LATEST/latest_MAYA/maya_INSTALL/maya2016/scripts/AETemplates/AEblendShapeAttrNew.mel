// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.


global proc AEblendShapeAttrNew ( string $blendShapeMulti )
{
	string $buffer[];
	tokenize($blendShapeMulti, ".", $buffer);
	string $nodeName = $buffer[0];
	string $att	 = $buffer[1];
	

	setUITemplate -pst attributeEditorTemplate;
  
	columnLayout ($att+"Column");

	string $wts[]=`listAttr -m ($nodeName+".w")`;

	for ($i=0; $i < size($wts); $i++)
	{
		setUITemplate -pst attributeEditorTemplate;
		$sliderLabel = $wts[$i];
		$sliderName = $att+$i;
		attrFieldSliderGrp -min 0.0 -max 1.0 -fmn -10 -fmx 10.0 
			-s 0.1 -label $sliderLabel $sliderName;
		setUITemplate -ppt;
	}
	setParent ..;
	setUITemplate -ppt;
	AEblendShapeAttrReplace $blendShapeMulti;
}


global proc AEblendShapeAttrReplace ( string $blendShapeMulti )
{
	string $buffer[];
	tokenize($blendShapeMulti, ".", $buffer);
	string $nodeName = $buffer[0];
	string $att	 = $buffer[1];

	setUITemplate -pst attributeEditorTemplate;

  
	setParent ($att+"Column");
	$layoutName=`setParent -q`;
	int $oldCount=`columnLayout -q -nch $layoutName`;
	int $i;
	string $wts[]=`listAttr -m ($nodeName+".w")`;
	for ($i=0; $i < size($wts); $i++)
	{

		$attr=$nodeName+"."+$wts[$i];
		$sliderName=$att+$i;
		$sliderLabel = $wts[$i];
		if ( `attrFieldSliderGrp -ex $sliderName` )
		{
			attrFieldSliderGrp -e -label $sliderLabel -at $attr $sliderName;
		} else {
			setUITemplate -pst attributeEditorTemplate;
			attrFieldSliderGrp -min 0.0 -max 5.0 -fmn 0.0 -fmx 20.0 -s 0.1
				-label $sliderLabel -at $attr $sliderName;
			setUITemplate -ppt;
		}
	}
	for ($i=size($wts); $i < $oldCount; $i++)
	{
		$sliderName=$att+$i;
		if ( `attrFieldSliderGrp -ex $sliderName` )
			deleteUI $sliderName;
	}
	setParent ..;
	setUITemplate -ppt;
}	

