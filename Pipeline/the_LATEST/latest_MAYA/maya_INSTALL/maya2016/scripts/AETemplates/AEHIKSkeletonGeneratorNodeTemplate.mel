// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.



global proc HIKSkeletonGeneratorNodeSuppressControl (string $nodeName )
{
	editorTemplate -suppress $nodeName;
	editorTemplate -suppress ($nodeName + "T");		
	editorTemplate -suppress ($nodeName + "R");
	editorTemplate -suppress ($nodeName + "S");	
};

global proc HIKSkeletonGeneratorNodeAddControl (string $nodeName )
{
    string $labelT = (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kTranslate"));
    string $labelR = (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kRotate"));
    string $labelS = (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kScale"));
    
	editorTemplate -beginLayout $nodeName -collapse 1;
		editorTemplate -addControl $nodeName;
		editorTemplate -label $labelT -addControl ($nodeName + "T");
		editorTemplate -label $labelR -addControl ($nodeName + "R");
		editorTemplate -label $labelS -addControl ($nodeName + "S");		
		
	editorTemplate -endLayout;
};
	
global proc AEHIKSkeletonGeneratorNodeTemplate (string $nodeName )
{	
	editorTemplate -beginScrollLayout;
		
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kCharacterScale")) -addControl "CharacterScale";
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kSpineCount")) -addControl "SpineCount";
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kNeckCount")) -addControl "NeckCount";
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kShoulderCount")) -addControl "ShoulderCount";
		
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kWantUpperArmRollBone")) -addControl "WantUpperArmRollBone";
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kWantLowerArmRollBone")) -addControl "WantLowerArmRollBone";		
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kWantUpperLegRollBone")) -addControl "WantUpperLegRollBone";
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kWantLowerLegRollBone")) -addControl "WantLowerLegRollBone";		
		
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kWantIndexFinger")) -addControl "WantIndexFinger";
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kWantMiddleFinger")) -addControl "WantMiddleFinger";
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kWantRingFinger")) -addControl "WantRingFinger";
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kWantPinkyFinger")) -addControl "WantPinkyFinger";
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kWantThumb")) -addControl "WantThumb";
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kWantExtraFinger")) -addControl "WantExtraFinger";
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kFingerJointCount")) -addControl "FingerJointCount";
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kWantFingerBase")) -addControl "WantFingerBase";
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kWantInHandJoint")) -addControl "WantInHandJoint";
		
		
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kWantIndexToe")) -addControl "WantIndexToe";
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kWantMiddleToe")) -addControl "WantMiddleToe";
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kWantRingToe")) -addControl "WantRingToe";
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kWantPinkyToe")) -addControl "WantPinkyToe";
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kWantBigToe")) -addControl "WantBigToe";
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kWantFootThumb")) -addControl "WantFootThumb";
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kToeJointCount")) -addControl "ToeJointCount";
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kWantToeBase")) -addControl "WantToeBase";
	editorTemplate -label (uiRes("m_AEHIKSkeletonGeneratorNodeTemplate.kWantInFootJoint")) -addControl "WantInFootJoint";				
		
		genericHIKLayout "HIKSkeletonGeneratorNodeAddControl";				
		
		/*
		HIKSkeletonGeneratorNodeSuppressControl "Props0";
		HIKSkeletonGeneratorNodeSuppressControl "Props1";
		HIKSkeletonGeneratorNodeSuppressControl "Props2";
		HIKSkeletonGeneratorNodeSuppressControl "Props3";
		HIKSkeletonGeneratorNodeSuppressControl "Props4";
		*/

		editorTemplate -suppress "CharacterNode";
		editorTemplate -suppress "HipsTranslationT";
		editorTemplate -suppress "HipsTranslationR";
		editorTemplate -suppress "HipsTranslationS";
		editorTemplate -suppress "LeftShoulderExtraT";
		editorTemplate -suppress "LeftShoulderExtraR";
		editorTemplate -suppress "LeftShoulderExtraS";
		editorTemplate -suppress "RightShoulderExtraT";
		editorTemplate -suppress "RightShoulderExtraR";
		editorTemplate -suppress "RightShoulderExtraS";
	
	// include/call base class/node attributes
	AEdependNodeTemplate $nodeName;

	editorTemplate -addExtraControls;
	editorTemplate -endScrollLayout;
}
