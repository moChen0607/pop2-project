// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
// Script:    AEcolorRemapNew.mel
//
// SYNOPSIS
//          Creates a color re-map button on a texture.
//

global proc AEcolorRemapPointer ( string $outColor )
{
	string $rgbToHsvNode[] = `listConnections $outColor`;

	if (`attributeQuery -exists -node $rgbToHsvNode[0] outHsvH `) {
		string $remapRamp[] = `listConnections ($rgbToHsvNode[0] + ".outHsvH")`;

		select $remapRamp[0];
		editSelected;
	}
}

global proc AEcolorRemapNew (string $outColor)
//
// Description:
//		Setup up button that makes a color reamp network.
//
{
	setUITemplate -pst attributeEditorTemplate;
	rowLayout -nc 3 ;//-cat 3 both 0 -cal 3 center;
    		text -label (uiRes("m_AEcolorRemapNew.kColorRemap")) ;
		button -label (uiRes("m_AEcolorRemapNew.kInsert"))  
			-c ("AEcolorRemap " + $outColor) colorRemapControl;
		symbolButton -i "inArrow.png" 
			-c ("AEcolorRemapPointer " + $outColor) colorRemapPointer;
		setParent ..;
	setUITemplate -ppt;
}

//
//  Procedure Name:
//	AEspotLightFogReplace
//
//

global proc AEcolorRemapReplace (string $outColor)
//
// Description:
//		Replace the button with the command to create a color
//		remap for this texture.
//
{
	button -e -c ("AEcolorRemap " + $outColor) colorRemapControl;
	symbolButton -e
		-c ("AEcolorRemapPointer " + $outColor) colorRemapPointer;
		
}
