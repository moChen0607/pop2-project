// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:	May 14, 1997
//
//  Procedure Name:
//	AEcameraShowImagePlane
//
//  Description Name;
//	Creates the attribute editor controls to show diaply an image plane 
//	correctly in the camera editor for the camera Node
//
//  Input Value:
//	nodeName 
//
//  Output Value:
//	None
// 


global proc AEcameraShowImagePlane(string $list)
{
    string $connect[] = `listConnections $list`;
    int $i;
   
	setUITemplate -pst attributeEditorTemplate;
    	rowLayout -nc 3 AEshowLayout;
    		text -label (uiRes("m_AEcameraShowImagePlane.kCurrentImagePlanes")) ;
    		if (size($connect) == 0) {
			optionMenu -l "" AEshowMenu;
				menuItem -label (uiRes("m_AEcameraShowImagePlane.kNoImagePlanes")) ;
   			symbolButton -i "inArrow.png" -en false AEshowButtonAE;
			setParent ..;
		} else {
    			optionMenu -l "" AEshowMenu;
    			for ($i = 0; $i < size($connect); $i++)
        			menuItem -l $connect[$i] ("AEshowAE" + $i);
   			symbolButton -i "inArrow.png" 
				-c "AEcameraDisplayImagePlane" AEshowButtonAE;
			setParent ..;
		}
	setUITemplate -ppt;
}

//
//  Procedure Name:
//	AEcameraReshowImagePlane
//

global proc AEcameraReshowImagePlane(string $list)
{
    int $i;
    string $curr;

    if (`rowLayout -exists AEshowLayout`)
        deleteUI AEshowLayout;
    if (`optionMenu -exists AEshowMenu`)
        deleteUI AEshowMenu;
    if (`button -exists AEshowButtonAE`)
        deleteUI AEshowButtonAE;

    for ($i = 0; $i < 100; $i++)
    {
        $curr = ("AEshowAE" + $i);
        if (`menuItem -exists $curr`)
            deleteUI $curr;
        else
            break;
    }

    AEcameraShowImagePlane($list);
}

//
//  Procedure Name:
//	AEcameraDisplayImagePlane
//

global proc AEcameraDisplayImagePlane()
{
    string $curr = `optionMenu -q -v AEshowMenu`;
    showEditor $curr;
}

