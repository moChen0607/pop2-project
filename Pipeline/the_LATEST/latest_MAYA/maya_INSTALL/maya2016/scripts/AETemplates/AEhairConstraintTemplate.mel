// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date: 2003 
//
//  Procedure Name:
//  AEhairConstraintTemplate
//
//  Description Name;
//  Creates the attribute editor controls for the hairConstraint node
//
//


global proc AEhairConstraintUpdateConstraintMethod( string $nodeName )
{
		int $constraintMethod = getAttr($nodeName + ".constraintMethod" );
		int $collide = ($constraintMethod == 6 || $constraintMethod == 7);
		int $pointMethod = getAttr($nodeName + ".pointMethod" );
		
		// editorTemplate -dimControl $nodeName "stiffness" ($collide);
		editorTemplate -dimControl $nodeName "glueStrength" ($collide);
		editorTemplate -dimControl $nodeName "pointMethod" ($collide);
		editorTemplate -dimControl $nodeName "uParameter" ($pointMethod != 1 || $collide);
		editorTemplate -dimControl $nodeName "uDistance" ($pointMethod != 2 || $collide);
}

global proc AEhairConstraintUpdatePointMethod( string $nodeName )
{
		int $constraintMethod = getAttr($nodeName + ".constraintMethod" );
		int $collide = ($constraintMethod == 6 || $constraintMethod == 7);
		int $pointMethod = getAttr($nodeName + ".pointMethod" );
		editorTemplate -dimControl $nodeName "uParameter" ($pointMethod != 1 || $collide);
		editorTemplate -dimControl $nodeName "uDistance" ($pointMethod != 2 || $collide);
}


global proc AEhairConstraintTemplate( string $nodeName )
{

    editorTemplate -beginScrollLayout;

        editorTemplate -beginLayout (uiRes("m_AEhairConstraintTemplate.kHairConstraintAttributes"))  -collapse 0;
			editorTemplate -addControl "constraintMethod" "AEhairConstraintUpdateConstraintMethod";
			editorTemplate -addControl "stiffness";
			editorTemplate -addControl "glueStrength";
			editorTemplate -addSeparator;
			editorTemplate -addControl "pointMethod" "AEhairConstraintUpdatePointMethod";
			editorTemplate -addControl "uParameter";
			editorTemplate -addControl "uDistance";
			editorTemplate -addSeparator;
            AElocatorCommon $nodeName;
			editorTemplate -addControl "curveIndices";
        editorTemplate -endLayout;

        AElocatorInclude $nodeName;

    editorTemplate -addExtraControls;
    editorTemplate -endScrollLayout;

}


