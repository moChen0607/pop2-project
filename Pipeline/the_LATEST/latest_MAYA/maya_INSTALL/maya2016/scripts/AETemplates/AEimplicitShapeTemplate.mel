// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:	May 14, 1997
//
//  Procedure Name:
//	AEimplicitShapeTemplate
//
//  Description:
//	Creates the attribute editor controls for the implicitShapeNode
//
//  Input Value:
//	nodeName
//
//  Output Value:
//	None
//


//
//  Procedure Name:
//	checkImplicitAntialiasingOverride
//
//

global proc checkImplicitAntialiasingOverride( string $nodeName ) 
{
	// 
	string $nodeAttr = $nodeName + ".geometryAntialiasingOverride";
	int $value = `getAttr $nodeAttr`;
	if ( $value == 1 ) {
		editorTemplate -dimControl $nodeName "antialiasingLevel" false;
	} else {
		editorTemplate -dimControl $nodeName "antialiasingLevel" true;
	} 
}

//
//  Procedure Name:
//	checkImplicitShadingSamplesOverride
//
//

global proc checkImplicitShadingSamplesOverride ( string $nodeName ) 
{
	// Note: volume needs this attribute also!!
	string $nodeAttr = $nodeName + ".shadingSamplesOverride";
	int $value = `getAttr $nodeAttr`;
	if ( $value == 1 ) {
		editorTemplate -dimControl $nodeName "shadingSamples" false;
		editorTemplate -dimControl $nodeName "maxShadingSamples" false;
	} else {
		editorTemplate -dimControl $nodeName "shadingSamples" true;
		editorTemplate -dimControl $nodeName "maxShadingSamples" true;
	} 
}

//
//  Procedure Name:
//	checkImplicitVolumeSamplesOverride
//
//

global proc checkImplicitVolumeSamplesOverride ( string $nodeName ) 
{
	string $nodeAttr = $nodeName + ".volumeSamplesOverride";
	int $value = `getAttr $nodeAttr`;
	if ( $value == 1 ) {
		editorTemplate -dimControl $nodeName "volumeSamples" false;
	} else {
		editorTemplate -dimControl $nodeName "volumeSamples" true;
	}
}


//
//  Procedure Name
//	AEimplicitShapeTemplate
//

global proc AEimplicitShapeTemplate( string $nodeName )
{
	editorTemplate -suppress "compInstObjGroups";

	{
		editorTemplate -beginLayout (uiRes("m_AEimplicitShapeTemplate.kRenderStats")) ;
			editorTemplate -beginNoOptimize;
			editorTemplate -addControl "castsShadows";
			editorTemplate -addControl "receiveShadows";
			editorTemplate -suppress "motionBlur";
			editorTemplate -addControl "primaryVisibility";
			editorTemplate -addControl "smoothShading";
			editorTemplate -addControl "visibleInReflections";
			editorTemplate -addControl "visibleInRefractions";
			editorTemplate -endNoOptimize;
		
			editorTemplate -addSeparator;
			editorTemplate 
                -label (uiRes("m_AEimplicitShapeTemplate.kGeometryAntialiasingOverride")) 
                -addControl "geometryAntialiasingOverride" "checkImplicitAntialiasingOverride";
			editorTemplate -addControl "antialiasingLevel";

			editorTemplate -addControl "shadingSamplesOverride" "checkImplicitShadingSamplesOverride";
			editorTemplate -addControl "shadingSamples";
			editorTemplate -addControl "maxShadingSamples";
	
			editorTemplate -addControl "volumeSamplesOverride" "checkImplicitVolumeSamplesOverride";
			editorTemplate -addControl "volumeSamples";

			editorTemplate -addControl "depthJitter";
		editorTemplate -endLayout;
	}	

	// include/call base class/node attributes
	AEshapeTemplate $nodeName;

}
