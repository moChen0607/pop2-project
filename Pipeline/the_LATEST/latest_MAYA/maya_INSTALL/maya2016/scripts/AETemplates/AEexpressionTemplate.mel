// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//	Procedure Name:
//	AEnurbsCurveTemplate
//
//	Description Name;
//	Creates the attribute editor controls for the expression node
//
//	Input Value:
//	nodeName
//
//	Output Value:
//	None
//

global proc AEexpressionFieldNew ( string $expression )
{
	global int $gTextColumnWidthIndex;
	setUITemplate -pst attributeEditorTemplate;
	formLayout expressionForm;
	text -label (uiRes("m_AEexpressionTemplate.kExpression")) exprText;
	textField -ed 0 exprField;
	setParent ..;
	formLayout -e 
		-aof exprText right (5 - $gTextColumnWidthIndex)
		-af exprText top 0
		-af exprText bottom 0
		-an exprText left
		-af exprField top 0
		-af exprField bottom 0
		-af exprField right 0
		-ac exprField left 5 exprText
		expressionForm;


	setUITemplate -ppt;

	AEexpressionFieldReplace $expression;
	
}
global proc AEexpressionFieldReplace ( string $expression )
{
	scriptJob -rp -p exprField 
		-attributeChange $expression
		("AEexpressionFieldUpdate " + $expression);	
	AEexpressionFieldUpdate  $expression;
}

global proc AEexpressionFieldUpdate (string $expression)
{
	string  $expressionValue = `getAttr $expression`;
	textField -e -tx $expressionValue exprField;
}

global proc AEexpressionTemplate( string $nodeName )
{
	editorTemplate -beginScrollLayout;
		editorTemplate -callCustom "AEexpressionFieldNew"
				"AEexpressionFieldReplace"
				"expression";

	// include/call base class/node attributes
	AEdependNodeTemplate $nodeName;

	editorTemplate -suppress "input";
	editorTemplate -suppress "output";

	editorTemplate -addExtraControls;
	editorTemplate -endScrollLayout;
}
