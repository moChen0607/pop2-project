// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:	Feb 8, 1999
//
//  Procedure Name:
//	AEdynGlobalsTemplate
//
//  Description Name;
//	Creates the attribute editor controls for dynGlobals Node
//
//  Input Value:
//	nodeName 
//
//  Output Value:
//	None
// 

global proc useParticleDiskCacheCallback ( string $nodeName )
{
	string $nodeAttr = $nodeName + ".useParticleDiskCache";
	string $value = `getAttr $nodeAttr`;
	
	if ( $value ) {
		if (`about -evalVersion`) {
			setAttr ($nodeAttr) 0;
			// Because dynExport is disabled in PLE, this attribute
			// is ignored, so don't bother letting people set it.
			//
			string $cancel = (uiRes("m_AEdynGlobalsTemplate.kCancel"));
			confirmDialog
				-message (uiRes("m_AEdynGlobalsTemplate.kNoPLE")) 
				-button $cancel  -defaultButton $cancel;
			return;
		}
		
		// enable attribute controls.
		// but keep the min and max frame locked
		//
		editorTemplate -dimControl $nodeName "cacheDirectory" false;
		editorTemplate -dimControl $nodeName "minFrameCached" false;
		editorTemplate -dimControl $nodeName "maxFrameCached" false;
	} else {
		editorTemplate -dimControl $nodeName "cacheDirectory" true;
		editorTemplate -dimControl $nodeName "minFrameCached" true;
		editorTemplate -dimControl $nodeName "maxFrameCached" true;
	}
}

global proc AEdynGlobalsTemplate ( string $nodeName )
{
	editorTemplate -beginScrollLayout;

		editorTemplate -beginLayout (uiRes("m_AEdynGlobalsTemplate.kOversampling"))  -collapse 0;

			editorTemplate -addControl "overSamples";

		editorTemplate -endLayout;

		editorTemplate -beginLayout (uiRes("m_AEdynGlobalsTemplate.kParticleDiskCache"))  -collapse 0;

			editorTemplate -addControl "useParticleDiskCache" "useParticleDiskCacheCallback";
			editorTemplate -addControl "cacheDirectory";
			editorTemplate -addControl "minFrameCached";
			editorTemplate -addControl "maxFrameCached";
			// setAttr -lock true ($nodeName + ".minFrameCached");
			// setAttr -lock true ($nodeName + ".maxFrameCached");

		editorTemplate -endLayout;

		// suppress some inherited attributes from the extras tab.
		//
		editorTemplate -suppress "nodeState";
		editorTemplate -suppress "caching";
		editorTemplate -suppress "pathVerified";
		editorTemplate -suppress "confirmSceneName";

		editorTemplate -addExtraControls;

	editorTemplate -endScrollLayout;
}

