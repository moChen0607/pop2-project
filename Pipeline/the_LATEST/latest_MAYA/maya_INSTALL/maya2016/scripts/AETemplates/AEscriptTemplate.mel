// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//  Procedure Name: 
//	AEscriptTemplate
//
//  Description:
//	Controls for script nodes.
//
//  Input Value:
//	nodeName 
//
//  Output Value:
//	None
// 

global proc AEbeforeScriptFieldNew(string $attrName)
{
	global int $gTextColumnWidthIndex;
	setUITemplate -pst attributeEditorTemplate;
	formLayout beforeScriptForm;
	text -label (uiRes("m_AEscriptTemplate.kBefore")) beforeScriptText;
	textField -ed 0 beforeScriptField;
	setParent ..;
	formLayout -e
		-aof beforeScriptText right (5 - $gTextColumnWidthIndex)
		-af beforeScriptText top 0
		-af beforeScriptText bottom 0
		-an beforeScriptText left
		-af beforeScriptField top 0
		-af beforeScriptField bottom 0
		-af beforeScriptField right 0
		-ac beforeScriptField left 5 beforeScriptText
		beforeScriptForm;

	setUITemplate -ppt;

	AEbeforeScriptFieldReplace($attrName);
}

global proc AEafterScriptFieldNew(string $attrName)
{
	global int $gTextColumnWidthIndex;
	setUITemplate -pst attributeEditorTemplate;
	formLayout afterScriptForm;
	text -label (uiRes("m_AEscriptTemplate.kAfter")) afterScriptText;
	textField -ed 0 afterScriptField;
	setParent ..;
	formLayout -e
		-aof afterScriptText right (5 - $gTextColumnWidthIndex)
		-af afterScriptText top 0
		-af afterScriptText bottom 0
		-an afterScriptText left
		-af afterScriptField top 0
		-af afterScriptField bottom 0
		-af afterScriptField right 0
		-ac afterScriptField left 5 afterScriptText
		afterScriptForm;

	setUITemplate -ppt;

	AEafterScriptFieldReplace($attrName);
}

global proc AEbeforeScriptFieldReplace(string $attrName)
{
	scriptJob 	-rp -p beforeScriptField
				-attributeChange $attrName
				("AEbeforeScriptFieldUpdate " + $attrName);
	AEbeforeScriptFieldUpdate $attrName;
}

global proc AEafterScriptFieldReplace(string $attrName)
{
	scriptJob 	-rp -p afterScriptField
				-attributeChange $attrName
				("AEafterScriptFieldUpdate " + $attrName);
	AEafterScriptFieldUpdate $attrName;
}

global proc AEbeforeScriptFieldUpdate(string $attrName)
{
	string $script = `getAttr $attrName`;
	textField -e -tx $script beforeScriptField;
}

global proc AEafterScriptFieldUpdate(string $attrName)
{
	string $script = `getAttr $attrName`;
	textField -e -tx $script afterScriptField;
}

global proc AEscriptTemplate(string $nodeName)
{
	editorTemplate -beginScrollLayout;
		editorTemplate -beginLayout (uiRes("m_AEscriptTemplate.kScriptAttributes")) -collapse 0;
			editorTemplate -addControl "scriptType";
			editorTemplate -callCustom 	"AEbeforeScriptFieldNew" 
										"AEbeforeScriptFieldReplace"
										"before";
			editorTemplate -callCustom 	"AEafterScriptFieldNew" 
										"AEafterScriptFieldReplace"
										"after";
			editorTemplate -addControl "sourceType";
		editorTemplate -endLayout;

		AEdependNodeTemplate $nodeName;

		editorTemplate -addExtraControls;

		editorTemplate -endLayout;
	editorTemplate -endScrollLayout;
}
