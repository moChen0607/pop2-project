// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//	Creation Date:	Mar 24, 2009
//
//	Procedure Name:
//	    AEcolorProfileRelated
//
//	Description Name;
//	    Return all of the nodes related to the given color profile

global proc string[] AEcolorProfileRelated( string $node )
{
	string $relatedNodes[];
    int $maxConnections = 10; // do not show more than this many tabs in the AE
    
    string $connections[] = `listConnections $node`;
    
    int $loopMax = 0;
    if (size($connections) > $maxConnections){
        $loopMax = $maxConnections;
        warning (uiRes("m_AEcolorProfileRelated.kTooManyNodesLabel"));
    }
    else{
        $loopMax = size($connections);
    }
    
    int $cur;
    for ($cur = 0; $cur < $loopMax; $cur++){
        string $objectType = `nodeType -api $connections[$cur]`;
        if (($objectType != "kRenderPass") && ($objectType != "kFileTexture") && ($objectType != "kMentalRayTexture") && ($objectType != "kPluginDependNode"))
            continue;
        // add the node to the list of related nodes
        $relatedNodes[size($relatedNodes)] = $connections[$cur];
    }
    
	$relatedNodes[size($relatedNodes)] = $node;
	return $relatedNodes;
}
