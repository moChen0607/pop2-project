// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:	Sept 1, 2003
//
//  Procedure Name:
//	AEsoftModHandleWtNodeNew
//
//  Description Name;
//	Creates the multi attribute controls for the softModHandle Node
//
//  Input Value:
//	nodeName.attrName
//
//  Output Value:
//	None
// 



global proc AEsoftModHandleWtNodeNew ( string $attr )
{
	string $buffer[];
	tokenize($attr, ".", $buffer);
	string $nodeName = $buffer[0];
	string $att	 = $buffer[1];
	

	setUITemplate -pst attributeEditorTemplate;
  
	columnLayout ($att+"Column");
	string $wNode[] =`listConnections -p false $attr`;
	string $wn,$un;
	string $tr[] =`listRelatives -p  $nodeName`;
	if (!size($tr))
		$tr[0]= $nodeName;
	$un=$tr[0];
	if (size($wNode))
	{
		$wn=$wNode[0];
	}
	else
	{
		$wn=$un;
	}
	textFieldButtonGrp -label (uiRes("m_AEsoftModHandleWtNodeNew.kWeightedNode"))
		-buttonLabel ">" -text $wn($att+ "WtNode");
	setParent ..;
	setUITemplate -ppt;
	AEsoftModHandleWtNodeReplace $attr;
}


global proc AEsoftModHandleWtNodeReplace ( string $attr )
{
	string $buffer[];
	tokenize($attr, ".", $buffer);
	string $nodeName = $buffer[0];
	string $att	 = $buffer[1];

	string $wNode[] =`listConnections -p false $attr`;
	string $wn,$un;
	string $tr[] =`listRelatives -p  $nodeName`;
	if (!size($tr))
		$tr[0]= $nodeName;
	$un=$tr[0];
	if (size($wNode))
	{
		$wn=$wNode[0];
	}
	else
	{
		$wn=$un;
	}

	setUITemplate -pst attributeEditorTemplate;
	setParent ($att+"Column");
	string $ccmd="string $wnode=`textFieldButtonGrp -q -tx "
		+$att+"WtNode`;if (catch(`softMod -e -bs 1 -wn $wnode $wnode "+$nodeName+
		"`)){textFieldButtonGrp -e -tx `softMod -q -wn "+$nodeName+"`;}"; 
	
	string $bccmd="string $wnode=`textFieldButtonGrp -q -tx "
		+$att+"WtNode`;select $wnode;editSelected;";

	textFieldButtonGrp -e -label (uiRes( "m_AEsoftModHandleWtNodeNew.kWeightedNode"))
			-buttonLabel ">"
			-text $wn-cc $ccmd -bc $bccmd ($att+"WtNode");	

	setParent ..;
	setUITemplate -ppt;
}

