// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

// FILE: AEparticleRelated.mel
// INPUT: name of the particle node that is in the editor, that we are
//        finding related nodes for.  At this time, we are just looking for
//		  emitters that are connected to it.
//
// RETURN:	list of related nodes, with the node whose tab you want to be
//          opened -- i.e. the particle node -- added at the end of the
//          array.  For now the only related nodes will be emitters connected
//          to -- emitting into -- this particle.
//

global proc string[] AEinstancerRelated (string $node)
{
	string $relatedNodes[];

	int $i;
	int $numRelated = 0;

	$connections = `listConnections -shapes true $node`;

	// See if the particle is connected to the emitter's output attribute.
	// If it is, add it to the list of related nodes.
	//
	for ($i = 0; $i < size($connections); $i++) 
	{
		$relatedNodes[$numRelated] = $connections[$i];
		$numRelated++;
	}

	// The AE will first open the tab at the end of the list, so add the particle
	// shape node name at the end of the list so it will be opened.
	// Actually, we have to add it twice, because "they" are assuming the last one
	// is a duplicate and are stripping it out. 
	//
	int $index = size($relatedNodes);

	$relatedNodes[$index] = $node;
	$relatedNodes[$index+1] = $node;

	return $relatedNodes;
}

