// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

// File:			AEcomposeMatrixTemplate.mel
//
// Description:		Attribute Editor Template for composeMatrix node
//			
//


global proc AEcomposeMatrixTemplate( string $nodeName )
{
	editorTemplate -beginScrollLayout;
		editorTemplate -beginLayout (uiRes("m_AEcomposeMatrixTemplate.kInputProperties")) -collapse false;
			editorTemplate -addControl "inputTranslate";
			editorTemplate -addControl "inputRotate";
			editorTemplate -addControl "inputScale";
			editorTemplate -addControl "inputShear";
			editorTemplate -addControl "inputRotateOrder";
			editorTemplate -addControl "useEulerRotation" "composeMatrixDimCallback";
			editorTemplate -addControl "inputQuat";
		editorTemplate -endLayout;

		editorTemplate -beginLayout (uiRes("m_AEcomposeMatrixTemplate.kOutputProperties")) -collapse false;
			editorTemplate -addControl "outputMatrix";
		editorTemplate -endLayout;
	
		editorTemplate -addExtraControls;

	editorTemplate -endScrollLayout;
}

global proc composeMatrixDimCallback( string $node )
{
	int $useEuler = `getAttr ($node + ".useEulerRotation")`;
	editorTemplate -dimControl $node "inputRotate" ($useEuler == 0);
	editorTemplate -dimControl $node "inputRotateOrder" ($useEuler == 0);
	editorTemplate -dimControl $node "inputQuat" ($useEuler == 1);
}
