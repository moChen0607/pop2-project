// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//  Procedure Name:
//	AEsymmetryConstraintTemplate
//
//  Description Name;
//	Creates the attribute editor controls for the symmetryConstraint Node
//
//  Input Value:
//	nodeName 
//
//  Output Value:
//	None
// 





global proc AEsymmetryConstraintTemplate ( string $nodeName )
{
	editorTemplate -beginScrollLayout;
		
		editorTemplate -beginLayout (uiRes("m_AEsymmetryConstraintTemplate.kSymmetryConstraintAttributes"))  -collapse 0;
			editorTemplate -addControl "constraintTranslate";
			editorTemplate -addControl "constraintRotate";
			editorTemplate -addControl "constraintScale";
			editorTemplate -addControl "constraintRotateOrder";
			editorTemplate -addControl "constraintJointOrient";
			editorTemplate -addControl "xAxis";	
			editorTemplate -addControl "yAxis";
			editorTemplate -addControl "zAxis";
			editorTemplate -addControl "symmetryMiddlePoint";
			editorTemplate -addControl "symmetryRootOffset";
			editorTemplate -addControl "targetTranslate";
			editorTemplate -addControl "targetRotate";	
			editorTemplate -addControl "targetScale";
			editorTemplate -addControl "targetRotateOrder";	
			editorTemplate -addControl "targetJointOrient";
			editorTemplate -addControl "targetJointType";
			editorTemplate -addControl "targetChildTranslate";
			editorTemplate -addControl "xChildAxis";	
			editorTemplate -addControl "yChildAxis";
			editorTemplate -addControl "zChildAxis";

			editorTemplate -suppress "targetWorldMatrix";
			editorTemplate -suppress "targetParentMatrix";
			editorTemplate -suppress "constraintInverseParentWorldMatrix";
			editorTemplate -suppress "symmetryRootWorldMatrix";
			editorTemplate -suppress "targetParentMatrix";
			editorTemplate -suppress "target";
		editorTemplate -endLayout;


	editorTemplate -addExtraControls;
	editorTemplate -endScrollLayout;
}
