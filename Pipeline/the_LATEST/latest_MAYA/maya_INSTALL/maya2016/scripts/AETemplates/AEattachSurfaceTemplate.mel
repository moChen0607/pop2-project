// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//  Procedure Name:
//	AEattachSurfaceTemplate
//
//  Description Name;
//	Creates the attribute editor controls for the attachSurface Node
//
//  Input Value:
//	nodeName 
//
//  Output Value:
//	None
// 


global proc attachSurfaceBlendKnotInsertionControls( string $nodeName )
{
	int $m = `getAttr ($nodeName + ".blendKnotInsertion")`;
	if( 0 == $m ) {
		editorTemplate -dimControl $nodeName "parameter" true;
	}
	else {
		editorTemplate -dimControl $nodeName "parameter" false;
	}
}

global proc attachSurfaceMethodControls( string $nodeName )
{
	int $m = `getAttr ($nodeName + ".method")`;
	if( 0 == $m ) {
		editorTemplate -dimControl $nodeName "keepMultipleKnots" false;
		editorTemplate -dimControl $nodeName "blendBias" true;
		editorTemplate -dimControl $nodeName "blendKnotInsertion" true;
		editorTemplate -dimControl $nodeName "parameter" true;
	}
	else {
		editorTemplate -dimControl $nodeName "keepMultipleKnots" true;
		editorTemplate -dimControl $nodeName "blendBias" false;
		editorTemplate -dimControl $nodeName "blendKnotInsertion" false;
		attachSurfaceBlendKnotInsertionControls( $nodeName );
	}
}

global proc AEattachSurfaceTemplate ( string $nodeName )
{
	editorTemplate -beginScrollLayout;
		editorTemplate -beginLayout (uiRes("m_AEattachSurfaceTemplate.kAttachSurfaceHistory"))  -collapse 0;
			string $input1 = (uiRes("m_AEattachSurfaceTemplate.kInput1"));
			string $input2 = (uiRes("m_AEattachSurfaceTemplate.kInput2"));

			editorTemplate -callCustom ("AEinputNew \"" + $input1 + "\"")
					("AEinputReplace \"" + $input1 + "\"")
					"inputSurface1";
			editorTemplate -callCustom ("AEinputNew \"" + $input2 + "\"")
					("AEinputReplace \"" + $input2 + "\"")
					"inputSurface2";

			editorTemplate -addControl "method" "attachSurfaceMethodControls";

			editorTemplate -addControl "blendBias";
			editorTemplate -addControl "blendKnotInsertion"
				"attachSurfaceBlendKnotInsertionControls";
			editorTemplate -addControl "parameter";

			editorTemplate -addControl "keepMultipleKnots";
			editorTemplate -addControl "directionU";
			editorTemplate -addControl "reverse1";
			editorTemplate -addControl "reverse2";
			editorTemplate -addControl "swap1";
			editorTemplate -addControl "swap2";
			editorTemplate -addControl "twist";

		editorTemplate -endLayout;

		// include/call base class/node attributes
		AEabstractBaseCreateTemplate $nodeName;

	editorTemplate -addExtraControls;
	editorTemplate -endScrollLayout;
}
