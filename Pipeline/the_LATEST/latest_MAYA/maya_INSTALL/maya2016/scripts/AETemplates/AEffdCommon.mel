// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//	Procedure Name:
//	AEffdCommon 
//
//	Description Name;
//	Creates the attribute editor controls for the ffd node
//
//	Input Value:
//	nodeName
//
//	Output Value:
//	None
//

global proc checkFfdPartialResolution ( string $nodeName )
{
	string $nodeAttr = $nodeName + ".usePartialResolution";
	int $value = `getAttr $nodeAttr`;
	if ($value == 0) {
		editorTemplate -dimControl $nodeName "partialResolution" true;
	} else {
		editorTemplate -dimControl $nodeName "partialResolution" false;
	}
}

global proc checkFfdLocal ( string $nodeName )
{
	string $nodeAttr = $nodeName + ".local";
	int $value = `getAttr $nodeAttr`;
	if ($value == 0) {
		editorTemplate -dimControl $nodeName "localInfluenceS" true;
		editorTemplate -dimControl $nodeName "localInfluenceT" true;
		editorTemplate -dimControl $nodeName "localInfluenceU" true;
	} else {
		editorTemplate -dimControl $nodeName "localInfluenceS" false;
		editorTemplate -dimControl $nodeName "localInfluenceT" false;
		editorTemplate -dimControl $nodeName "localInfluenceU" false;
	}
}

// This method implements a falloff distance.
//
global proc checkOutsideLattice ( string $nodeName )
{
	string $nodeAttr = $nodeName + ".outsideLattice";
	int $value = `getAttr $nodeAttr`;
	if ( $value == 0 || $value == 1 ) {
		editorTemplate -dimControl $nodeName "outsideFalloffDist" true;
	} else {
		editorTemplate -dimControl $nodeName "outsideFalloffDist" false;
	}
}

global proc AEuseFfdPartialResolutionNew( string $attrName )
{
	setUITemplate -pst attributeEditorTemplate;	
 	attrEnumOptionMenuGrp -attribute $attrName 
		-label (uiRes("m_AEffdCommon.kResolution")) 
    	usePartialResolutionEnum;
    setUITemplate -ppt;

	AEuseFfdPartialResolutionReplace $attrName;
}

global proc AEuseFfdPartialResolutionReplace( string $attrName )
{
	string $tmp[];
	tokenize($attrName, ".", $tmp);
	string $nodeName = $tmp[0];

 	attrEnumOptionMenuGrp -e -attribute $attrName 
		-label (uiRes("m_AEffdCommon.kResolution"))
    	usePartialResolutionEnum;
	scriptJob -p usePartialResolutionEnum -rp
		-ac $attrName ("checkFfdPartialResolution " + $nodeName );

	// Check the partial resoultion initial state
	//
	evalDeferred ("checkFfdPartialResolution " + $nodeName);
}

global proc AEffdCommon ( string $nodeName )
{
	editorTemplate -addControl "local" "checkFfdLocal";
	editorTemplate -addControl "localInfluenceS";
	editorTemplate -addControl "localInfluenceT";
	editorTemplate -addControl "localInfluenceU";
	
	editorTemplate -addControl "outsideLattice" "checkOutsideLattice";
	editorTemplate -addControl "outsideFalloffDist";
	
	editorTemplate -addSeparator;
	
	editorTemplate -callCustom "AEuseFfdPartialResolutionNew"
		"AEuseFfdPartialResolutionReplace" "usePartialResolution";
	editorTemplate -addControl "partialResolution";
	editorTemplate -addControl "freezeGeometry";

	// include/call base class/node attributes
	AEgeometryFilterCommon $nodeName;
	
	// suppressed attributes
	editorTemplate -suppress "caching";
}
