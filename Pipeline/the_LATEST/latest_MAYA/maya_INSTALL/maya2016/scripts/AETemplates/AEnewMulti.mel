// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  July 10, 1997
//
//  Procedure Name:
//  AEnewMulti
//
//  Description Name;
//  Creates a channel box for a mulit attribute in the AE
//
//  Input Value:
//  nodeName, attribute, attribute's UI name, changedCommand
//
//  Return Value
//  This method returns an array of strings.  The 0th element
//  in the array is the OUTERMOST layout created here.  This will
//  be used later to delete these controls.  The 1st element is
//  the selectionConnection used to attach the channel box to a
//  particular node.
//
//

global proc string[] AEnewMulti( string $nodeName,
								 string $attribute,
								 string $attrUIName,
								 string $changedCommand )
{
	global int $gTextColumnWidthIndex;
	global int $gChannelBoxWidgetWidthIndex;
	global int $gChannelBoxWidgetHeightIndex;

	setUITemplate -pushTemplate attributeEditorTemplate;
	$baseLayout = `frameLayout -l $attrUIName`;  //outermost layout must be returned later
		$createdLayout = `columnLayout -adj true -vis false`;
			$createdConnection = `selectionConnection
									-p $createdLayout
									-obj $nodeName`;
			$createdChannelBox = `channelBox
									-mw $gChannelBoxWidgetWidthIndex
									-lw $gTextColumnWidthIndex
									-mh $gChannelBoxWidgetHeightIndex
									-mlc $createdConnection
									-p $createdLayout
									-fal {$attribute}
									-aem true`;
		setParent ..;
		columnLayout -e -vis true $createdLayout;
	setParent ..;

	setUITemplate -popTemplate;

	if ($changedCommand != "") {
		string $cmd = $changedCommand + " \"" + $nodeName + "\"";
		scriptJob
			-p $createdLayout -rp
			-ac ($nodeName + "." + $attribute) $cmd;
	}

	string $retval[2];
	$retval[0] = $baseLayout;
	$retval[1] = $createdConnection;

	return $retval;
}
