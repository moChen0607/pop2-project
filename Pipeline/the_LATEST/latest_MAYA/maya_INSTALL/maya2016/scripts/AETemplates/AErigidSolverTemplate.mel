// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//	Procedure Name:
//	AErigidSolverTemplate
//
//	Description Name;
//	Creates the attribute editor controls for the rigidSolver node
//
//	Input Value:
//	nodeName
//
//	Output Value:
//	None
//

global proc AErigidSolverDeleteCacheNew ( string $isDataCached )
{
	string $nodeName[];
	tokenize($isDataCached, ".", $nodeName);

	setUITemplate -pst attributeEditorTemplate;
	
	rowLayout -nc 2 rigidSolverDeleteCacheRow;
		text -label (uiRes("m_AErigidSolverTemplate.kDeleteCache")) ;
		button -label (uiRes("m_AErigidSolverTemplate.kDelete"))  rigidSolverDeleteChacheButton;
		setParent ..;

	setUITemplate -ppt;
	AErigidSolverDeleteCacheReplace $isDataCached;
}

global proc AErigidSolverDeleteCacheReplace ( string $isDataCached )
{
	string $nodeName[];
	tokenize($isDataCached, ".", $nodeName);

	button -e -c ("rigidSolver -e -deleteCache " + $nodeName[0]) rigidSolverDeleteChacheButton;
		setParent ..;

}

global proc checkRigidSolverIsDataCached ( string $nodeName )
{
	int $isDataCachedValue = `getAttr ($nodeName + ".cacheData")`;

	if ( $isDataCachedValue ) {
		if (`rowLayout -exists rigidSolverDeleteCacheRow`)
			rowLayout -e -en 1 rigidSolverDeleteCacheRow;
	} else {
		if (`rowLayout -exists rigidSolverDeleteCacheRow`)
			rowLayout -e -en 0 rigidSolverDeleteCacheRow;
	}


}

global proc AErigidSolverTemplate( string $nodeName )
{
	
	editorTemplate -beginScrollLayout;
	
	editorTemplate -beginLayout (uiRes("m_AErigidSolverTemplate.kRigidSolverAttributes"))  -collapse false;
		editorTemplate -addControl "stepSize";
		editorTemplate -addControl "collisionTolerance";
		editorTemplate -addControl "scaleVelocity";
		editorTemplate -addControl "startTime";
		editorTemplate -addControl "currentTime";
	editorTemplate -endLayout;

	editorTemplate -beginLayout (uiRes("m_AErigidSolverTemplate.kRigidSolverMethods"))  -collapse false;
		editorTemplate -addControl "solverMethod";
	editorTemplate -endLayout;

	editorTemplate -beginLayout (uiRes("m_AErigidSolverTemplate.kRigidSolverStates"))  -collapse true;
		editorTemplate -beginNoOptimize;
		editorTemplate -addControl "state";
		editorTemplate -addControl "friction";
		editorTemplate -addControl "bounciness";
		editorTemplate -label (uiRes("m_AErigidSolverTemplate.kContactMotion"))  -addControl "dynamics";
		editorTemplate -addControl "contactData";
		editorTemplate -addControl "allowDisconnection";
		editorTemplate -addSeparator;			

		editorTemplate -addControl "cacheData" "checkRigidSolverIsDataCached";
		editorTemplate -callCustom "AErigidSolverDeleteCacheNew"
						   "AErigidSolverDeleteCacheReplace"
						   "cacheData";
		editorTemplate -endNoOptimize;
	editorTemplate -endLayout;

	editorTemplate -beginLayout (uiRes("m_AErigidSolverTemplate.kRigidSolverDisplayOptions"))  -collapse true;
		editorTemplate -beginNoOptimize;
		editorTemplate -addControl "displayConstraint";
		editorTemplate -addControl "displayCenterOfMass";
		editorTemplate -addControl "displayVelocity";
		editorTemplate -addControl "displayLabel";
		editorTemplate -endNoOptimize;
	editorTemplate -endLayout;


	// include/call base class/node attributes
	AEdependNodeTemplate $nodeName;

	editorTemplate -suppress "interpenetrate";
	editorTemplate -suppress "autoSolverTolerances";

	editorTemplate -addExtraControls;
	editorTemplate -endScrollLayout;
}
