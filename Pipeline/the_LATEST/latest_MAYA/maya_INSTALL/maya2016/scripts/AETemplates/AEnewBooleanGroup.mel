// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  28 June 1996
//
//  Description:
//      This procedure adds property sheet controls for
//		a new group of boolean attributes.  This is for internal
//		use only. 
//
//  Input Arguments:
//		An array of names of plugs for the attributes
//		An array of names of the attributes
//		The number of attributes in the array
//		
//  Return Value:
//      The name of the newly-created control.
//

global proc string AEnewBooleanGroup ( string $plugNames[], string $attrNames[], string $changedCommand[], int $attrCount )
{
	setUITemplate -pushTemplate attributeEditorTemplate;

	string $createdControl;

	$createdControl = `formLayout`;

	checkBoxGrp -ncb $attrCount valueFld;

	checkBoxGrp -e -l1 $attrNames[0] valueFld;
	if ( $attrCount > 1 )
	{
		checkBoxGrp -e -l2 $attrNames[1] valueFld;
	}
	if ( $attrCount > 2 )
	{
		checkBoxGrp -e -l3 $attrNames[2] valueFld;
	}
	if ( $attrCount > 3 )
	{
		checkBoxGrp -e -l4 $attrNames[3] valueFld;
	}

	formLayout -e
		-af valueFld top 0
		-af valueFld left 0
		-af valueFld right 0
		-af valueFld bottom 0
		$createdControl;
		
	// get a list of the sub-components of the checkboxgrp,
	// so that each scriptJob can be attached to a unique
	// component (making it easier to replace them in AEreplaceBoolean.mel)
	//
	string $subC[] = `layout -q -ca valueFld`;

	int $i,$j;
	string $buffer[];
	tokenize($plugNames[0],".",$buffer);
	for ( $i = 0; $i < $attrCount; $i++ )
	{
		$j = $i+2;
		connectControl -in $j valueFld $plugNames[$i];
		if ($changedCommand[$i] != "") {
			string $cmd = $changedCommand[$i] + " \"" + $buffer[0] + "\"";
			scriptJob -p $subC[$i] -rp -ac $plugNames[$i] $cmd;
		}
	}
	
	setParent ..;

	setUITemplate -popTemplate;

	return $createdControl;
}	

