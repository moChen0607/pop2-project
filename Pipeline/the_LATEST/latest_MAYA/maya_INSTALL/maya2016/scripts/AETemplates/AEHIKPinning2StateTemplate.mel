// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.



global proc HIKPinning2StateAddControl (string $nodeName )
{
    string $labelPinT = (uiRes("m_AEHIKPinning2StateTemplate.kPinT"));
    string $labelPinR = (uiRes("m_AEHIKPinning2StateTemplate.kPinR"));
    string $labelPullOverride = (uiRes("m_AEHIKPinning2StateTemplate.kPullOverride"));
    string $labelResistOverride = (uiRes("m_AEHIKPinning2StateTemplate.kResistOverride"));
    
	editorTemplate -beginLayout $nodeName -collapse 1;		
		editorTemplate -label $labelPinT -addControl ($nodeName + "PinT");
		editorTemplate -label $labelPinR -addControl ($nodeName + "PinR");
		editorTemplate -label $labelPullOverride -addControl ($nodeName + "PullOverride");
		editorTemplate -label $labelResistOverride -addControl ($nodeName + "ResistOverride");		
	editorTemplate -endLayout;
};
	
global proc AEHIKPinning2StateTemplate (string $nodeName )
{	
	editorTemplate -beginScrollLayout;
		
		editorTemplate -label (uiRes("m_AEHIKPinning2StateTemplate.kManipActive")) -addControl "manipActive";
		
		genericEffectorLayout "HIKPinning2StateAddControl";

		editorTemplate -suppress "InputEffectorState";
		editorTemplate -suppress "OutputEffectorState";		
		
	// include/call base class/node attributes
	AEdependNodeTemplate $nodeName;
		
	editorTemplate -addExtraControls;		
	editorTemplate -endScrollLayout;
}
