// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.


global proc AEclipGhostShapeColorNew( string $item )
{
	// Custom control so that the map button can be hidden
	//
	string $attr = plugAttr( $item );
	string $niceName = `attributeName -nice $item`;
	attrColorSliderGrp -label $niceName -showButton 0 -at $item ( $attr + "SliderGrp" );
}

global proc AEclipGhostShapeColorReplace( string $item )
{
	// Associate the new attribute with the widget
	//
	string $attr = plugAttr( $item );
	attrColorSliderGrp -e -at $item ( $attr + "SliderGrp" );
}

global proc AEclipGhostShapeTemplate ( string $nodeName )
{
	editorTemplate -beginScrollLayout;

		editorTemplate -suppress "clipGhostData";

		editorTemplate
			-beginLayout (uiRes("m_AEclipGhostShapeTemplate.kClipGhostShapeAttributes"))
			-collapse 0;

			editorTemplate -addControl "translate";
			editorTemplate -addControl "rotate";
			editorTemplate -addControl "rotateOrder";

			editorTemplate -addSeparator;

			editorTemplate -addControl "showStartPose";
			editorTemplate -addControl "showEndPose";
			editorTemplate -addControl "showIntermediatePoses";
			editorTemplate -addControl "showClipPath";
			editorTemplate -addControl "clipDirectionScale";
			editorTemplate -addControl "intermediatePoses";

			editorTemplate -addSeparator;

			editorTemplate -callCustom "AEclipGhostShapeColorNew" "AEclipGhostShapeColorReplace" "color";

		editorTemplate -endLayout;

		AEtransformNoScroll $nodeName;

	editorTemplate -addExtraControls;
	editorTemplate -endScrollLayout;
}
