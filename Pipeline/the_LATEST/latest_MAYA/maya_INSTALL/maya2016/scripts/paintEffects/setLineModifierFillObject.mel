// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

// setLineModifierFillObject
//
// This connects the selected mesh to the selected paint effects line modifier.
// The occupy attract will then attract only to points that are inside this mesh.
// The sense of inside/outside of the mesh is defined by its normals.

global proc setLineModifierFillObject()
{
	int $i;
	string $mesh[] = `ls -sl -dag -type mesh`;
	string $lineMod[] = `ls -sl -dag -type lineModifier`;
	if( size($mesh) == 0 && size( $lineMod ) == 1 ){
		string $input = ($lineMod[0]+".inputMesh");
		string $con = `connectionInfo -sfd $input`;
		if( size( $con ) > 0 ){
			disconnectAttr $con $input; // if only line modifier selected and it has a connection break it
			return;
		}
	}
 	if( size( $mesh )!= 1 || size( $lineMod ) != 1 ){
		string $mess = (uiRes("m_setLineModifierFillObject.kLineModNeedsSelection"));
		warning $mess;
		return;
	}
	if( getAttr( $lineMod[0] + ".occupyAttraction" ) == 0 ){
		setAttr ( $lineMod[0] + ".occupyAttraction" ) 20.0;
		setAttr ( $lineMod[0] + ".widthScale" ) 1.0;
		setAttr ( $lineMod[0] + ".shape" ) 1;
		removeMultiInstance -break true ($lineMod[0] +".dropoff[1]");
	}
	connectAttr -f ($mesh[0]+".worldMesh[0]") ($lineMod[0] + ".inputMesh");

}