// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

displayString -replace -value "Actual Size" m_dynPaintMenus.kActualSize;
displayString -replace -value "Display the Paint Effects view at the actual (pixel) size for its current resolution" m_dynPaintMenus.kActualSizeAnnot;
displayString -replace -value "All Channels" m_dynPaintMenus.kAllChannels;
displayString -replace -value "Display the red, green and blue channels of the image together" m_dynPaintMenus.kAllChannelsAnnot;
displayString -replace -value "Alpha Channel" m_dynPaintMenus.kAlphaChannel;
displayString -replace -value "Display the alpha channel of the image" m_dynPaintMenus.kAlphaChannelAnnot;
displayString -replace -value "Apply Texture" m_dynPaintMenus.kApplyTexture;
displayString -replace -value "Auto Save" m_dynPaintMenus.kAutoSave;
displayString -replace -value "Save canvas after every stroke, updating any textures currently in use" m_dynPaintMenus.kAutoSaveAnnot;
displayString -replace -value "Background color:" m_dynPaintMenus.kBackgroundColor;
displayString -replace -value "Blue Channel" m_dynPaintMenus.kBlueChannel;
displayString -replace -value "Display the blue channel only" m_dynPaintMenus.kBlueChannelAnnot;
displayString -replace -value "Blur" m_dynPaintMenus.kBlur;
displayString -replace -value "Use brush to blur" m_dynPaintMenus.kBlurAnnot;
displayString -replace -value "Brush" m_dynPaintMenus.kBrush;
displayString -replace -value "Camera" m_dynPaintMenus.kCamera;
displayString -replace -value "Change the view to look through camera \'^1s\'" m_dynPaintMenus.kCameraViewAnnot;
displayString -replace -value "Cancel" m_dynPaintMenus.kCancel;
displayString -replace -value "Canvas" m_dynPaintMenus.kCanvas;
displayString -replace -value "Canvas Undo" m_dynPaintMenus.kCanvasUndo;
displayString -replace -value "Undo/Redo the last stroke" m_dynPaintMenus.kCanvasUndoAnnot;
displayString -replace -value "Clear color:" m_dynPaintMenus.kCleaColor;
displayString -replace -value "Clear" m_dynPaintMenus.kClear;
displayString -replace -value "Clear the canvas to the background color set in the options" m_dynPaintMenus.kClearAnnot;
displayString -replace -value "Clear" m_dynPaintMenus.kClearButton;
displayString -replace -value "Clear Color" m_dynPaintMenus.kClearColorTitle;
displayString -replace -value "^1s already exists, \nReplace existing file?" m_dynPaintMenus.kConfirmMsg;
displayString -replace -value "No" m_dynPaintMenus.kConfirmNo;
displayString -replace -value "Yes" m_dynPaintMenus.kConfirmYes;
displayString -replace -value "Display" m_dynPaintMenus.kDisplay;
displayString -replace -value "Display Fog" m_dynPaintMenus.kDisplayFog;
displayString -replace -value "Display fog if it exists in the scene" m_dynPaintMenus.kDisplayFogAnnot;
displayString -replace -value "Edit Template Brush ..." m_dynPaintMenus.kEditTemplateBrush;
displayString -replace -value "Edit the brush you are currently painting with" m_dynPaintMenus.kEditTemplateBrushAnnot;
displayString -replace -value "Erase" m_dynPaintMenus.kErase;
displayString -replace -value "Use brush to erase" m_dynPaintMenus.kEraseAnnot;
displayString -replace -value "Full" m_dynPaintMenus.kFull;
displayString -replace -value "Display the Paint Effects view at full resolution (for the clearest image)" m_dynPaintMenus.kFullAnnot;
displayString -replace -value "Get Brush..." m_dynPaintMenus.kGetBrush;
displayString -replace -value "Get a brush, from visor, to paint with.." m_dynPaintMenus.kGetBrushAnnot;
displayString -replace -value "Green Channel" m_dynPaintMenus.kGreenChannel;
displayString -replace -value "Display the green channel only" m_dynPaintMenus.kGreenChannelAnnot;
displayString -replace -value "25% Horizontal" m_dynPaintMenus.kHorizontal25;
displayString -replace -value "50% Horizontal" m_dynPaintMenus.kHorizontal50;
displayString -replace -value "-25% Horizontal" m_dynPaintMenus.kHorizontalNeg25;
displayString -replace -value "Horizontally" m_dynPaintMenus.kHorizontally;
displayString -replace -value "Wrap the canvas horizontally" m_dynPaintMenus.kHorizontallyAnnot;
displayString -replace -value "Image name:" m_dynPaintMenus.kImageName;
displayString -replace -value "Luminance" m_dynPaintMenus.kLuminance;
displayString -replace -value "Display the luminance of the image" m_dynPaintMenus.kLuminanceAnnot;
displayString -replace -value "New Image..." m_dynPaintMenus.kNewImage;
displayString -replace -value "Create a new image file to use as a canvas" m_dynPaintMenus.kNewImageAnnot;
displayString -replace -value "New Texture" m_dynPaintMenus.kNewTexture;
displayString -replace -value "No" m_dynPaintMenus.kNo;
displayString -replace -value "Object Shading" m_dynPaintMenus.kObjectShading;
displayString -replace -value "Off" m_dynPaintMenus.kOff;
displayString -replace -value "Do not draw brush strokes on refresh" m_dynPaintMenus.kOffAnnot;
displayString -replace -value "Open" m_dynPaintMenus.kOpen;
displayString -replace -value "Open Image..." m_dynPaintMenus.kOpenImage;
displayString -replace -value "Open an existing image file to use as a canvas" m_dynPaintMenus.kOpenImageAnnot;
displayString -replace -value "Open Image" m_dynPaintMenus.kOpenImageBrowser;
displayString -replace -value "Paint" m_dynPaintMenus.kPaint;
displayString -replace -value "Use brush to paint" m_dynPaintMenus.kPaintAnnot;
displayString -replace -value "Paint Canvas" m_dynPaintMenus.kPaintCanvas;
displayString -replace -value "Use this setting to paint a 2d image such as a backdrop or a texture map" m_dynPaintMenus.kPaintCanvasAnnot;
displayString -replace -value "Paint Effects New Image" m_dynPaintMenus.kPaintEffectsNewTexture;
displayString -replace -value "Paint" m_dynPaintMenus.kPaintMenu;
displayString -replace -value "Paint Scene" m_dynPaintMenus.kPaintScene;
displayString -replace -value "Use this setting to paint objects in your 3d scene" m_dynPaintMenus.kPaintSceneAnnot;
displayString -replace -value "Red Channel" m_dynPaintMenus.kRedChannel;
displayString -replace -value "Display the red channel only" m_dynPaintMenus.kRedChannelAnnot;
displayString -replace -value "Rendered" m_dynPaintMenus.kRendered;
displayString -replace -value "Refresh strokes in final render mode" m_dynPaintMenus.kRenderedAnnot;
displayString -replace -value "Replace File" m_dynPaintMenus.kReplaceFile;
displayString -replace -value "Reset Template Brush" m_dynPaintMenus.kResetTemplateBrush;
displayString -replace -value "Resets to the default brush" m_dynPaintMenus.kResetTemplateBrushAnnot;
displayString -replace -value "Resolution" m_dynPaintMenus.kResolution;
displayString -replace -value "15%" m_dynPaintMenus.kResolution15;
displayString -replace -value "Display the Paint Effects view at 15% resolution (much faster, but unclear)" m_dynPaintMenus.kResolution15Annot;
displayString -replace -value "25%" m_dynPaintMenus.kResolution25;
displayString -replace -value "Display the Paint Effects view at 25% resolution (noticeably faster)" m_dynPaintMenus.kResolution25Annot;
displayString -replace -value "50%" m_dynPaintMenus.kResolution50;
displayString -replace -value "Display the Paint Effects view at 50% resolution (noticeably faster)" m_dynPaintMenus.kResolution50Annot;
displayString -replace -value "75%" m_dynPaintMenus.kResolution75;
displayString -replace -value "Display the Paint Effects view at 75% resolution (a little faster)" m_dynPaintMenus.kResolution75Annot;
displayString -replace -value "Roll" m_dynPaintMenus.kRoll;
displayString -replace -value "Save" m_dynPaintMenus.kSave;
displayString -replace -value "Save alpha" m_dynPaintMenus.kSaveAlpha;
displayString -replace -value "Save Alpha" m_dynPaintMenus.kSaveAlphaLayout;
displayString -replace -value "Save the current canvas as an image file" m_dynPaintMenus.kSaveAnnot;
displayString -replace -value "Save As..." m_dynPaintMenus.kSaveAs;
displayString -replace -value "Save the current canvas under a new name" m_dynPaintMenus.kSaveAsAnnot;
displayString -replace -value "Save bump map" m_dynPaintMenus.kSaveBumpmap;
displayString -replace -value "Save Depth as Grayscale..." m_dynPaintMenus.kSaveDepth;
displayString -replace -value "Save the current depth and alpha information as an image file" m_dynPaintMenus.kSaveDepthAnnot;
displayString -replace -value "Save File" m_dynPaintMenus.kSaveFile;
displayString -replace -value "Save Image" m_dynPaintMenus.kSaveImage;
displayString -replace -value "Save Image" m_dynPaintMenus.kSaveImageButton;
displayString -replace -value "Save Image Options" m_dynPaintMenus.kSaveImageOptions;
displayString -replace -value "There is still a Paint Effects image that has not been saved; do you want to save it?" m_dynPaintMenus.kSaveMsg;
displayString -replace -value "Save Snapshot..." m_dynPaintMenus.kSaveSnapshot;
displayString -replace -value "Save what is currently displayed as a 2d image file" m_dynPaintMenus.kSaveSnapshotAnnot;
displayString -replace -value "Selected Only" m_dynPaintMenus.kSelectedOnly;
displayString -replace -value "Only redraw selected strokes" m_dynPaintMenus.kSelectedOnlyAnnot;
displayString -replace -value "Set" m_dynPaintMenus.kSet;
displayString -replace -value "Set Canvas Size" m_dynPaintMenus.kSetCanvasSize;
displayString -replace -value "Set Size..." m_dynPaintMenus.kSetSize;
displayString -replace -value "Set the size of the current canvas in pixels" m_dynPaintMenus.kSetSizeAnnot;
displayString -replace -value "X size:" m_dynPaintMenus.kSetSizeX;
displayString -replace -value "Y size:" m_dynPaintMenus.kSetSizeY;
displayString -replace -value "Wireframe" m_dynPaintMenus.kShadeWireframe;
displayString -replace -value "Display surfaces as wireframes only" m_dynPaintMenus.kShadeWireframeAnnot;
displayString -replace -value "Shaded" m_dynPaintMenus.kShaded;
displayString -replace -value "Display surfaces smooth shaded (no wireframes)" m_dynPaintMenus.kShadedAnnot;
displayString -replace -value "Shading" m_dynPaintMenus.kShading;
displayString -replace -value "Single Pixel Brush" m_dynPaintMenus.kSinglePixelBrush;
displayString -replace -value "Turn this on to paint individual pixels with no antialiasing" m_dynPaintMenus.kSinglePixelBrushAnnot;
displayString -replace -value "Smear" m_dynPaintMenus.kSmear;
displayString -replace -value "Use brush to smear" m_dynPaintMenus.kSmearAnnot;
displayString -replace -value "Stroke Refresh" m_dynPaintMenus.kStrokeRefresh;
displayString -replace -value "Textured" m_dynPaintMenus.kTextured;
displayString -replace -value "Display surfaces with full textures" m_dynPaintMenus.kTexturedAnnot;
displayString -replace -value "Change pressure sensitivity and mappings" m_dynPaintMenus.kToolSettingsAnnot;
displayString -replace -value "^1s..." m_dynPaintMenus.kToolSettingsMenuItem;
displayString -replace -value "Toolbar" m_dynPaintMenus.kToolbar;
displayString -replace -value "Turn this on to display the Paint Effects toolbar" m_dynPaintMenus.kToolbarAnnot;
displayString -replace -value "untitled.iff" m_dynPaintMenus.kUntitled;
displayString -replace -value "Use All Lights" m_dynPaintMenus.kUseAllLights;
displayString -replace -value "Show surfaces illuminated with all the lights in the scene (only visible when displayed shaded)" m_dynPaintMenus.kUseAllLightsAnnot;
displayString -replace -value "Use Default Lighting" m_dynPaintMenus.kUseDefaultLighting;
displayString -replace -value "Show surfaces illuminated with system-default lights (only visible in when displaying shaded)" m_dynPaintMenus.kUseDefaultLightingAnnot;
displayString -replace -value "Use Stylus Pressure" m_dynPaintMenus.kUseStylusPressure;
displayString -replace -value "When this is on, you can use a pressure-sensitive stylus to control certain stroke attributes" m_dynPaintMenus.kUseStylusPressureAnnot;
displayString -replace -value "25% Vertical" m_dynPaintMenus.kVertical25;
displayString -replace -value "50% Vertical" m_dynPaintMenus.kVertical50;
displayString -replace -value "-25% Vertical" m_dynPaintMenus.kVerticalNeg25;
displayString -replace -value "Vertically" m_dynPaintMenus.kVertically;
displayString -replace -value "Wrap the canvas vertically" m_dynPaintMenus.kVerticallyAnnot;
displayString -replace -value "Wireframe" m_dynPaintMenus.kWireframe;
displayString -replace -value "Refresh strokes in wireframe mode" m_dynPaintMenus.kWireframeAnnot;
displayString -replace -value "Wrap" m_dynPaintMenus.kWrap;
displayString -replace -value "X size:" m_dynPaintMenus.kXSize;
displayString -replace -value "Y size:" m_dynPaintMenus.kYSize;
displayString -replace -value "Yes" m_dynPaintMenus.kYes;
