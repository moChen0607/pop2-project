// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//  Description:
//      This implements the Swap the Urchin view and then rerender
//      named command.
//

proc int isAdynPaintPanel()
{
    string $currentPanel = `getPanel -withFocus`;
    return (`scriptedPanel -ex $currentPanel` &&
    `scriptedPanel -q -type $currentPanel` == "dynPaintScriptedPanelType");
}


global proc dynPaintSwapPanelPress()
{
	global string $gDynPaintEditorName;
	if (`isAdynPaintPanel`) {
        if (!`dynPaintEditor -q -canvasMode $gDynPaintEditorName`) {
            dynPaintEditor -e -swp 1 $gDynPaintEditorName;
        }
    }
}

global proc dynPaintSwapPanelRelease()
{
	global string $gDynPaintEditorName;
    if (`isAdynPaintPanel`) {
        if (!`dynPaintEditor -q -canvasMode $gDynPaintEditorName`) {
            dynPaintEditor -e -swp 0 $gDynPaintEditorName;
            dynPaintEditor -e -pa 0 $gDynPaintEditorName;
        }
    }
}

