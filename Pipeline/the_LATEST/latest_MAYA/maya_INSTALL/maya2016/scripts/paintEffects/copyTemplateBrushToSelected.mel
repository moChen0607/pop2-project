// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Description:
//		This script is executed when a new scene file is created.  It will create
//		panels if required or use existing panels.
//
//  Creation Date: Dec 1998
//
global proc string copyTemplateBrushToSelected()
{
	// Get the default/template/current brush.
	string $brush = `getDefaultBrush`;

	// Get the selection list. Currently, we get all brushes on the selection list
	// except if a suface is selected, we do not get the brushes of it's COS. To get
	// the brushes of the COS, change the 2 in the following line to 3.
	string $nodes[] = `getBrushes 2`;
	string $node;

	int $i =0;
	int $j = size( $nodes );
	for ($node in $nodes) {
		// Check to see if this selected item is indeed a brush. It really should be.
		if (`nodeType $node` == "brush") {
			if( objExists($node +".notes") ) {
				if( catch(`deleteAttr -at "notes" $node`) ) {
					string $fmt = uiRes("m_brushPresetSetup.kCouldNotDeleteDynAttrNotes");
					error( `format -s $node $fmt` );
				}
			}
			copyNode $brush $node;
			brushStartSetup( $node, 1 );
		}
	}
	return $brush;
}
