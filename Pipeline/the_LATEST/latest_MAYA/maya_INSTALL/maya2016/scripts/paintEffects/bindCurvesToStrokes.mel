// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
// attach picked control nurbs curves to picked strokes 
//

global proc bindCurvesToStrokes()
{
	int $i, $j, $k;

	string $strokes[] = `ls -dag -sl -typ pfxGeometry`;
	string $curves[] = `ls -dag -sl -typ nurbsCurve`;

	for( $i = 0; $i < size( $strokes ); $i++ )
	{
		string $existingConnections[] = `listConnections ($strokes[$i] + ".controlCurve")`;
		for( $j = 0; $j < size( $existingConnections ); $j++ )
		{
			string $con[] = `listConnections ($strokes[$i] + ".controlCurve[" + $j + "]")`;
			for( $k = 0; $k < size( $con ); $k++ )
			{
				disconnectAttr ($con[$k] + ".worldSpace") ($strokes[$i] + ".controlCurve[" + $j + "]" );
			}
		}
		for( $j = 0; $j < size( $curves ); $j++ )
		{
			string $node[] = `duplicateCurve -o false $curves[$j]`;
			if( size($node) > 0 ) 
			{
				if( "nurbsCurve" == `nodeType $node[0]`) 
				{
					connectAttr -f ($curves[$j] + ".worldSpace") ($strokes[$i] + ".controlCurve[" + $j + "]" );
				}
				else
				{
					// TODO: check for existing curveFromSurface, rather than always creating new ones
					connectAttr -f ($node[0] + ".oc") ($strokes[$i] + ".controlCurve[" + $j + "]" );
				}
			}
		}
	}
}

