// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date: 1998
//
//  Procedure Name:
//	AEstrokeGlobalsTemplate
//
//  Description Name;
//	Creates the attribute editor controls for the strokeGlobals Node
//
//  Input Value:
//	nodeName 
//
//  Output Value:
//	None
// 

global proc checkUseCanvasLight ( string $nodeName ) 
{
	string $nodeAttr = $nodeName + ".useCanvasLight";
	int $value = `getAttr $nodeAttr`;
	
	editorTemplate -dimControl $nodeName "lightDirection" (!$value);
}

//
//  Procedure Name:
//	AEbrushTemplate
//
global proc AEstrokeGlobalsTemplate ( string $nodeName )
{
	editorTemplate -beginScrollLayout;
		editorTemplate -beginLayout (uiRes("m_AEstrokeGlobalsTemplate.kCanvas")) -collapse 1;
			editorTemplate -addControl "canvasScale";
			editorTemplate -addControl "wrapH";
			editorTemplate -addControl "wrapV";
			editorTemplate -addControl "useCanvasLight" "checkUseCanvasLight";
			editorTemplate -addControl "lightDirection";
			editorTemplate -addControl  -label (uiRes("m_AEstrokeGlobalsTemplate.kForceTubeDirection")) "forceTubeDirAlongPath";
		editorTemplate -endLayout;

		if ( `licenseCheck -m "edit" -typ "particlePaint"`) {
			editorTemplate -beginLayout (uiRes("m_AEstrokeGlobalsTemplate.kScene")) -collapse 1;
				editorTemplate -addControl "sceneScale";
				editorTemplate -addControl "sceneWrapH";
				editorTemplate -addControl "sceneWrapV";
				editorTemplate -addControl "forceRealLights";
				editorTemplate -addControl "forceDepth";
			editorTemplate -endLayout;
		}
	
		// include/call base class/node attributes
		AEdependNodeTemplate $nodeName;

	editorTemplate -addExtraControls;
	editorTemplate -endScrollLayout;
}
