// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date: 99 
//
//
//  Description:
//      This creates a window with a slider set the blend factor on 
//      brush preset selection
//


global proc setPresetBrushShadeBlend( float $val)
{
	global float $gPresetBrushShadeBlend;
	$gPresetBrushShadeBlend = $val * .01;
}

global proc setPresetBrushShapeBlend( float $val)
{
	global float $gPresetBrushShapeBlend;
	$gPresetBrushShapeBlend = $val * .01;
//	floatSliderGrp -e -v $val presetBlendShapewidget;
}

global proc brushPresetBlendWin()
{
	global int $gPresetBlending;
	global float $gPresetBrushShadeBlend;
	global float $gPresetBrushShapeBlend;
	global string $presetBlendMenu;

	// Make sure the Generate menu is created
	global string $gMainGenerateMenu;
	if(`menu -q -ni $gMainGenerateMenu` == 0) {
		buildCreatorMenu($gMainGenerateMenu);
	}
	
	$gPresetBlending = 1;
	menuItem -e -cb 1 presetBlendMenu;

    if ( !`window -ex brushPresetBlendWnd` ) 
	{
		window 
		-rtf 1
		-title (uiRes("m_brushPresetBlendWin.kBrushPresetBlend"))
		-in  (uiRes("m_brushPresetBlendWin.kBrushPresetIconName"))
		-menuBar 0
		-s 1
		brushPresetBlendWnd;
		
			setParent brushPresetBlendWnd;
			
			formLayout brushPresetBlendform;

        	rowLayout 
        	-nc 1 
        	-cw 1 120 
        	brushPresetBlendrow1;
				
			setParent brushPresetBlendform;
			
			columnLayout brushPresetBlendcol;

        		floatSliderGrp
                    -label (uiRes("m_brushPresetBlendWin.kShading"))
				-field 1
				-min 0.0
				-max 100.0
				-pre 1
				-v ($gPresetBrushShadeBlend * 100)
				-dc "setPresetBrushShadeBlend #1"
				-cc "setPresetBrushShadeBlend #1"
				presetBlendShadewidget;

        		floatSliderGrp
                    -label (uiRes("m_brushPresetBlendWin.kShape"))
				-field 1
				-min 0.0
				-max 100.0
				-pre 1
				-v ($gPresetBrushShapeBlend * 100)
				-dc "setPresetBrushShapeBlend #1"
				-cc "setPresetBrushShapeBlend #1"
				presetBlendShapewidget;
        		
        		formLayout -e 
				-af brushPresetBlendcol top 3 
				-af brushPresetBlendcol left 3
				-af brushPresetBlendcol right 3
				-af brushPresetBlendcol bottom 3
				brushPresetBlendform;
     }
	showWindow brushPresetBlendWnd;
}
     
