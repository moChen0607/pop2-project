// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  2005
//
// Description: get selected toon nodes, or if there are none,
// toon related to the selected surface nodes
//	
global proc string[] getSelectedToons()
{
	
	string $toons[] = `ls -sl -dag -type "pfxToon"`;
	if( size( $toons ) == 0 ) {
		string $relatedToons[];
		string $objs[] = `ls -sl -dag -type "mesh"`;
		if( size( $objs ) > 0 ){
			$paintObj = $objs[0];
			string $cons[] = `listConnections -d 1 -type pfxToon ($paintObj + ".outMesh")`;
			for( $con in $cons  ){
				$relatedToons[size($relatedToons)] = $con;	
			}
		}	
		$objs = `ls -sl -dag -type "nurbsSurface"`;
		if( size( $objs ) > 0 ){
			$paintObj = $objs[0];
			string $cons[] = `listConnections -d 1 -type nurbsTessellate ($paintObj + ".local")`;
			if( size( $cons ) > 0 ){
				string $tess = $cons[0];	
				$cons = `listConnections -d 1 -type pfxToon ($tess + ".outputPolygon")`;
				for( $con in $cons  ){
					$relatedToons[size($relatedToons)] = $con;	
				}
			}
		}
		$objs = `ls -sl -dag -type "subdiv"`;
		if( size( $objs ) > 0 ){
			$paintObj = $objs[0];
			string $cons[] = `listConnections -d 1 -type subdivToPoly ($paintObj + ".outSubdiv")`;
			if( size( $cons ) > 0 ){
				string $tess = $cons[0];	
				$cons = `listConnections -d 1 -type pfxToon ($tess + ".outMesh")`;
				for( $con in $cons  ){
					$relatedToons[size($relatedToons)] = $con;	
				}
			}
		}
		// selected objects could have been sharing a toon outline
		$toons = stringArrayRemoveDuplicates($relatedToons);
	}
	return $toons;
}
