// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date: Jan 30, 1996
//
//  Description:
//      These procs create the controls for a script tool property sheet.
//      See also scriptToolValues.mel for procs that set the state of the
//      property sheet.
//
//  Input Arguments:
//      None.
//
//  Return Value:
//      None.
//

proc scriptToolSetCallbacks( string $parent )
//
//  Description:
//      Set the callbacks for all of the controls in the dialog.
//      Modifying the context will force scriptToolValues() to be called
//
//
{
    setParent $parent;

	checkBoxGrp -e
		-on1 "scriptCtx -e -cumulativeLists true `currentCtx`"
		-of1 "scriptCtx -e -cumulativeLists false `currentCtx`"
		cumulativeListsWidget;

	checkBoxGrp -e
		-on1 "scriptCtx -e -expandSelectionList true `currentCtx`"
		-of1 "scriptCtx -e -expandSelectionList false `currentCtx`"
		expandSelectionListWidget;

	checkBoxGrp -e
		-on1 "scriptCtx -e -showManipulators true `currentCtx`"
		-of1 "scriptCtx -e -showManipulators false `currentCtx`"
		showManipulatorsWidget;

	checkBoxGrp -e
		-on1 "scriptCtx -e -exitUponCompletion true `currentCtx`"
		-of1 "scriptCtx -e -exitUponCompletion false `currentCtx`"
		exitUponCompletionWidget;

	checkBoxGrp -e
		-on1 "scriptCtx -e -enableRootSelection true `currentCtx`"
		-of1 "scriptCtx -e -enableRootSelection false `currentCtx`"
		showRootSelectWidget;

    textFieldGrp -e
        -cc "scriptCtx -e -title \"#1\" `currentCtx`"
        titleWidget;

    textFieldGrp -e
        -cc "scriptCtx -e -finalCommandScript \"#1\" `currentCtx`"
        finalCommandScriptWidget;
}

global proc scriptToolProperties()
//
//  Description:
//      This procedure builds the property sheet and assigns callbacks to
//      its controls.  The state of the controls are set in scriptToolValues().
//
//
{
	string $parent = `toolPropertyWindow -q -location`;
	setParent $parent;

	setUITemplate -pushTemplate OptionsTemplate;
	columnLayout scriptTool;
		frameLayout -collapsable true -collapse true -label (uiRes("m_scriptToolProperties.kScriptToolSettings")) scriptToolFrame;
			columnLayout;
				$parent = `setParent -query`;
				//separator -style "none";

				textFieldGrp -label (uiRes("m_scriptToolProperties.kTitle"))  titleWidget;
	 			textFieldGrp -label (uiRes("m_scriptToolProperties.kFinalCommandScript"))  finalCommandScriptWidget;
	
				checkBoxGrp -ncb 1
					-label1 (uiRes("m_scriptToolProperties.kKeepActive")) 
					-v1 on
					cumulativeListsWidget;
				checkBoxGrp -ncb 1
					-label1 (uiRes("m_scriptToolProperties.kExpandSelection")) 
					-v1 on
					expandSelectionListWidget;
				checkBoxGrp -ncb 1
					-label1 (uiRes("m_scriptToolProperties.kHierarchySelection")) 
					-v1 on
					showRootSelectWidget;
				checkBoxGrp -ncb 1
					-label1 (uiRes("m_scriptToolProperties.kShowManipulators")) 
					-v1 on
					showManipulatorsWidget;
				checkBoxGrp -ncb 1 -label1 (uiRes("m_scriptToolProperties.kExitUponCompletion"))  -v1 on
					exitUponCompletionWidget;
	
				setParent ..;
			setParent ..;
    	setParent ..;
	setUITemplate -popTemplate;
	scriptToolSetCallbacks( $parent );
}
