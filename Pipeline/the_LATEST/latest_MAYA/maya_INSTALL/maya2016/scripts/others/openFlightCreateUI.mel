// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

// 
// 


global proc createOpenFlightMenu()
{
	global string $gMainWindow;

	// Set the name of the OpenFlight menu
	global string $gMainOpenFlightMenu = "OpenFlightMenu";

	// If the OpenFlight menu already exists, do nothing
	if ( `menu -exists $gMainOpenFlightMenu` ) {
		return;
	}

	// Create the menu
	//
	menu -label (uiRes("m_openFlightCreateUI.kOpenFlight"))
		 -parent $gMainWindow 
		 -tearOff true
		 -allowOptionBoxes true
		 $gMainOpenFlightMenu;

	// Add the creation menu items to the OpenFlight menu
	//
	menuItem -label (uiRes("m_openFlightCreateUI.kCreateLightPoints"))
			 -annotation (uiRes("m_openFlightCreateUI.kCreateLightPointsAnnot"))
			 -command "performLightPoints 0"
			 createLightPoints;

	menuItem -optionBox true
			 -annotation (uiRes("m_openFlightCreateUI.kLightPointsOptionsAnnot"))
			 -command "performLightPoints 1"
			 lightPointsOptions;

	menuItem -label (uiRes("m_openFlightCreateUI.kCreateLightsOnCurve"))
			 -annotation (uiRes("m_openFlightCreateUI.kCreateLightsOnCurveAnnot"))
			 -command "performLightsOnCurve 0"
			 createLightsOnCurve;

	menuItem -optionBox true
			 -annotation (uiRes("m_openFlightCreateUI.kLightsOnCurveOptionsAnnot"))
			 -command "performLightsOnCurve 1"
			 lightsOnCurveOptions;

	menuItem -divider true;

	// Add the edit menu items to the OpenFlight menu
	//
	menuItem -label (uiRes("m_openFlightCreateUI.kEditLightPointColors"))
			 -command "fltLightPointColorEditor"
			 editLightPointColors;
			 
	menuItem -label (uiRes("m_openFlightCreateUI.kEditLightPointNormals"))
			 -command "fltLightPointNormalEditor"
			 editLightPointNormals;

}


global proc openFlightCreateUI()
{
	// Create the main OpenFlight menu
	createOpenFlightMenu;
}
