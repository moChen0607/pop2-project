// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  December 2004
//
//  Description:
//      Option tool property window for BlendShape Paint Weight tool.
//
//  Procedure Name:
//      artAttrBlendShapeProperties 
//
//  Description:
//      Initialize the UI for BlendShape Paint Weight tool.
//
//  Input Arguments:
//
//  Return Value:
//      None.
//

proc artBlendShapeCreateOperFrame(
	string 	$parent,
	string  $currTool
)
//
// Custom UI for Paint BlendShape Weights tool.
//
{
	// 
	// Target object
	//
	columnLayout;
		rowColumnLayout -nc 3 -cw 1 10 -cw 2 80 -cw 3 250;
		     separator -h 10 -style "none";
			 columnLayout;
		         setParent ..;
			 textScrollList -w 240 -nr 7 -ams false
				 blendShapeTargetList;
		setParent ..;
		rowColumnLayout -nc 2 -cw 1 90 -cw 2 250;
		    separator -h 10 -style "none";
			button -label (uiRes("m_artAttrBlendShapeProperties.kKeySelectedTargetWeights"))   -w 100 -c "artKeyFrameTargetWtsAttr" artKeyFrameTargetWtsButton;	
			setParent ..;
	setParent ..;
}


// =======================================================
// Main Procedure.
// =======================================================
global proc artAttrBlendShapeProperties()
{
	// Base Artisan (applicable to all Artisan tools) properties.
	source "artisanProperties.mel";
	source "artisanCallback.mel";

	source "artAttrProperties.mel";
	source "artAttrBlendShapeCallback.mel";	
	source "artisanRampCallback.mel";

	string	$currContext = `currentCtx`;
	string	$currTool	 = `contextInfo -c $currContext`;

	setUITemplate -pushTemplate DefaultTemplate;

	string $parent = `toolPropertyWindow -q -location`;
	setParent $parent;

	columnLayout -adj true artAttrBlendShape;

	// Brush frameLayout.
	frameLayout -label (uiRes("m_artAttrBlendShapeProperties.kBrush")) 
		-collapsable true -collapse false
		artAttrBlendShapeBrushFrame;

		// Create brush option menu.
		artisanCreateBrushFrame( "artAttrBlendShapeBrushFrame", $currTool );
	setParent ..;

	// Skin Paint operation frameLayout.
   	frameLayout -label (uiRes("m_artAttrBlendShapeProperties.kTarget")) 
       	-collapsable true -collapse false 
       	artBlendShapeOperationFrame;

       	// Create Paint Attribute operation menu.
       	artBlendShapeCreateOperFrame( "artBlendShapeOperationFrame", $currTool );
   	setParent ..;

   	string $artCommonOpFrame = `frameLayout -label (uiRes("m_artAttrBlendShapeProperties.kPaintWeights")) 
       							-collapsable true -collapse false
       							artCommonOperationFrame`;

		setUITemplate -pushTemplate OptionsTemplate;
		setParent $artCommonOpFrame;
		columnLayout;

		// Put all the common stuff.
		artAttrCreateCommonProperties();
		
		artisanCreateRamp($artCommonOpFrame, 0 );

		setUITemplate -popTemplate;		 
	setParent ..;

    // Stroke options.
	frameLayout -label (uiRes("m_artAttrBlendShapeProperties.kStroke")) 
		-collapsable true -collapse true
		artAttrBlendShapeStrokeFrame;

		// Create stroke options.
		artisanCreateStrokeFrame( "artAttrBlendShapeStrokeFrame", $currTool );
	setParent ..;

    // Stylus Pressure options.
	frameLayout -label (uiRes("m_artAttrBlendShapeProperties.kStylusPressure")) 
		-collapsable true -collapse true
		artAttrBlendShapePressureFrame;

		// Create stroke options.
		artisanCreatePressureFrame( "artAttrBlendShapePressureFrame", $currTool );
	setParent ..;

	// Attribute Maps options.
	frameLayout -label (uiRes("m_artAttrBlendShapeProperties.kAttributeMaps")) 
		-collapsable true -collapse true
		artAttrBlendShapeAttrMapFrame;

		// Create Attribute Map option menu.
		artisanCreateAttrMapFrame( "artAttrBlendShapeAttrMapFrame", $currTool );
	setParent ..;

	// Display options.
	frameLayout -label (uiRes("m_artAttrBlendShapeProperties.kDisplay")) 
		-collapsable true -collapse true
		artAttrBlendShapeDisplayFrame;

		// Create Display options.
		artisanCreateDisplayFrame( "artAttrBlendShapeDisplayFrame", $currTool );
	setParent ..;

	setParent ..;
	setUITemplate -popTemplate;

	artAttrBlendShapeTargetMenu( "blendShapeTargetList", "artAttrCtx" );

	// Set the callbacks and various global functions.
	artAttrBlendShapeCallback( "artAttrCtx" );

	// Ramp controls
	artisanRampCallback( "artAttrCtx" );
}
