// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//	Procedure Name:
//		doAssignTemplateToContainer
//
//	Description:
//		Assign a template to a container
//
//	Input Arguments:
//	$version: The version of this option box.  Used to know how to 
//	interpret the $args array.
//  
//	$args:
//	Version 1:
//  $args[0] = $autobind
//
//

global proc
assignTemplateToAssetInfoCB(string $container,
							int $autobind,
							string $fileName,
							string $templateName)
{
	containerAssignTemplate($container,$templateName,$autobind,0);
}


global proc
doAssignTemplateToContainer( int $version, string $args[] )
//
//
{
	global string $gPinnedContainerForTemplateAssign;

	int $autobind = $args[0];

	// If the user invokes the assign template operation from the 
	// "Asset Editor", this global variable will be set. Otherwise,
	// use the selected container.
	//
	string $container = $gPinnedContainerForTemplateAssign;
	$gPinnedContainerForTemplateAssign = "";

	if ($container == "") {
		string $sel[] = `ls -sl -containers`;
		if (size($sel) > 0) {
			$container = $sel[0];
		} else {
			$sel = `ls -sl`;
			$container = `container -q -findContainer $sel`;
			if (size($container) == 0) {
				error((uiRes("m_doAssignTemplateToContainer.kMustSelectContainer")));
			}
		}
	}
	
	string $callback = ("assignTemplateToAssetInfoCB "+$container+" " + $autobind + " ");
	containerTemplateBrowser( $callback, "", 0 );
}
