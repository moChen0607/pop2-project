// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//<doc>
//<name intArrayFind>
//
//<synopsis>
//		int intArrayFind(int $item, int $index, int[] $list)
//
//<description>
//		Return the index of the item if it is in the array and -1 otherwise.
//
//		The array may contain more than one occurrence of the item.
//		This procedure will return the index of the first occurence of 
//		item starting at index.
//
//<flags>
//		int $item	The int item to search for in the int array.
//		int $index	The array index to begin the search at
//		int[] $list	A list of int values.
//
//<returns>
//		int : The index of the item if it is in the array and -1 otherwise.
//
//<examples>
//	int $array1[] = { 1, 2, 3 };
//	// ,Result:, 1 2 3 // 
//	int $index = intArrayFind( 1, 0, $array1 );
//	// ,Result:, 0 // 
//	int $index = intArrayFind( 2, 0, $array1 );
//	// ,Result:, 1 // 
//	int $index = intArrayFind( 3, 4, $array1 );
//	// ,Result:, -1 // 
//	int $index = intArrayFind( 0, 0, $array1 );
//	// ,Result:, -1 // 
//</doc>
//

global proc int intArrayFind( int $item, int $index, int $list[] )
{
	if ( $index >= 0 )
	{
		int $i;
		for ( $i=$index; $i<size($list); $i++ )
			if ( $list[$i] == $item )
				return $i;
	}
	return -1;
}