// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//<doc>
//<name containerRmbMenu>
//
//<synopsis>
//		containerRmbMenu()
//
//<description>
//      The containerRmbMenu script is an example of how to write a
//		rightMenuButton (RMB) callback for the container node. To create
//		your own customized RMB menu, write a similar script which returns a 
//		string array defining the desired menu names and their callbacks.
//
//		To try this script out, create a container node, and
//      enter a value of "containerRmbMenu" into the container node's
//      rmbCommand attribute (Rmb Command in the Attribute Editor).
//
//		Then press the RMB over an object in your container in the viewport
//      or the outliner. You will see the extra container-related items
//      in the menu. Clicking on a menu item will invoke the callback 
//		specified by the return. The callback will receive a string argument
// 		indicating the object that was RMBed on.
//
//
//<returns>
//      returns an array of strings of the form:
//        { "Menu Label Name 1", "callbackName1",
//          "Menu Label Name 2", "callbackName1", ... }
//
//<examples>
//		// request the RMB menu list for a container
//		string $items[] = `containerRmbMenu`;
//</doc>
//
global
proc containerSelectRootExample(string $object)
{
	string $container = `container -q -findContainer $object`;
	if (size($container) > 0) {
		string $root = `container -q -publishAsRoot $container`;
		if (size($root) > 0) {
			select -r $root;
		}
	}
}

global
proc containerSelectParentAnchorsExample(string $object)
{
	string $container = `container -q -findContainer $object`;
	if (size($container) > 0) {
		string $parents[] = `container -q -publishAsParent $container`;
		if (size($parents) > 0) {
			select -d;
			for ($ii = 1; $ii < size($parents); $ii+=2) {
				select -add $parents[$ii];
			}
		}
	}
}

global
proc containerSelectChildAnchorsExample(string $object)
{
	string $container = `container -q -findContainer $object`;
	if (size($container) > 0) {
		string $children[] = `container -q -publishAsChild $container`;
		if (size($children) > 0) {
			select -d;
			for ($ii = 1; $ii < size($children); $ii+=2) {
				select -add $children[$ii];
			}
		}
	}
}

global
proc string[] containerRmbMenu()
{
	return {"Select Selection Transform", "containerSelectRootExample",
			"Select Parent Anchors", "containerSelectParentAnchorsExample",
			"Select Child Anchors", "containerSelectParentAnchorsExample"};
}
