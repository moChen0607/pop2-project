// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//  Creation Date:  Sept 22, 1999
//<doc>
//<name basename>
//
//<synopsis>
//		basename(string $path, string $suffix)
//
//<description>
//		Strips from $path any prefix ending in '/'. If $path ends in a '/' 
//		it is first stripped. If $suffix is not empty, $suffix will also be 
//		stripped if it exists at the end of $path. On Windows, the input $path is 
//		first processed to convert all backslashes ('\', input as "\\") to '/'s.
//
//<flags>
//      string	 $path			Path string to strip
//		string	 $suffix		Suffix to strip off 
//
//<returns>
//      string: the stripped basename
//
//<examples>
//	string $path = "/usr/people/gamera/gamera.mel";
//	string $basename = basename( $path, ".mel" );
//	// Result: gamera //
//  basename( $path, "" );
//	// Result: gamera.mel //
//  string $ntPath = "C:/aw/godzilla/hello.c";
//	basename( $ntPath, ".c" );
//	// Result: hello //
//
//</doc>
//
global proc string basename( string $path, string $suffix )
{
	if ( `about -nt`  || `about -mac`)
		$path = convert( $path );

	// Check to make sure we're not chopping off slash if
	// it's the only path delimiter!
	if ( (match( "^/$", $path ) == "") && // Root dir 
		 (match( "^[A-Za-z]:/$", $path ) == "" ) ) // X:/ on Windows
	{
		// Strip off last '/', if it exists
		$path = substitute("/$", $path, "");
	}

	string $basename;
	// Is this a UNC path?
	if ( match( "^//", $path ) != "" )
	{
		// If so, we check if there is anything after the first 
		// component of the path. If not, we return nothing.
		if ( match( "^//.*/.*", $path ) != "" )
			$basename = match( "[^/]*$", $path );
		else
			return "";
	}
	else // We get everything after the last "/"
		$basename = match("[^/]*$", $path);

	// if $suffix is given, replace it (if it's at the end) with ""
	if ( size( $suffix ) != 0 )
	{
		$suffix = $suffix + "$";
		$basename = substitute( $suffix, $basename, "" );		
	}

	return $basename;
}
