// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//  Procedure Name:
//      buildOrthoLookthruMenu
//
//  Description:
//      This procedure creates a menu item for each ortho
//      camera. New cameras can also be created through this
//      menu. When a menu item is selected the associated camera will
//      be placed in the model view.
//
//  Input Arguments:
//      parent - menu name to build menu items for
//      panel - name of panel this menu is associated with
//
//  Return Value:
//      None.
//

global proc buildOrthoLookthruMenu( string $parent, string $panel )
{
    string $cameras[] = `listCameras -orthographic`;

    // Rebuild menu
    //

    setParent -m $parent;

    menu -e -deleteAllItems $parent;


    for ($camera in $cameras) {
        menuItem -l $camera -command ("lookThroughModelPanel "+$camera+" "+$panel);
    }

    menuItem -divider true;

    menuItem -label (uiRes("m_buildOrthoLookthruMenu.kNew")) -subMenu true;
        menuItem -label (uiRes("m_buildOrthoLookthruMenu.kFront"))
            -c ("{ string $camera[] = `camera -n front -hc \"viewSet -f %camera\"`; "+
                "  viewSet -f $camera[0]; "+
                "  lookThroughModelPanel $camera[0] "+$panel+"; "+
				"  if (`optionVar -q \"viewportRenderer\"`== 2) ActivateViewport20; else setRendererInModelPanel base_OpenGL_Renderer " + $panel + ";}" );
        menuItem -label (uiRes("m_buildOrthoLookthruMenu.kBack"))
			-version 2014
            -c ("{ string $camera[] = `camera -n back -hc \"viewSet -b %camera\"`; "+
                "  viewSet -b $camera[0]; "+
                "  lookThroughModelPanel $camera[0] "+$panel+"; " +
				"  if (`optionVar -q \"viewportRenderer\"`== 2) ActivateViewport20; else setRendererInModelPanel base_OpenGL_Renderer " + $panel + ";}" );
        menuItem -label (uiRes("m_buildOrthoLookthruMenu.kRight"))
			-version 2014
            -c ("{ string $camera[] = `camera -n right -hc \"viewSet -rs %camera\"`; "+
                "  viewSet -rs $camera[0]; "+
                "  lookThroughModelPanel $camera[0] "+$panel+"; " +
				"  if (`optionVar -q \"viewportRenderer\"`== 2) ActivateViewport20; else setRendererInModelPanel base_OpenGL_Renderer " + $panel + ";}" );
        menuItem -label (uiRes("m_buildOrthoLookthruMenu.kLeft"))
			-version 2014
            -c ("{ string $camera[] = `camera -n left -hc \"viewSet -ls %camera\"`; "+
                "  viewSet -ls $camera[0]; "+
                "  lookThroughModelPanel $camera[0] "+$panel+"; " +
				"  if (`optionVar -q \"viewportRenderer\"`== 2) ActivateViewport20; else setRendererInModelPanel base_OpenGL_Renderer " + $panel + ";}" );
        menuItem -label (uiRes("m_buildOrthoLookthruMenu.kTop"))
            -c ("{ string $camera[] = `camera -n top -hc \"viewSet -t %camera\"`; "+
                "  viewSet -t $camera[0]; "+
                "  lookThroughModelPanel $camera[0] "+$panel+"; " +
				"  if (`optionVar -q \"viewportRenderer\"`== 2) ActivateViewport20; else setRendererInModelPanel base_OpenGL_Renderer " + $panel + ";}" );
        menuItem -label (uiRes("m_buildOrthoLookthruMenu.kBottom"))
			-version 2014
            -c ("{ string $camera[] = `camera -n bottom -hc \"viewSet -bo %camera\"`; "+
                "  viewSet -bo $camera[0]; "+
                "  lookThroughModelPanel $camera[0] "+$panel+"; " +
				"  if (`optionVar -q \"viewportRenderer\"`== 2) ActivateViewport20; else setRendererInModelPanel base_OpenGL_Renderer " + $panel + ";}" );
    setParent -m ..;
}
