// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//
//
//
//
//  Creation Date:  December 11/2000
//
// Description:
//
//		This file contains the procedure which builds a popup menu for a file
//		the user has RMB clicked on in a hypergraph/visor which is displaying
//		Paint Effects brushes.
//												

global proc creatorBrushBlend(string $fileName, float $percent)
{
	setPresetBlend( $percent, $percent );
	brushPresetSetup(); // Must be called after changing the percentage.

	// Now blend this brush.
    eval ("source \"" + $fileName + "\"");

	// Restore previous values.
	restorePresetBlend();
}

global proc creatorShapeBlend(string $fileName, float $percent)
{
	setPresetBlend( $percent, 0.0 );
	brushPresetSetup();

	// Now blend this brush.
    eval ("source \"" + $fileName + "\"");

	// Restore previous values.
	restorePresetBlend();
}

global proc creatorShadingBlend(string $fileName, float $percent)
{
	// Save current values.
	setPresetBlend( 0.0, $percent );
	brushPresetSetup();
	
	// Now blend this brush.
    eval ("source \"" + $fileName + "\"");

	// Restore previous values.
	restorePresetBlend();
}

global proc copyBrushToSelected( 
	string 	$fileName 
)
{
	// set the defualt brush to the selected one
	// 
    eval ("source \"" + $fileName + "\"");

	// copy the the default brush to selected strokes
	//
	copyTemplateBrushToSelected();
}

global proc int buildHypergraphBrushPopupMenuItems(
	string $editor,
	string $menu,
	string $filePath)
{
	setParent -menu $menu;

	int $rItemsAdded = false;
	string $fileNameArray[];
	tokenize($filePath, "/", $fileNameArray);
	string $fileNameTail = $fileNameArray[size($fileNameArray) - 1];

	string $fileTypesArray[] = `file -query -type $filePath`;
	string $fileType = $fileTypesArray[0];

	if ($fileType == "mel")
	{
		menuItem 
			-label (uiRes("m_buildHypergraphBrushPopupMenuItems.kApplyBrush"))
			-command ("copyBrushToSelected(\"" + $filePath + "\")");
		menuItem -divider true;	
		menuItem 
			-label (uiRes("m_buildHypergraphBrushPopupMenuItems.kBlendBrush50"))
			-command ("creatorBrushBlend(\"" + $filePath + "\", 0.5)");
		menuItem 
			-label (uiRes("m_buildHypergraphBrushPopupMenuItems.kBlendBrush20"))
			-command ("creatorBrushBlend(\"" + $filePath + "\", 0.2)");
		menuItem 
			-label (uiRes("m_buildHypergraphBrushPopupMenuItems.kBlendBrush5"))
			-command ("creatorBrushBlend(\"" + $filePath + "\", 0.05)");
		menuItem -divider true;	
		menuItem 
			-label (uiRes("m_buildHypergraphBrushPopupMenuItems.kBlendShape100"))
			-command ("creatorShapeBlend(\"" + $filePath + "\", 1.0)");
		menuItem 
			-label (uiRes("m_buildHypergraphBrushPopupMenuItems.kBlendShape50"))
			-command ("creatorShapeBlend(\"" + $filePath + "\", 0.5)");
		menuItem 
			-label (uiRes("m_buildHypergraphBrushPopupMenuItems.kBlendShape20"))
			-command ("creatorShapeBlend(\"" + $filePath + "\", 0.2)");
		menuItem 
			-label (uiRes("m_buildHypergraphBrushPopupMenuItems.kBlendShape5"))
			-command ("creatorShapeBlend(\"" + $filePath + "\", 0.05)");
		menuItem -divider true;	
		menuItem 
			-label (uiRes("m_buildHypergraphBrushPopupMenuItems.kBlendShading100"))
			-command ("creatorShadingBlend(\"" + $filePath + "\", 1.0)");
		menuItem 
			-label (uiRes("m_buildHypergraphBrushPopupMenuItems.kBlendShading50"))
			-command ("creatorShadingBlend(\"" + $filePath + "\", 0.5)");
		menuItem 
			-label (uiRes("m_buildHypergraphBrushPopupMenuItems.kBlendShading20"))
			-command ("creatorShadingBlend(\"" + $filePath + "\", 0.2)");
		menuItem 
			-label (uiRes("m_buildHypergraphBrushPopupMenuItems.kBlendShading5"))
			-command ("creatorShadingBlend(\"" + $filePath + "\", 0.05)");

		$rItemsAdded = true;
	}

	return $rItemsAdded;
}
