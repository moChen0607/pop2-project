// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//  Procedure Name:
//      polySelectEdgesPattern
//
//  Description:
//      This procedure selects edge rings and loops
//		for selected edges.  It takes the first two edges
//		that are selected, looks at the number of edges between
//		them on the ring/loop, and continues that pattern around
//		the full ring/loop.
//
//  Input Arguments:
//      $method: the flag from the polySelect MEL command to use:
//				"edgeLoopPattern", "edgeRingPattern" or "edgeBorderPattern"
//
//  Return Value:
//      None.

global proc polySelectEdgesPattern(string $method)
{
	string $edges[] = `getEdges`;
	int $size = `size $edges`;

	if ($size > 1)
	{
		string $buffer[];

		tokenize $edges[0] "[]" $buffer;
		string $cmd = "polySelect -";
		$cmd += $method;
		$cmd += " ";
		$cmd += $buffer[1];

		tokenize $edges[1] "[]" $buffer;
		$cmd += " ";
		$cmd += $buffer[1];

		eval($cmd);
	}
}
