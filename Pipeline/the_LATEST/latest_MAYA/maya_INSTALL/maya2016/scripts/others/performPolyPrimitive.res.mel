// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

displayString -replace -value "Axis:" m_performPolyPrimitive.kAxis;
displayString -replace -value "Axis divisions:" m_performPolyPrimitive.kAxisDivisions;
displayString -replace -value "Cap divisions:" m_performPolyPrimitive.kCapDivisions;
displayString -replace -value "Clockwise" m_performPolyPrimitive.kClockwise;
displayString -replace -value "Coil divisions:" m_performPolyPrimitive.kCoilDivisions;
displayString -replace -value "Coils:" m_performPolyPrimitive.kCoils;
displayString -replace -value "Coils:" m_performPolyPrimitive.kCoilsOption;
displayString -replace -value "Collectively" m_performPolyPrimitive.kCollectively;
displayString -replace -value "Counterclockwise" m_performPolyPrimitive.kCounterclockwise;
displayString -replace -value "Create" m_performPolyPrimitive.kCreate;
displayString -replace -value "Create UVs" m_performPolyPrimitive.kCreateUVs;
displayString -replace -value "Depth:" m_performPolyPrimitive.kDepth;
displayString -replace -value "Depth divisions:" m_performPolyPrimitive.kDepthDivisions;
displayString -replace -value "Direction" m_performPolyPrimitive.kDirection;
displayString -replace -value "Dodecahedron" m_performPolyPrimitive.kDodecahedron;
displayString -replace -value "Each face separately" m_performPolyPrimitive.kEachfaceSeparately;
displayString -replace -value "Height:" m_performPolyPrimitive.kHeight;
displayString -replace -value "Height divisions:" m_performPolyPrimitive.kHeightDivisions;
displayString -replace -value "Icosahedron" m_performPolyPrimitive.kIcosahedron;
displayString -replace -value "Length:" m_performPolyPrimitive.kLength;
displayString -replace -value "Normalize" m_performPolyPrimitive.kNormalize;
displayString -replace -value "Number of sides in base:" m_performPolyPrimitive.kNumberOfSidesInBase;
displayString -replace -value "Number of sides in base:" m_performPolyPrimitive.kNumberOfSidesInBaseOption;
displayString -replace -value "Octahedron" m_performPolyPrimitive.kOctahedron;
displayString -replace -value "3" m_performPolyPrimitive.kOption3;
displayString -replace -value "4" m_performPolyPrimitive.kOption4;
displayString -replace -value "5" m_performPolyPrimitive.kOption5;
displayString -replace -value "X" m_performPolyPrimitive.kOptionX;
displayString -replace -value "Y" m_performPolyPrimitive.kOptionY;
displayString -replace -value "Z" m_performPolyPrimitive.kOptionZ;
displayString -replace -value "Pinched at Poles" m_performPolyPrimitive.kPinchedAtPoles;
displayString -replace -value "Platonic type" m_performPolyPrimitive.kPlatonicType;
displayString -replace -value "Polygon Cone Options" m_performPolyPrimitive.kPolygonConeOptions;
displayString -replace -value "Polygon Cube Options" m_performPolyPrimitive.kPolygonCubeOptions;
displayString -replace -value "Polygon Cylinder Options" m_performPolyPrimitive.kPolygonCylinderOptions;
displayString -replace -value "Polygon Helix Options" m_performPolyPrimitive.kPolygonHelixOptions;
displayString -replace -value "Polygon Soccer Ball Options" m_performPolyPrimitive.kPolygonMiscOptions;
displayString -replace -value "Polygon Pipe Options" m_performPolyPrimitive.kPolygonPipeOptions;
displayString -replace -value "Polygon Plane Options" m_performPolyPrimitive.kPolygonPlaneOptions;
displayString -replace -value "Polygon PlatonicSolid Options" m_performPolyPrimitive.kPolygonPlatonicSolidOptions;
displayString -replace -value "Polygon Prism Options" m_performPolyPrimitive.kPolygonPrismOptions;
displayString -replace -value "Polygon Pyramid Options" m_performPolyPrimitive.kPolygonPyramidOptions;
displayString -replace -value "Polygon Sphere Options" m_performPolyPrimitive.kPolygonSphereOptions;
displayString -replace -value "Polygon Torus Options" m_performPolyPrimitive.kPolygonTorusOptions;
displayString -replace -value "Preserve aspect ratio" m_performPolyPrimitive.kPreserveAspectRatio;
displayString -replace -value "Radius:" m_performPolyPrimitive.kRadius;
displayString -replace -value "Round cap" m_performPolyPrimitive.kRoundCap;
displayString -replace -value "Sawtooth at poles" m_performPolyPrimitive.kSawtoothatPoles;
displayString -replace -value "Section Radius:" m_performPolyPrimitive.kSectionRadius;
displayString -replace -value "Side length:" m_performPolyPrimitive.kSideLength;
displayString -replace -value "Tetrahedron" m_performPolyPrimitive.kTetrahedron;
displayString -replace -value "Texture" m_performPolyPrimitive.kTexture;
displayString -replace -value "Texture mapping:" m_performPolyPrimitive.kTextureMapping;
displayString -replace -value "Thickness:" m_performPolyPrimitive.kThickness;
displayString -replace -value "Twist:" m_performPolyPrimitive.kTwist;
displayString -replace -value "Width:" m_performPolyPrimitive.kWidth;
displayString -replace -value "Width divisions:" m_performPolyPrimitive.kWidthDivisions;
