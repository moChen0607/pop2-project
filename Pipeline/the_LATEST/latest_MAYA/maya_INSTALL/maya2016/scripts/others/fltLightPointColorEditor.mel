// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

// 
// 


//
//	Description:
//		Changes the color of the selected light points using the value from
//		the color editor dialog box.
//
global proc fltLPChangeColor()
{
	float $colorRGB[3];
   if(`about -mac`){
   		$colorRGB = `colorSliderGrp -q -rgb OF_LPCEditor|OF_LPCEditor|Attributes|Color`;
   }else{
		$colorRGB = `colorSliderGrp -q -rgb OF_LPCEditor|Attributes|Color`;
	}
	fltLightPoints -e -clr $colorRGB[0] $colorRGB[1] $colorRGB[2];
}


//
//	Description:
//		Updates the color swatch inside the color editor dialog box based
//		on the latest user selection.
//
global proc fltUpdateColor()
{
	// Update the ordered selection list
	fltSelectInOrder;

	global string $selectedLPs[];
	string $lpQuery[] = `fltLightPoints -q -clr`;
	float $lpColors[3];
	int $i;

	if ( !`window -exists OF_LPCEditor` ) {
		return;
	}

	for ( $i = 0 ; $i < size($lpQuery) ; $i += 5 ) {
		if ( $lpQuery[$i] == $selectedLPs[0] && $lpQuery[$i+1] == $selectedLPs[1] ) {
			$lpColors[0] = $lpQuery[$i + 2];
			$lpColors[1] = $lpQuery[$i + 3];
			$lpColors[2] = $lpQuery[$i + 4];

			if(`about -mac`){
				colorSliderGrp -e -rgbValue $lpColors[0] $lpColors[1] $lpColors[2]
				   	OF_LPCEditor|OF_LPCEditor|Attributes|Color;
			}else{
				colorSliderGrp -e -rgbValue $lpColors[0] $lpColors[1] $lpColors[2]
				   	OF_LPCEditor|Attributes|Color;
			}
		}
	}
}


//
//	Description:
//		Kills the script job used to keep the color editor updated when
//		it is not needed anymore
//
global proc fltColorJobCleanup()
{
	global int $fltColorJobNum;

	if ( $fltColorJobNum != -1 ) {
		scriptJob -kill $fltColorJobNum -force;
		$fltColorJobNum = -1;
	}
}


//
//	Description:
//		Brings up the Light Point Color Editor dialog
//
global proc fltLightPointColorEditor()
{
	if ( `window -exists OF_LPCEditor` ) {
		return;
	}

	window -title (uiRes("m_fltLightPointColorEditor.kLightPointColorEditor"))
		   -menuBar true
		   OF_LPCEditor;

	formLayout Attributes;

	colorSliderGrp -label (uiRes("m_fltLightPointColorEditor.kColor"))
				   Color;

	button -label (uiRes("m_fltLightPointColorEditor.kApplyAndClose"))
		   -command "fltLPChangeColor; deleteUI OF_LPCEditor;"
		   ApplyAndClose;

	button -label (uiRes("m_fltLightPointColorEditor.kApply"))
		   -command "fltLPChangeColor"
		   Apply;

	button -label (uiRes("m_fltLightPointColorEditor.kClose"))
		   -command "deleteUI OF_LPCEditor"
		   Close;

	formLayout -e
		-attachForm		Color		"top"		5
		-attachForm		Color		"left"		5
		-attachForm		Color		"right"		5

		-attachForm		ApplyAndClose	"bottom"	5
		-attachForm		ApplyAndClose	"left"		5
		-attachPosition	ApplyAndClose	"right"		5	33

		-attachForm		Apply			"bottom"	5
		-attachControl	Apply			"left"		5	ApplyAndClose
		-attachPosition	Apply			"right"		5	66

		-attachForm		Close			"bottom"	5
		-attachControl	Close			"left"		5	Apply
		-attachForm		Close			"right"		5
		Attributes;

	global int $fltColorJobNum = -1;
	if ( $fltColorJobNum == -1 ) {
		$fltColorJobNum = `scriptJob -e SelectionChanged fltUpdateColor`;
	}

	scriptJob -runOnce true -uiDeleted OF_LPCEditor fltColorJobCleanup;

	fltUpdateColor;

	showWindow OF_LPCEditor;
} 
