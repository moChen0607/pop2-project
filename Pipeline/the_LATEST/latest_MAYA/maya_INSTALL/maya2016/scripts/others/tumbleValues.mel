// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//  Description:
//
//  Input Arguments:
//      None.
//
//  Return Value:
//      None.
//

global proc tumbleValues(string $toolName)
{
	string $icon = "tumble.png";
	string $helpTag = "TumbleTool";
	toolPropertySetCommon $toolName $icon $helpTag;

	string $parent = (`toolPropertyWindow -q -location` + "|tumble");
	setParent $parent;

	floatSliderGrp -e
		-cc ("tumbleCtx -e -tumbleScale #1 " + $toolName)
		-v `tumbleCtx -q -tumbleScale $toolName`
		tumbleScale;

	checkBoxGrp -edit
		-v1 `tumbleCtx -q -objectTumble $toolName`
		-cc1 ("tumbleCtx -e -objectTumble #1 "+$toolName)
		objectTumbleCheckBoxItem;

    int $ltValue = `tumbleCtx -q -localTumble $toolName`;

    radioButtonGrp -e
       	-on1 ("tumbleCtx -e -localTumble 1 "+$toolName)
       	-on2 ("tumbleCtx -e -localTumble 0 "+$toolName)
       	-on3 ("tumbleCtx -e -localTumble 2 "+$toolName)
     	-select ((($ltValue)==1) ? 1 : (($ltValue)==0) ? 2 : 3)
     	localTumble;

	checkBoxGrp -edit
		-v1 `tumbleCtx -q -autoSetPivot $toolName`
		-cc ("tumbleCtx -e -autoSetPivot #1 "+$toolName)
		-enable ($ltValue == 0)
		autoSetPivot_CB;

    int $olValue = `tumbleCtx -q -orthoLock $toolName`;
	int $aocValue = `tumbleCtx -q -autoOrthoConstrain $toolName`;

	checkBoxGrp -e
		-v1 $olValue
		-cc1 ("tumbleCtx -e -orthoLock #1 " + $toolName)
		-v2 $aocValue
        -enable2 (!$olValue)
		-cc2 ("tumbleCtx -e -autoOrthoConstrain #1 " + $toolName)
		orthographicWindows_checkBoxGrp;

	floatSliderGrp -e
		-cc ("tumbleCtx -e -orthoStep #1 " + $toolName)
		-v `tumbleCtx -q -orthoStep $toolName`
		-enable (!$olValue && $aocValue)
		orthoStep;

	toolPropertySelect tumble;
}
