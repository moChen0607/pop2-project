// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//  Procedure Name:
//	checkUseFrameExtension
//

global proc checkUseFrameExtension ( string $nodeName ) 
{
	string $nodeAttr = $nodeName + ".useFrameExtension";
	int $value = `getAttr $nodeAttr`;
	
	if ( $value == 1 ) {
		editorTemplate -dimControl $nodeName "frameExtension" false;
		editorTemplate -dimControl $nodeName "frameCache" false; 
		editorTemplate -dimControl $nodeName "frameOffset" false;
		
		$nodeAttr = $nodeName + ".frameExtension";
		string $frameExt = `getAttr $nodeAttr`;
		
		if( $frameExt == "1" )
		{
			if( `connectionInfo -isDestination $nodeAttr` == false )
			{
				expression -s ($nodeAttr + "=frame" )  ;
			}
		}
		
	} else {
		editorTemplate -dimControl $nodeName "frameExtension" true;
		editorTemplate -dimControl $nodeName "frameCache" true;
		editorTemplate -dimControl $nodeName "frameOffset" true;	 
		
		$nodeAttr = $nodeName + ".frameExtension";
		string $frameExt = `getAttr $nodeAttr`;
		
		string $frameExtensionSource = `connectionInfo -sourceFromDestination $nodeAttr`;
		if ($frameExtensionSource != "") {
			string $frameExtensionExpression[]; 
			tokenize $frameExtensionSource "." $frameExtensionExpression;
			delete $frameExtensionExpression[0] ;
			setAttr $nodeAttr 1;
		}
	}
	
}
