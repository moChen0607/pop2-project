// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//  Procedure Name:
//      polyCircle
//
//  Description:
//      This procedure creates a polyCircle.
//
//  Input Arguments:
//		None.
//
//  Return Value:
//      None.

global proc polyDisk(){

	$circleInfoTemp = `circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1`;
	hide $circleInfoTemp;
	setAttr ($circleInfoTemp[1]+".normalY") -1;
	$circleInfoTemp = `planarSrf -ch 1 -d 3 -ko 0 -tol 0.01 -rn 0 -po 1 -name "pCircle#" $circleInfoTemp[0]`;
	$circleInfoTemp = `listRelatives $circleInfoTemp[0]`;
	$circleInfoTemp = `listConnections -d 0 -s 1 $circleInfoTemp`;
	setAttr ($circleInfoTemp[0]+".format") 2;
	setAttr ($circleInfoTemp[0]+".polygonType") 1;
	setAttr ($circleInfoTemp[0]+".uNumber") 10;
	setAttr ($circleInfoTemp[0]+".vNumber") 10;
	setAttr ($circleInfoTemp[0]+".uType") 2;
	setAttr ($circleInfoTemp[0]+".vType") 2;

}

//
//  Procedure Name:
//      contextPolyToolsDefaultMM
//
//  Description:
//      This procedure creates the popup/marking menu
//      for poly object creation. See ModelEdMenu.
//
//  Input Arguments:
//      The parent item to parent the popup menu to.
//
//  Return Value:
//      None.


global proc contextPolyToolsDefaultMM(){


	menuItem
		-label (uiRes("m_contextPolyToolsDefaultMM.kCreatePolygonTool"))
		-command "setToolTo polyCreateFacetContext ; polyCreateFacetCtx -e -pc `optionVar -q polyKeepFacetsPlanar` polyCreateFacetContext" 
		-radialPosition "N" 
		-enableCommandRepeat 1
		-image "polyCreateFacet.png" 
		;

	menuItem
		-label (uiRes("m_contextPolyToolsDefaultMM.kCreatePolygonToolOptions"))
		-command "setToolTo polyCreateFacetContext ; polyCreateFacetCtx -e -pc `optionVar -q polyKeepFacetsPlanar` polyCreateFacetContext; toolPropertyWindow" 
		-optionBox 1
		-radialPosition "N" 
		-enableCommandRepeat 1
		;

	menuItem
		-label (uiRes("m_contextPolyToolsDefaultMM.kPolyDisk"))
		-command "polyDisk" 
		-radialPosition "NE" 
		-enableCommandRepeat 1
		;

	menuItem
		-label (uiRes("m_contextPolyToolsDefaultMM.kPolySphere"))
		-command "CreatePolygonSphere" 
		-radialPosition "E" 
		-enableCommandRepeat 1
		-image "polySphere.png" 
		;

	menuItem
		-label (uiRes("m_contextPolyToolsDefaultMM.kPolySphereOptions"))
		-command "CreatePolygonSphereOptions" 
		-optionBox 1
		-radialPosition "E" 
		-enableCommandRepeat 1
		;

	menuItem
		-label (uiRes("m_contextPolyToolsDefaultMM.kPolyTorus"))
		-command "CreatePolygonTorus" 
		-radialPosition "SE" 
		-enableCommandRepeat 1
		-image "polyTorus.png" 
		;

	menuItem
		-label (uiRes("m_contextPolyToolsDefaultMM.kPolyTorusOptions"))
		-command "CreatePolygonTorusOptions" 
		-optionBox 1
		-radialPosition "SE" 
		-enableCommandRepeat 1
		;

	menuItem
		-label (uiRes("m_contextPolyToolsDefaultMM.kPolyCube"))
		-command "CreatePolygonCube" 
		-radialPosition "S" 
		-enableCommandRepeat 1
		-image "polyCube.png" 
		;

	menuItem
		-label (uiRes("m_contextPolyToolsDefaultMM.kPolyCubeOptions"))
		-command "CreatePolygonCubeOptions" 
		-optionBox 1
		-radialPosition "S" 
		-enableCommandRepeat 1
		;

	menuItem
		-label (uiRes("m_contextPolyToolsDefaultMM.kPolyCone"))
		-command "CreatePolygonCone" 
		-radialPosition "SW" 
		-enableCommandRepeat 1
		-image "polyCone.png" 
		;

	menuItem
		-label (uiRes("m_contextPolyToolsDefaultMM.kPolyConeOptions"))
		-command "CreatePolygonConeOptions" 
		-optionBox 1
		-radialPosition "SW" 
		-enableCommandRepeat 1
		;

	menuItem
		-label (uiRes("m_contextPolyToolsDefaultMM.kPolyCylinder"))
		-command "CreatePolygonCylinder"
		-radialPosition "W" 
		-enableCommandRepeat 1
		-image "polyCylinder.png" 
		;

	menuItem
		-label (uiRes("m_contextPolyToolsDefaultMM.kPolyCylinderOptions"))
		-command "CreatePolygonCylinderOptions" 
		-optionBox 1
		-radialPosition "W" 
		-enableCommandRepeat 1
		;

	menuItem
		-label (uiRes("m_contextPolyToolsDefaultMM.kPolyPlane"))
		-command "CreatePolygonPlane"
		-radialPosition "NW" 
		-enableCommandRepeat 1
		-image "polyMesh.png" 
		;

	menuItem
		-label (uiRes("m_contextPolyToolsDefaultMM.kPolyPlaneOptions"))
		-command "CreatePolygonPlaneOptions" 
		-optionBox 1
		-radialPosition "NW" 
		-enableCommandRepeat 1
		;

	menuItem
		-label (uiRes("m_contextPolyToolsDefaultMM.kPolyPyramid"))
		-command "CreatePolygonPyramid"
		-enableCommandRepeat 1
		-image "polyCone.png" 
		;

	menuItem
		-label (uiRes("m_contextPolyToolsDefaultMM.kPolyPyramidOptions"))
		-command "CreatePolygonPyramidOptions" 
		-optionBox 1
		-enableCommandRepeat 1
		;

	menuItem
		-label (uiRes("m_contextPolyToolsDefaultMM.kPolyPrism"))
		-command "CreatePolygonPrism"
		-enableCommandRepeat 1
		-image "polyCylinder.png" 
		;

	menuItem
		-label (uiRes("m_contextPolyToolsDefaultMM.kPolyPrismOptions"))
		-command "CreatePolygonPrismOptions" 
		-optionBox 1
		-enableCommandRepeat 1
		;

	menuItem -label (uiRes("m_contextPolyToolsDefaultMM.kPipe"))
		-annotation (getRunTimeCommandAnnotation("CreatePolygonPipe"))
		-image      "polyCylinder.png"
		-command    ("CreatePolygonPipe")
		-dragMenuCommand        ("performPolyPrimitive Pipe 2")
		-dragDoubleClickCommand ("CreatePolygonPipeOptions");

	menuItem -optionBox true
		-annotation (getRunTimeCommandAnnotation("CreatePolygonPipeOptions"))
		-image      "polyCylinder.png"
		-command    ("CreatePolygonPipeOptions");

	menuItem -label (uiRes("m_contextPolyToolsDefaultMM.kHelix"))
		-annotation (getRunTimeCommandAnnotation("CreatePolygonHelix"))
		-image      "polyHelix.png"
		-command    ("CreatePolygonHelix")
		-dragMenuCommand        ("performPolyPrimitive Helix 2")
		-dragDoubleClickCommand ("CreatePolygonHelixOptions");

	menuItem -optionBox true
		-annotation (getRunTimeCommandAnnotation("CreatePolygonHelixOptions"))
		-image      "polyHelix.png"
		-command    ("CreatePolygonHelixOptions");

	int $mtkEnable = (`pluginInfo -q -loaded "modelingToolkit"`);
	menuItem
		-version 2015
		-label (uiRes("m_contextPolyToolsDefaultMM.kMTKQuadDrawTool"))
		-annotation (uiRes("m_contextPolyToolsDefaultMM.kMTKQuadDrawToolAnn"))
		-command "dR_quadDrawTool" 
		-image "polyCrease.png" 
		-enable $mtkEnable
		MTKQuadDrawTool;

	menuItem
		-label (uiRes("m_contextPolyToolsDefaultMM.kMTKQuadDrawToolOptions"))
		-command "showModelingToolkit; dR_quadDrawTool;" 
		-optionBox 1
		-enableCommandRepeat 1
		-enable $mtkEnable
		;

	menuItem
		-divider 1
		;

	menuItem -label (uiRes("m_contextPolyToolsDefaultMM.kPolyPrimitiveInteractiveCreation"))
		-checkBox `optionVar -q createPolyPrimitiveAsTool`
		-command    ("toggleCreatePolyPrimitiveAsTool");		
	
	menuItem -label (uiRes("m_contextPolyToolsDefaultMM.kPolyPrimitiveInteractiveCreationExitOnComplete"))
		-checkBox `optionVar -q polyPrimitiveAsToolExitOnComplete`
		-command    ("togglePolyPrimitiveAsToolExitOnComplete")
		-enable	  `optionVar -q createPolyPrimitiveAsTool`;
	
	menuItem
		-divider 1
		;

	//////////////////////////////////////////////////////////////
	//
	//	DISPLAY
	//
	//////////////////////////////////////////////////////////////

	menuItem
		-label (uiRes("m_contextPolyToolsDefaultMM.kPolygonDisplayAll"))
		-subMenu 1
		-tearOff 0
		-allowOptionBoxes 1
		-postMenuCommandOnce 0
		;

		menuItem
			-label (uiRes("m_contextPolyToolsDefaultMM.kBackfaceCullingOn"))
			-command "polyOptions -gl -fb" 
			-enableCommandRepeat 1
			;

		menuItem
			-label (uiRes("m_contextPolyToolsDefaultMM.kBackfaceCullingOff"))
			-command "polyOptions -gl -bc" 
			-enableCommandRepeat 1
			;

		menuItem
			-divider 1
			;

		menuItem
			-label (uiRes("m_contextPolyToolsDefaultMM.kToggleGeomBorderEdges"))
			-command "polyOptions -gl -dmb 0 ;polyOptions  -gl -r -db  1;" 
			-enableCommandRepeat 1
			;

		menuItem
			-label (uiRes("m_contextPolyToolsDefaultMM.kToggleTextureBorderEdges"))
			-command "polyOptions -gl -db 0 ;polyOptions -r -gl -dmb 1;" 
			-enableCommandRepeat 1
			;

		menuItem
			-divider 1
			;

		menuItem
			-label (uiRes("m_contextPolyToolsDefaultMM.kToggleFaceNormals"))
			-command "polyOptions -gl -r -f -dn on" 
			-enableCommandRepeat 1
			;

		menuItem
			-label (uiRes("m_contextPolyToolsDefaultMM.kToggleVertexNormals"))
			-command "polyOptions -gl -r -pt -dn on" 
			-enableCommandRepeat 1
			;

		menuItem
			-divider 1
			;

		menuItem
			-label (uiRes("m_contextPolyToolsDefaultMM.kToggleFaceCenters"))
			-command "polyOptions -gl -r -dc 1" 
			-enableCommandRepeat 1
			;

		menuItem
			-label (uiRes("m_contextPolyToolsDefaultMM.kToggleHiddenTriangles"))
			-command "polyOptions -gl -r -dt 1"
			-enableCommandRepeat 1
			;

		menuItem
			-label (uiRes("m_contextPolyToolsDefaultMM.kToggleVertices"))
			-command "polyOptions -gl -r -displayVertex 1"
			-enableCommandRepeat 1
			;

		menuItem
			-divider 1
			;

		menuItem
			-label (uiRes("m_contextPolyToolsDefaultMM.kResetPolyDisplay"))
			-command "polyOptions -gl -ae  -sb 3  -db 0  -dmb 0  -dv 0  -dn 0 -facet  -dc 0  -dt 0  -dw 0  -din 0 0 0 0  -sn 0.4 -bc  -duv 0  -uvt 0  -cs 0  -cm diffuse  -bcv 1" 
			-enableCommandRepeat 1
			;

		setParent -menu ..;		


	setParent -menu ..;


}
