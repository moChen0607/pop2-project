// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//<doc>
//<name destroyLayout>
//
//<synopsis>
//		destroyLayout(layoutName)
//
//<description>
//		Destroys the layout with the given name(s), from it's descendants up.
//
//<returns>
//      None.
//
//<examples>
//
//	destroyLayout( "artAttr" );
//
//</doc>
//

proc string doDestroyMenu( string $menu )
{
	string $cmd;
	string $kids[] = `menu -q -ia $menu`;
	int $numKids = size($kids);
	int $i = 0;
	while( $i < $numKids ){
		string $menuItem = ($menu + "|" + $kids[$i]);
		if( `menuItem -q -subMenu $menuItem` ){
			$cmd += doDestroyMenu( $menuItem );
		} else {
			$cmd += ("deleteUI -menuItem \"" + $menuItem + "\";");
		}
		$i++;
	}
	$cmd += ("deleteUI -menu \"" + $menu + "\";");
	return $cmd;
}

proc string doDestroyControl(string $control)
{
	string $cmd;
	string $kids[] = `control -q -pma $control`;
	int $numKids = size($kids);
	int $i = 0;
	while( $i < $numKids ){
		$cmd += doDestroyMenu( ($control + "|" + $kids[$i]) );
		$i++;
	}
	$cmd += ("deleteUI -control \"" + $control + "\";");
	return $cmd;
}

proc string doDestroyLayout(string $layout)
{
	string $cmd;
	if( `layout -exists $layout` ){
		string $kids[] = `layout -q -ca $layout`;
		int $numKids = size($kids);
		int $i = 0;
		while( $i < $numKids ){
			$cmd += doDestroyLayout( ($layout + "|" + $kids[$i]) );
			$i++;
		}
		$cmd += ("deleteUI -layout \"" + $layout + "\";");
	} else if( `control -exists $layout` ){
		$cmd = doDestroyControl( $layout );
	}
	return $cmd;
}

global proc destroyLayout(string $layoutName)
{
	string $cmd = doDestroyLayout( $layoutName );
	evalDeferred( $cmd );
}

