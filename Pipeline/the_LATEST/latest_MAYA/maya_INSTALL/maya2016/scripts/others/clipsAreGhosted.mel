// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.


proc int clipHasGhost( string $clip )
{
	// First determine if the clip has a ghost
	string $plugs[] = `listConnections -p 1 -s 1 -d 0 ( $clip + ".clipData" )`;
	if ( size( $plugs ) == 0 ) 
		return 0;

	// If a ghost is found, determine if it is visible
	string $node = plugNode( $plugs[0] );
	return `getAttr ( $node + ".visibility" )`;
}

// Determine if the named clips have ghost associated with them.
// 
// Returns 0 - If none of the clips have ghosts
//         1 - If all clips have ghosts
//         2 - If some clips have ghosts and others don't
//
global proc int clipsAreGhosted( string $clips[] )
{
	int $sum = 0;
	for ( $clip in $clips )
		$sum += clipHasGhost( $clip );

	if      ( $sum == 0 )
		return 0;

	else if ( $sum == size( $clips ) )
		return 1;

	return 2;
}