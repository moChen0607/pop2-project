// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
// Options
//
// Update menu options so that they reflect state of editor
//
global proc updateOptionsState(string $editor)
{
	if (`menuItem -exists PopupShapeNodesItem`)
		menuItem -e -cb `hyperGraph -q -showShapes $editor` 
						PopupShapeNodesItem;
	if (`menuItem -exists MenuShapeNodesItem`)
		menuItem -e -cb `hyperGraph -q -showShapes $editor` 
						MenuShapeNodesItem;	

	if (`menuItem -exists PopupInvisibleNodesItem`)
		menuItem -e -cb `hyperGraph -q -showInvisible $editor` 
						PopupInvisibleNodesItem;
	if (`menuItem -exists MenuInvisibleNodesItem`)
		menuItem -e -cb `hyperGraph -q -showInvisible $editor` 
						MenuInvisibleNodesItem;
	if (`menuItem -exists PopupExpressionsItem`)
		menuItem -e -cb `hyperGraph -q -showExpressions $editor` 
						PopupExpressionsItem;
	if (`menuItem -exists MenuExpressionsItem`)
		menuItem -e -cb `hyperGraph -q -showExpressions $editor` 
						MenuExpressionsItem;

	if (`menuItem -exists PopupConstraintsItem`)
		menuItem -e -cb `hyperGraph -q -showConstraints $editor` 
						PopupConstraintsItem;
	if (`menuItem -exists MenuConstraintsItem`)
		menuItem -e -cb `hyperGraph -q -showConstraints $editor` 
						MenuConstraintsItem;

	if (`menuItem -exists PopupDeformersItem`)
		menuItem -e -cb `hyperGraph -q -showDeformers $editor` 
						PopupDeformersItem;
	if (`menuItem -exists MenuDeformersItem`)
		menuItem -e -cb `hyperGraph -q -showDeformers $editor` 
						MenuDeformersItem;

	if (`menuItem -exists PopupUnderworldItem`)
		menuItem -e -cb `hyperGraph -q -showUnderworld $editor` 
						PopupUnderworldItem;
	if (`menuItem -exists MenuUnderworldItem`)
		menuItem -e -cb `hyperGraph -q -showUnderworld $editor` 
						MenuUnderworldItem;

	if (`menuItem -exists PopupSelectedFromConnectionItem`)
		menuItem -e -cb `hyperGraph -q -showConnectionFromSelected $editor` 
						PopupSelectedFromConnectionItem;
	if (`menuItem -exists MenuSelectedFromConnectionItem`)
		menuItem -e -cb `hyperGraph -q -showConnectionFromSelected $editor` 
						MenuSelectedFromConnectionItem;

	if (`menuItem -exists PopupSelectedToConnectionItem`)
		menuItem -e -cb `hyperGraph -q -showConnectionToSelected $editor` 
						PopupSelectedToConnectionItem;
	if (`menuItem -exists MenuSelectedToConnectionItem`)
		menuItem -e -cb `hyperGraph -q -showConnectionToSelected $editor` 
						MenuSelectedToConnectionItem;

	if (`menuItem -exists PopupUpdateSelectionItem`)
		menuItem -e -cb `hyperGraph -q -updateSelection $editor` 
						PopupUpdateSelectionItem;
	if (`menuItem -exists MenuUpdateSelectionItem`)
		menuItem -e -cb `hyperGraph -q -updateSelection $editor` 
						MenuUpdateSelectionItem;

	if (`menuItem -exists PopupUpdateNodeAddedItem`)
		menuItem -e -cb `hyperGraph -q -updateNodeAdded $editor` 
						PopupUpdateNodeAddedItem;
	if (`menuItem -exists MenuUpdateNodeAddedItem`)
		menuItem -e -cb `hyperGraph -q -updateNodeAdded $editor` 
						MenuUpdateNodeAddedItem;

	if (`radioMenuItemCollection -exists ($editor + "GraphLayoutStyleMenuCollection")`) {
		menuItem -edit -rb 
			(`hyperGraph -q -graphLayoutStyle $editor` == "circularLayout") ($editor + "MenuCircularLayoutItem");
		menuItem -edit -rb 
			(`hyperGraph -q -graphLayoutStyle $editor` == "hierarchicalLayout") ($editor + "MenuHierarchicalLayoutItem");
		menuItem -edit -rb 
			(`hyperGraph -q -graphLayoutStyle $editor` == "orthogonalLayout") ($editor + "MenuOrthogonalLayoutItem");
		menuItem -edit -rb 
			(`hyperGraph -q -graphLayoutStyle $editor` == "symmetricLayout") ($editor + "MenuSymmetricLayoutItem");
		menuItem -edit -rb 
			(`hyperGraph -q -graphLayoutStyle $editor` == "treeLayout") ($editor + "MenuTreeLayoutItem");
	}

	if (`radioMenuItemCollection -exists ($editor + "GraphLayoutStylePopupCollection")`) {
		menuItem -edit -rb 
			(`hyperGraph -q -graphLayoutStyle $editor` == "circularLayout") ($editor + "PopupCircularLayoutItem");
		menuItem -edit -rb 
			(`hyperGraph -q -graphLayoutStyle $editor` == "hierarchicalLayout") ($editor + "PopupHierarchicalLayoutItem");
		menuItem -edit -rb 
			(`hyperGraph -q -graphLayoutStyle $editor` == "orthogonalLayout") ($editor + "PopupOrthogonalLayoutItem");
		menuItem -edit -rb 
			(`hyperGraph -q -graphLayoutStyle $editor` == "symmetricLayout") ($editor + "PopupSymmetricLayoutItem");
		menuItem -edit -rb 
			(`hyperGraph -q -graphLayoutStyle $editor` == "treeLayout") ($editor + "PopupTreeLayoutItem");
	}
	if (`radioMenuItemCollection -exists ($editor + "OrientMenuCollection")`) {
		menuItem -edit -rb 
			(`hyperGraph -q -orientation $editor` == "horiz") ($editor+"MenuHorizItem");
		menuItem -edit -rb 
			(`hyperGraph -q -orientation $editor` == "vert") ($editor+"MenuVertItem");
	}

	if (`radioMenuItemCollection -exists ($editor + "OrientPopupCollection")`) {
		menuItem -edit -rb 
			(`hyperGraph -q -orientation $editor` == "horiz") ($editor+"PopupHorizItem");
		menuItem -edit -rb 
			(`hyperGraph -q -orientation $editor` == "vert") ($editor+"PopupVertItem");
	}

	if (`radioMenuItemCollection -exists ($editor + "FreeformMenuCollection")`) {
		menuItem -edit -rb 
			(`hyperGraph -q -freeform $editor`) MenuFreeformOnItem;
		menuItem -edit -rb 
			(`hyperGraph -q -freeform $editor` == false) MenuFreeformOffItem;
	}

	if (`radioMenuItemCollection -exists ($editor + "FreeformPopupCollection")`) {
		menuItem -edit -rb 
			(`hyperGraph -q -freeform $editor`) PopupFreeformOnItem;
		menuItem -edit -rb 
			(`hyperGraph -q -freeform $editor` == false) PopupFreeformOffItem;
	}

	iconTextCheckBox -edit -value (`hyperGraph -q -freeform $editor`)
			($editor+"freeformButton");
	iconTextCheckBox -edit -value (`hyperGraph -q -mergeConnections $editor`)
			($editor+"mergeConnectionsButton");
}
