// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  March, 2006
//
//  Description:
//     This is the script used to implement menus for the setNClothStartState
//	menu.
//  

global proc performSetNClothStartState( int $setStartState )
{
	int $noNObjectSelected = 1;
	int $index;
	// First check for nParticles
	string $pSel[] = `ls -sl -dag -exactType nParticle`;

	for( $index = 0; $index < size($pSel); $index++ ){
		$noNObjectSelected = 0;
		if( $setStartState ){	
			saveInitialState( $pSel[$index] );
		} else {
			clearParticleStartState( $pSel[$index] );
		}
	}

	// list all the meshes selected
	//
	string $mSel[] = `ls -sl -dag -type mesh -visible -noIntermediate`;

	// Search for all nucleus meshes, and set/clear start state as appropriate
	//

	string $mesh = "";
	string $cloth = "";
	for( $index = 0; $index < size($mSel); $index++ ){

		string $meshSel = $mSel[$index];
		$cloth = findTypeInHistory( $meshSel, "nCloth", 1, 1 );	
		if( $cloth != "" ){
			$noNObjectSelected = 0;
			string $cmd = "nBase -e -" + ($setStartState?"stuff":"clear")
							+ "Start " + $cloth;
			evalEcho( $cmd );
			if( !$setStartState ){
				// Force a refresh
				//
				dgdirty( $cloth + ".outputMesh" );
				refresh -f;
			}
		}
	}
	if( $noNObjectSelected ){
		if( $setStartState ){
			error( (uiRes("m_performSetNClothStartState.kUnableToSet")));
		} else {
			error( (uiRes("m_performSetNClothStartState.kUnableToClear")));
		}
	}
}
