// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

global proc string[] sortLayers(string $layerArray[])
//
//	Description:
//		Sort the layers in the argument array according to their
//		display order attribute.
//
//	Arguments:
//		$layerArray[] - A string array of layer names.
//
//	Returns:
//		A string array containing the sorted list of layers.
//
{
	string $result[];
	int    $count, $index, $position, $positionArray[];
	
	//	Construct an array consisting of each layer's display order
	//	attribute value.
	//
	$count = size($layerArray);
	for ($index = 0; $index < $count; $index++) {
		$position = `getAttr ($layerArray[$index] + ".displayOrder")`;
		$positionArray[$index] = $position;
	}

	//	Now sort the display order array.
	//
	$positionArray = sort($positionArray);

	//	Construct the result array by matching the layer with it's
	//	corresponding display order value.
	//
	for ($index = 0; $index < $count; $index++) {
		for ($layerIndex = 0; $layerIndex < $count; $layerIndex++) {
			if ("" != $layerArray[$layerIndex]) {
				$position = `getAttr ($layerArray[$layerIndex] + ".displayOrder")`;
				if ($positionArray[$index] == $position) {
					$result[$index] = $layerArray[$layerIndex];
					$layerArray[$layerIndex] = "";
					break;
				}
			}
		}
	}

	return $result;
}