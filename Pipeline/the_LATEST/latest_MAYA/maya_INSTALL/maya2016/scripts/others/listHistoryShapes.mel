// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
// Creation Date:  14 July 1996
//
//  Procedure Name:
//      listHistoryShapes
//
//  Description:
//     Given an object, get all the shapes under it and give the history
//     chain for all of those (including the object itself).
//
//     If you specify positive $levels, that is how many levels of
//     recursion you will get; if you want all the nodes, give it -1.
//
//     Note that the results will get appended to the array, so if
//     you have something in $result array and you want it overwritten,
//     make sure you use clear().
//
//     If the original is a shape, you get its chain only once; if its
//     a transform, you get the chain for the transform and all of the
//     shapes under it.
//
//  Return Value:
//      Number of nodes found.
//

global proc int listHistoryShapes( string $original, string $result[],
								   int $levels )
{
	$result = `listHistory -il 1 -lv $levels -bf -lf true $original`;
	return size($result);
}

