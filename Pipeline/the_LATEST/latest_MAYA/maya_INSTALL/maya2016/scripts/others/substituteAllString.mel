// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//
//
//
// Creation Date:  September 15, 1997
//
//<doc>
//<name substituteAllString>
//
//<synopsis>
//	string substituteAllString(string $text, string $searchStr, string $replaceStr)
//
//<description>
//      Substitute every occurrence of a single character string in a 
//		text string by a new string of any length.
//
//<flags>
//		string $text - Original string to be modified.
//		string $searchStr - Single character string to replace.
//      string $replaceStr - String that will be added in.
//
//<returns>
//      string: The new text string with the replacement strings in it.
//
//<examples>
//    string $text = "one + two + three + four";
//    string $result = substituteAllString($text, "+", "plus");
//    print $result;
//
//</doc>
//

global proc string substituteAllString(
	string $text,
	string $searchStr,
	string $replaceStr )
{
	string $totalText = "";
	int $stringLen = `size $text`;
	int $searchStringLen = `size $searchStr`;

	if ($searchStringLen == 0) {
		return $text;
	}

	string $subStr;
	int $i, $nextIndex;
	for ( $i = 1; $i <= $stringLen; $i++ )
	{
		// get the subtring from the text starting at the current index and
		// that is the same length as the search string
		//
		$nextIndex = $i + $searchStringLen - 1;
		$subStr = `substring $text $i $nextIndex`;

		if ( $subStr == $searchStr )
		{
			// replace found string in the text string
			//
			$totalText = $totalText + $replaceStr;
			$i += $searchStringLen - 1;		// Skip the rest of the pattern
		}
		else
		{
			// keep the substring in the text string
			//
			$totalText = $totalText + `substring $subStr 1 1`;
		}
	}

	return $totalText;
}
