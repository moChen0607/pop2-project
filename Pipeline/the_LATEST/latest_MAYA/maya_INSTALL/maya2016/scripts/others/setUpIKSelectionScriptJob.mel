// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  Feb 13, 2001
//
//  Description:
//      A scriptJob to contro the IK/FK switching UI
//


global proc ikSelectionChanged(string $menu)
//
//	Description:
//		When the selection changes, this updated the ik/fk UI
//
{
	if (`headsUpDisplay -exists HUDIKSolverState` &&
		`headsUpDisplay -q -vis HUDIKSolverState`) {

		//	The menu will get updated when the Heads Up Display is 
		//	updated.
		//
		return;
	}

	//	There are five different returned values from ikFKSolverState()
	//		0	:	No joints or ikHandles are selected.
	//		1	:	The selected items have their solver enabled.
	//		2 	:	The selected items have their solver disabled.
	//		3 	:	No solver on the selcted joints.
	//		4 	:	Some of the selected items have their solvers 
	//				enabled and others have their solvers disabled.
	//
	int $solverState = ikFKSolverState(`ls -sl`);
	int $ikOn = false;

	if ($solverState == 1 || $solverState == 4) {
		$ikOn = true;
	}

	menuItem -edit -checkBox $ikOn $menu;
	optionVar -intValue ikFKSwitchState $ikOn;
}

global proc updateIKFKCheckBox(int $state)
{
	global string $gikFKSwitchStateCheckBoxMenu;
	if (`menuItem -ex $gikFKSwitchStateCheckBoxMenu`) {
		menuItem -edit -checkBox $state $gikFKSwitchStateCheckBoxMenu;
		optionVar -intValue ikFKSwitchState $state;
	}
}

global proc setUpIKSelectionScriptJob(string $menu)
{
	global string $gikFKSwitchStateCheckBoxMenu;
	$gikFKSwitchStateCheckBoxMenu = $menu;

	scriptJob -protected -event "SelectionChanged" 
		("ikSelectionChanged(\""+$menu+"\")");

	scriptJob -protected -event timeChanged
		("ikSelectionChanged(\""+$menu+"\")");
}
