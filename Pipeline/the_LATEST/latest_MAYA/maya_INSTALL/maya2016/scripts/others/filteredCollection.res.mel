// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

displayString -replace -value "All mental ray Nodes" m_filteredCollection.kAllMentalRayNodes;
displayString -replace -value "All Nodes" m_filteredCollection.kAllNodes;
displayString -replace -value "All Shading Nodes" m_filteredCollection.kAllShadingNodes;
displayString -replace -value "Asset Nodes" m_filteredCollection.kAssetNodes;
displayString -replace -value "Bake Sets" m_filteredCollection.kBakeSets;
displayString -replace -value "Cameras" m_filteredCollection.kCameras;
displayString -replace -value "Lights" m_filteredCollection.kLights;
displayString -replace -value "Lights and Optical FX" m_filteredCollection.kLightsAndOpticalFX;
displayString -replace -value "Materials" m_filteredCollection.kMaterials;
displayString -replace -value "Materials and Shader Glow" m_filteredCollection.kMaterialsAndShaderGlow;
displayString -replace -value "mental ray Contour Contrast Shaders" m_filteredCollection.kMentalRayContourContrastShaders;
displayString -replace -value "mental ray Output Shaders" m_filteredCollection.kMentalRayContourOutputShaders;
displayString -replace -value "mental ray Contour Shaders" m_filteredCollection.kMentalRayContourShaders;
displayString -replace -value "mental ray Contour Store Shaders" m_filteredCollection.kMentalRayContourStoreShaders;
displayString -replace -value "mental ray Data Conversion Shaders" m_filteredCollection.kMentalRayDataConversionShaders;
displayString -replace -value "mental ray Displacement Shaders" m_filteredCollection.kMentalRayDisplacementShaders;
displayString -replace -value "mental ray Environment Shaders" m_filteredCollection.kMentalRayEnvironmentShaders;
displayString -replace -value "mental ray Geometry Shaders" m_filteredCollection.kMentalRayGeometryShaders;
displayString -replace -value "mental ray Legacy Shaders" m_filteredCollection.kMentalRayLegacyShaders;
displayString -replace -value "mental ray Lens Shaders" m_filteredCollection.kMentalRayLensShaders;
displayString -replace -value "mental ray Light Shaders" m_filteredCollection.kMentalRayLightShaders;
displayString -replace -value "mental ray Lightmap Shaders" m_filteredCollection.kMentalRayLightmapShaders;
displayString -replace -value "mental ray Materials" m_filteredCollection.kMentalRayMaterials;
displayString -replace -value "mental ray Misc. Shaders" m_filteredCollection.kMentalRayMiscShaders;
displayString -replace -value "mental ray Output Shaders" m_filteredCollection.kMentalRayOutputShaders;
displayString -replace -value "mental ray Photon Emitter Shaders" m_filteredCollection.kMentalRayPhotonEmitterShaders;
displayString -replace -value "mental ray Photon Shaders" m_filteredCollection.kMentalRayPhotonShaders;
displayString -replace -value "mental ray Photon Volume Shaders" m_filteredCollection.kMentalRayPhotonVolumeShaders;
displayString -replace -value "mental ray Sample Compositing Shaders" m_filteredCollection.kMentalRaySampleCompositingShaders;
displayString -replace -value "mental ray Shadow Shaders" m_filteredCollection.kMentalRayShadowShaders;
displayString -replace -value "mental ray State Shaders" m_filteredCollection.kMentalRayStateShaders;
displayString -replace -value "mental ray Texture Shaders" m_filteredCollection.kMentalRayTextureShaders;
displayString -replace -value "mental ray Volume Shaders" m_filteredCollection.kMentalRayVolumeShaders;
displayString -replace -value "Post Process" m_filteredCollection.kPostProcess;
displayString -replace -value "Rendering" m_filteredCollection.kRendering;
displayString -replace -value "Shading Groups" m_filteredCollection.kShadingGroups;
displayString -replace -value "Textures" m_filteredCollection.kTextures;
displayString -replace -value "Utilities" m_filteredCollection.kUtilities;
