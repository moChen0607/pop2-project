// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  29 Sept 1996
//
//  Description:
//      This file contains a proc that interactively asks a user for a tab label
//		and sets the label of the active tab on the given tab layout to be that.
//		Most logical use for this script is to attach as the double click command 
//		onto a tab layout - that way, double clicking on any tab in the layout
//		will allow the user to change its label.

global proc setActiveTabLabel (string $tabLayout)
//
//  Procedure Name:
//      setActiveTabLabel
//
//  Description:
//      proc to set the active tab in a layout to a value input by the user.
//		
//  Input Arguments:
//      $tabLayout - the tabLayout name
//
//  Return Value:
//      None.
//
{
	// get the active tab information
	string $activeTab = `tabLayout -q -selectTab $tabLayout`;
	int $activeTabIndex = `tabLayout -q -selectTabIndex $tabLayout`;
	string $ok = (uiRes("m_setActiveTabLabel.kOk"));
	string $cancel = (uiRes("m_setActiveTabLabel.kCancel"));
	
	string $exitVal = `promptDialog 
					-title (uiRes("m_setActiveTabLabel.kRenameTab"))
					-message (uiRes("m_setActiveTabLabel.kEnterTabLabel"))
					-button $ok -button $cancel
					-defaultButton $ok -cancelButton $cancel
					-dismissString $cancel`;
	if( $exitVal == $ok ){
		string $nuLabel = `promptDialog -q`;
		tabLayout -e -tabLabel $activeTab $nuLabel $tabLayout;
	}
}
