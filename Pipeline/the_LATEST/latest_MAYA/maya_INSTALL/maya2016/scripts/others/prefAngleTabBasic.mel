// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  June 17, 1997
//
//  Description:
//		This script is called in both performSetPrefAngle and
//		performAssumePrefAngle to build basic UI.
//

global proc string prefAngleTabBasic( string $parent )
{
	setParent $parent;

	//  Activate the default UI template.
	//
	setUITemplate -pushTemplate DefaultTemplate;

	//  Turn on the wait cursor.
	//
	waitCursor -state 1;

	string $optionLayout = `columnLayout -adjustableColumn true`;

	radioButtonGrp
		-nrb 2
		-label (uiRes("m_prefAngleTabBasic.kOptions")) 
		-label1 (uiRes("m_prefAngleTabBasic.kSelectedJoint")) 
		-label2 (uiRes("m_prefAngleTabBasic.kHierarchy")) 
		recursive;

	//  Turn off the wait cursor.
	//
	waitCursor -state 0;

	//  Deactivate the default UI template.
	//
	setUITemplate -popTemplate;

	return $optionLayout;
}

// to make sure the options for prefAngle are already set.
//
global proc prefAngleSetOptionVars( int $forceSettings )
{
	// -ch/-children
	//
	if ($forceSettings || !`optionVar -exists recursive`)
		optionVar -intValue recursive 1;
}

global proc prefAngleSetup (string $parent, int $forceSettings)
{
	// Retrieve the option settings
	//
	prefAngleSetOptionVars ($forceSettings);

	setParent $parent;

	// Query the optionVar's and set the values into the controls
	//
	int $value = `optionVar -q recursive` + 1;
	radioButtonGrp -e -sl $value recursive;
}

