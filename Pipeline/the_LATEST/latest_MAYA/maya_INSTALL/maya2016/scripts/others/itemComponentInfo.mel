// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

global proc int itemComponentInfo( string $item, string $info[] )
{
	string $buffer[];	
	int $numTokens = `tokenize $item ".[]" $buffer`;		
	$info[0] = $buffer[0];
	if( $numTokens == 1 ){
		return( 6 ); // surface
	} else if( $numTokens == 3 ){
		$info[1] = $buffer[2];
		string $t = $buffer[1];
		if( $t == "vtx" ){
			return( 2 ); // point
		}else if( $t == "e" ){
			return( 3 ); // edge
		}else if( $t == "f" ){
			return( 4 ); // face
		}else if( $t == "pt" ){
			return( 7 ); // particle
		}else{
			string $fmt = (uiRes("m_itemComponentInfo.kUnknownToken"));
			warning( `format -s $t $fmt` );
			return( 0 ); 
		}
	} else {
		string $fmt = (uiRes("m_itemComponentInfo.kBadNumTokens"));
		warning( `format -s $numTokens $fmt` );
		return( 0 );
	}
}
