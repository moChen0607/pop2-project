// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  2005
//
//  Description:
//	  This method sets the enable state on the caches associated with
//    the selected objects.
//

global proc int setCacheEnable(int $val, int $silent, string $shapes[])
{
	int $count = 0;
	if (size($shapes) == 0) {
		string $geoms[] = `getGeometriesToCache`;
		string $ncloths[] = `getNclothObjectsToCache 0`;
		$shapes = AWAppendStringsToStringArray($geoms,$ncloths);
	}
	string $doneCaches[];
	if (size($shapes) == 0) {
		if (! $silent) {
			error((uiRes("m_setCacheEnable.kNothingSelected")));
		}
	}
	for ($shape in $shapes) {
		string $caches[] = `findExistingCaches $shape`;
		for ($cacheFile in $caches) {
			if (0 == AWNumberOfOccurrencesInStringArray($cacheFile,
														$doneCaches)) {
				$doneCaches[size($doneCaches)] = $cacheFile;
				setAttr ($cacheFile+".enable") $val;
				$count++;
			}
		}
	}
	string $enabledFormat = (uiRes("m_setCacheEnable.kEnabledCaches"));
	string $disabledFormat = (uiRes("m_setCacheEnable.kDisabledCaches"));
	string $format;
	if ($val) {
		$format = $enabledFormat;
	} else {
		$format = $disabledFormat;
	}
	string $resultInfo = `format -stringArg $count $format`;
	if (! $silent) {
		print $resultInfo;
	}
	return $count;
}
