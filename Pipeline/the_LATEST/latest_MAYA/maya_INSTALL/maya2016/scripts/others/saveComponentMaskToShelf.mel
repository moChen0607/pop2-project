// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
// Creation Date:  1 December 1996
//
//
//  Procedure Name:
//		saveComponentMaskToShelf
//
//  Description:
//		Saves the current component selection
//		mask setting to the currently active
//		shelf tab.
//
//  Input Arguments:
//      None.
//
//  Return Value:
//      None.
//


global proc saveComponentMaskToShelf( ) {

	global string $gShelfTopLevel;

	//  only create the shelfButton if there is an active shelf
	//
	if (`tabLayout -exists $gShelfTopLevel`) {

		string $command = ( "selectMode -component; selectType"

			+" -cv " + `selectType -q -cv` 
			+" -vertex " + `selectType -q -vertex` 
			+" -subdivMeshPoint " + `selectType -q -subdivMeshPoint` 
			+" -latticePoint " + `selectType -q -latticePoint` 
			+" -particle " + `selectType -q -particle` 
		
			+" -editPoint " + `selectType -q -editPoint`
			+" -curveParameterPoint " + `selectType -q -curveParameterPoint` 
			+" -surfaceParameterPoint " + `selectType -q -surfaceParameterPoint` 
			+" -puv " + `selectType -q -puv` 

			+" -polymeshEdge " + `selectType -q -polymeshEdge` 
			+" -subdivMeshEdge " + `selectType -q -subdivMeshEdge` 
			+" -isoparm " + `selectType -q -isoparm` 
			+" -surfaceEdge " + `selectType -q -surfaceEdge` 
			+" -surfaceFace " + `selectType -q -surfaceFace` 
			+" -springComponent " + `selectType -q -springComponent` 
		
			+" -facet " + `selectType -q -facet` 
			+" -subdivMeshFace " + `selectType -q -subdivMeshFace` 
		
			+" -hull " + `selectType -q -hull`
		
			+" -rotatePivot " + `selectType -q -rotatePivot` 
			+" -scalePivot " + `selectType -q -scalePivot` 
			+" -jointPivot " + `selectType -q -jointPivot` 
		
			+" -selectHandle " + `selectType -q -selectHandle` 
		
			+" -localRotationAxis " + `selectType -q -localRotationAxis`
			+" -imagePlane " + `selectType -q -imagePlane`
        );
		

		// Create the selection mask button on the active shelf
		//
		shelfButton 
			-p `tabLayout -q -st $gShelfTopLevel`
			-label (uiRes("m_saveComponentMaskToShelf.kComponentMask"))
			-imageOverlayLabel (uiRes("m_saveComponentMaskToShelf.kMask"))
			-image1 "commandButton.png" 
			-c $command;
	}
}
