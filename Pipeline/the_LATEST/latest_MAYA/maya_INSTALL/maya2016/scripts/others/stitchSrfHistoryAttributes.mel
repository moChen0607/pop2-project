// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  Oct 9 1996
//
//  Description:
//		These procs create the controls for the history attributes produced 
//		by the stitchSrf tool. 
//

global proc stitchSrfHistoryAttributes( string $parent, string $node, string $hasNodes)
{
   setParent $parent;

    // Ramesh NOT sure I reallu need to do this
	// My goal was if it was the tool property sheet
	// then Don't show anything. If it was the working
	// attributes then show stuff. FOR SOME REASON IT NEVER SHOWS
	// ANY of your original attributes!!!

   	if ($hasNodes == "none") {
		string $pcattr = $node + ".pc" ;
		string $tcattr = $node + ".tc" ;
		string $scattr = $node + ".sc" ;

		int $npc = `getAttr -size $pcattr` ;
		int $ntc = `getAttr -size $tcattr` ;
		int $nsc = `getAttr -size $scattr` ;

		if( $npc == $nsc && $npc == $nsc && $npc > 0 ) {

			float $scount[] = `getAttr $scattr`;
			float $pc[] = `getAttr $pcattr`;
			float $tc[] = `getAttr $tcattr`;

			int $i ;

			for( $i = 0 ; $i < $npc ; $i++ ) {
				string $pcLabel = "Position" ;
				string $tcLabel = "Tangent" ;
				string $scLabel = "Sample Count" ;

				string $pcName_CheckBoxGrp = "PositionalContinuity"+$i ;
				string $tcName_CheckBoxGrp = "TangentContinuity"+$i ;
				string $scName_intSliderGrp = "samples"+$i ;
				checkBoxGrp -ncb 1 -l "Blend Edge" -l1 $pcLabel -v $pc[$i] $pcName_CheckBoxGrp ;	
				checkBoxGrp -ncb 1 -l1 $tcLabel -v $tc[$i] $tcName_CheckBoxGrp ;	
				intSliderGrp -f true -min 6 -max 500 -step 1 -v $scount[$i] -l $scLabel $scName_intSliderGrp ; 	
			}	
		}
   	}
 }
