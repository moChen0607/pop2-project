// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

// groupReference.mel
//
// Callback to be used when loading a reference
// Assumes top level nodes in reference are selected when this script is called,
// groups top level nodes in file and adds message connection
//
global proc string groupReference (string $refNode,  string $grpName )
{

	string $actualGrpName = $grpName;
	if( size($actualGrpName) == 0 ) {
		$actualGrpName = $refNode + "group";
	}

	// if this is a reference just create a transform node for future use
	// we will parent the nodes to it later (each time we load the reaferece)
	// but if we're importing (no reference node supplied), group now

	string $grpNode;

	if(size( $refNode ) > 0) {	
		$grpNode = `createNode transform -n $actualGrpName`;
		//Indexes on the associatedNode attribute are used to make specific associations, index 0 is reserved for the group node.
		connectAttr ($grpNode+".message") ($refNode + ".associatedNode[0]");
		select -r $grpNode;
	} else {
		if ( size(`ls -sl`) > 0 )
		{
			// The group command displays an in-view message that we don't want displayed.
			string $ivmEnableStr = "inViewMessageStatusEnable";
			int $ivmEnable = `optionVar -q $ivmEnableStr`;
			if ($ivmEnable)
				optionVar -iv $ivmEnableStr false;
			catch($grpNode = `group -w -n $actualGrpName`);
			if ($ivmEnable)
				optionVar -iv $ivmEnableStr true;
			xform -cp $grpNode;
			select -r $grpNode;
		}
	}

	return $grpNode;
}
