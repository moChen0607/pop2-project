// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

global proc sculptMeshCacheOptionsPopup()
{
	global string $gSelect;
	string $tool = `currentCtx`;
	int $dw = `sculptMeshCacheCtx -q -displayWireframe $tool`;
	int $uss = `sculptMeshCacheCtx -q -useSteadyStroke $tool`;
	string $lm = `sculptMeshCacheCtx -q -lastMode $tool`;
	string $lml = (uiRes("m_sculptMeshCacheOptionsPopup.kLastTool")) + $lm;

	menuItem -rp "N" -l (uiRes("m_sculptMeshCacheOptionsPopup.kShowWireframe"))
		-checkBox $dw 
 		-c ("sculptMeshCacheCtx -e -displayWireframe " + !$dw + " `currentCtx`; ");
	
	menuItem -rp "NE" -l (uiRes("m_sculptMeshCacheOptionsPopup.kSetSculpt"))
 		-c ("sculptMeshCacheCtx -e -mode \"Sculpt\" `currentCtx`; ");
	
	menuItem -rp "E" -l $lml  
 		-c ("sculptMeshCacheCtx -e -mode \"" + $lm + "\" `currentCtx`; ");
	
	menuItem -rp "SE" -l (uiRes("m_sculptMeshCacheOptionsPopup.kSetGrab"))
 		-c ("sculptMeshCacheCtx -e -mode \"Grab\" `currentCtx`; ");

	menuItem -rp "S" -l (uiRes("m_sculptMeshCacheOptionsPopup.kExitSculpt"))
 		-c ("setToolTo $gSelect;");

	menuItem -rp "SW" -l (uiRes("m_sculptMeshCacheOptionsPopup.kFalloffType")) -subMenu 1;

		menuItem -rp "W" -l (uiRes("m_sculptMeshCacheOptionsPopup.kFalloffHybrid"))
	 		-c ("sculptMeshCacheCtx -e -falloffType 0 `currentCtx`; ");
		menuItem -rp "SW" -l (uiRes("m_sculptMeshCacheOptionsPopup.kFalloffSurface"))
	 		-c ("sculptMeshCacheCtx -e -falloffType 1 `currentCtx`; ");
		menuItem -rp "S" -l (uiRes("m_sculptMeshCacheOptionsPopup.kFalloffVolume"))
	 		-c ("sculptMeshCacheCtx -e -falloffType 2 `currentCtx`; ");

	setParent -m ..;

	menuItem -rp "W" -l (uiRes("m_sculptMeshCacheOptionsPopup.kSteadyStroke"))
		-checkBox $uss 
 		-c ("sculptMeshCacheCtx -e -useSteadyStroke " + !$uss + " `currentCtx`; ");
	
	menuItem -rp "NW" -l (uiRes("m_sculptMeshCacheOptionsPopup.kMirror")) -subMenu 1;
		
		menuItem -rp "NW" -l (uiRes("m_sculptMeshCacheOptionsPopup.kObjectX"))
 			-c ("sculptMeshCacheCtx -e -mirror 4 `currentCtx`; ");
		menuItem -rp "N" -l (uiRes("m_sculptMeshCacheOptionsPopup.kObjectY"))
 			-c ("sculptMeshCacheCtx -e -mirror 5 `currentCtx`; ");
		menuItem -rp "NE" -l (uiRes("m_sculptMeshCacheOptionsPopup.kObjectZ"))
 			-c ("sculptMeshCacheCtx -e -mirror 6 `currentCtx`; ");
		menuItem -rp "E" -l (uiRes("m_sculptMeshCacheOptionsPopup.kWorldX"))
 			-c ("sculptMeshCacheCtx -e -mirror 1 `currentCtx`; ");
		menuItem -rp "SE" -l (uiRes("m_sculptMeshCacheOptionsPopup.kWorldY"))
 			-c ("sculptMeshCacheCtx -e -mirror 2 `currentCtx`; ");
		menuItem -rp "S" -l (uiRes("m_sculptMeshCacheOptionsPopup.kWorldZ"))
 			-c ("sculptMeshCacheCtx -e -mirror 3 `currentCtx`; ");
		menuItem -rp "W" -l (uiRes("m_sculptMeshCacheOptionsPopup.kMirrorOff"))
 			-c ("sculptMeshCacheCtx -e -mirror 0 `currentCtx`; ");

	setParent -m ..;

}
