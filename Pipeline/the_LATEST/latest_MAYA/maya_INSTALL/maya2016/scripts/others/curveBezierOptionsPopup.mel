// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

global proc curveBezierOptionsPopup()
{
	menuItem
		-label (uiRes("m_curveBezierOptionsPopup.kBezierCurveToolSettings"))
		-c "toolPropertyWindow;"
		-radialPosition "N"
		;

	string $ctx = `currentCtx`;
	int $isNormal = (`curveBezierCtx -q -slm $ctx` == "normal");
	int $isWeighted = (`curveBezierCtx -q -slm $ctx` == "weighted");
	int $isTangent = (`curveBezierCtx -q -slm $ctx` == "tangent");
	menuItem
		-label (uiRes("m_curveBezierOptionsPopup.kCreateBezierCurveToolNormalSelect"))
		-c ("curveBezierCtx -e -slm \"normal\" " + $ctx + ";")
		-cb $isNormal
		-radialPosition "NE"
		;
	menuItem
		-label (uiRes("m_curveBezierOptionsPopup.kCreateBezierCurveToolWeightedSelect"))
		-c ("curveBezierCtx -e -slm \"weighted\" " + $ctx + ";")
		-cb $isWeighted
		-radialPosition "E"
		;
	menuItem
		-label (uiRes("m_curveBezierOptionsPopup.kCreateBezierCurveToolTangentSelect"))
		-c ("curveBezierCtx -e -slm \"tangent\" " + $ctx + ";")
		-cb $isTangent
		-radialPosition "SE"
		;

	int $isTrans = (`curveBezierCtx -q -mm $ctx` == "translate");
	int $isScale = (`curveBezierCtx -q -mm $ctx` == "scale");
	menuItem
		-label (uiRes("m_curveBezierOptionsPopup.kCreateBezierCurveToolTransManip"))
		-c ("curveBezierCtx -e -mm \"translate\" " + $ctx + ";")
		-cb $isTrans
		-radialPosition "NW"
		;
	menuItem
		-label (uiRes("m_curveBezierOptionsPopup.kCreateBezierCurveToolScaleManip"))
		-c ("curveBezierCtx -e -mm \"scale\" " + $ctx + ";")
		-cb $isScale
		-radialPosition "W"
		;
}

