// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//
//  Creation Date:  2001 
//
//<doc>
//<name applyAttrPreset>
//
//<synopsis>
//		applyAttrPreset node presetName blend
//
//<returns>
//		None.	
//
//<description>
//		Applies the specified preset to the node using the blend amount.
//
//<flags>
//	None.
//
//<examples>
//	// replace settings for nurbsSphere1 with tformPreset2 settings
//  applyAttrPreset nurbSphere1 tformPreset2 1;
//	// blend in 50% the settings of tformPreset2 into nurbsSphere1 
//  applyAttrPreset nurbSphere1 tformPreset2 0.5;
//
//</doc>


global string $gAEAttrPresetCurrentTarget = "";
global float  $gAEAttrPresetBlend = 1;

global proc applyAttrPreset( string $node, string $presetName, float $blend )
{
	global string $gAEAttrPresetCurrentTarget;
	global float  $gAEAttrPresetBlend;
	string $ntype = `nodeType $node`;
	string $ppath = `internalVar -userPrefDir`;
	if( size( match( ".mel", $presetName ) ) > 0){
		// assume a full path passed in if mel extension(factory presets)
		$ppath = $presetName;
	} else {
		$ppath = substitute( "prefs", $ppath, "presets/attrPresets");
		$ppath  = $ppath + $ntype + "/" + $presetName + ".mel";
	}
	if( `file -q -ex $ppath` ){
		$gAEAttrPresetCurrentTarget = $node;
		$gAEAttrPresetBlend = $blend;
		eval ( "source \"" + $ppath + "\"" );
		
		// update the attribute editor Notes area explicitly
		//
		updateAENotes( $node, "notes" );
	} else {
		string $msgFormat = (uiRes("m_applyAttrPreset.kNoPresetForNode"));
		warning( `format -s $presetName -s $ntype $msgFormat` );
	}
}

