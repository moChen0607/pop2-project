// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  Nov, 2014
//
//	Procedure Name:
//		doAttachCacheArgList
//
//	Description:
//		Attach a cache file from disk and connect it to an object. 
//		This script is used to call either importFluidCacheFile or 
//		importCacheFile depending on the selected object type.
//
//	Input Arguments:
//	$version: The version of this option box.  Used to know how to 
//	interpret the $args array.
//  
//	$args
//	Version 1
//   - none
//
	
source doImportFluidCacheArgList.mel;
source doImportCacheArgList.mel;
	

global proc doAttachCacheArgList( int $version, string $args[] )
{
	// See if we have selected fluid objects. 
	string $fluSel[] = `getFluidObjectsToCache 0`; // Don't error out if there is no fluid object selected.
	string $geoSel[] = `getGeometriesToCache`;
	string $geoOnlySel[] = stringArrayRemove($fluSel, $geoSel);

	// If there is fluid object, let's only import fluid cache.
	if ((size($fluSel) > 0) && (size($geoOnlySel) == 0)){
		doImportFluidCacheArgList(0, {});
		return;
	}

	if ((size($geoOnlySel) > 0) && (size($fluSel) == 0)){
		doImportCacheArgList(0, {});
		return;
	}

	error((uiRes("m_doAttachCacheArgList.kNoFluidGeometrySelected")));
}
