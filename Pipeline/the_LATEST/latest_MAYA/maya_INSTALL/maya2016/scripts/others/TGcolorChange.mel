// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

// 
// If any of the segmentation properties change we need to 
// update the shader assignment. 
//
source "createTextureToGeom.mel";

global proc TGcolorChangeAttr( string $attr ) 
{
	string $tokenAry[]; 
	tokenize( $attr, ".", $tokenAry ); 
	TGcolorChange( $tokenAry[0] ); 
}

global proc TGcolorChange( string $nodeName )
//
// Description: 
//  If the user changes any of the parameters that will result in a new 
//  segmentation of the image then we must reassign the shaders. 
//  
{
	string $mesh[] = `listConnections -shapes true -type "mesh" ($nodeName + ".message")`;
	if ( size($mesh) > 0 ) { 
		string $if = `getAttr ($nodeName + ".imageFile")`;
		if ( !`filetest -r $if` ) {
			string $msg = (uiRes("m_TGcolorChange.kFileDoesNotExist"));
			error(`format -stringArg $if $msg`);
		}
		
		// Extract the new basename (if it has changed). 
		//
		$baseName = basenameEx( $if );
		
		// Assign new group ids. 
		//
		assignGroupIds( $baseName, $nodeName, $mesh[0] ); 

		if ( objExists ($nodeName + ".shaderAssignment") ) { 
			// Do the actual shader assignment. 
			//
			string $shading = `getAttr ($nodeName + ".shaderAssignment")`; 
			textureToGeomApplyColor( $nodeName, $if, $mesh[0], $shading );
		}
	}
}
