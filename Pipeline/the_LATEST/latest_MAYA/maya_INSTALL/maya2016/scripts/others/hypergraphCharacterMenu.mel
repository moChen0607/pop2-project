// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//
//


//
//  Create context sensitive Hypergraph menu for clip nodes
//  This is displayed with RMB on clip nodes
//
proc createCharacterMenuItems( string $editor, string $menu )
{
	setParent -m $menu;
	
	menuItem CharacterMenuTitleItem;
	menuItem -divider true;	
	menuItem -divider true;
	menuItem -l "Attribute Editor..." CharacterAttrEditorItem;
	menuItem -l "Rename" CharacterRenameItem;
}

//
// Define context sensitive Hypergraph menu for shader nodes
//
proc defineCharacterMenuCommands(string $editor, string $menu, string $node)
{
	// The visor uses a hyper graph panel, so the only way to tell
	// that we are in the visor is by the name
	//
	int $isVisor = gmatch( $editor, "*VisorEd" );

	menuItem -edit
		-l ("Character: " + $node)
		CharacterMenuTitleItem;
	menuItem -edit -c 
		("hyperGraph -e -rename -useFeedbackList " + $editor) 
		CharacterRenameItem;
	menuItem -edit -c 
		("hyperGraph -e -attributeEditor single -useFeedbackList " + $editor)
		CharacterAttrEditorItem;
}

global proc hypergraphCharacterMenu(string $editor, string $menu, string $node)
{
	createCharacterMenuItems($editor, $menu);
	defineCharacterMenuCommands($editor, $menu, $node);
}
