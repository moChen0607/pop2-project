// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//<doc>
//<name endString>
//<owner "Unsupported">
//
//<synopsis>
//		string endString(string $s, int $count)
//
//<returns>
//		string : last $count characters of $s
//
//<description>
//		This procedure returns the last $count characters of the string $s.
//		If $count is zero or negative, then an empty string is returned.
//		If $count is greater than or equal to the number of characters in $s,
//		then the entire string is returned.
//
//<examples>
//		endString("abc", 1);
//		// Result: c //
//
//		endString("abc", 8);
//		// Result: abc //
//
//		endString("abc", 0);
//		endString("", 3);
//
//<related startString startsWith endsWith>
//
//</doc>

global proc string endString(string $s, int $count)
{
	string $out;

	int $sLength = size($s);
	if (($count > 0) && ($sLength > 0))
	{
		if ($count > $sLength)
		{
			$count = $sLength;
		}

		$out = substring($s, $sLength - $count + 1, $sLength);
	}

	return $out;
}
