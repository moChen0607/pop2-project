// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//  Creation Date:  August 13, 2003
//
//  Procedure Name:
//      lookThroughModelPanelSetup
//
//  Description:
//		Procedure used by lookThroughModelPanel and lookThroughModelPanelClipped to setup state
//
//  Input Arguments:
//      panelName - name of the panel to look though object in
//
//  Return Value:
//      The panel displaying the view.
//

global proc string lookThroughModelPanelSetup( string $panelName )
{
	string $ret = $panelName;

    if (`getPanel -typeOf $panelName` != "modelPanel") {
        string $invisibles[] = `getPanel -invisiblePanels`;

		int $success = 0;
 
        for ($item in $invisibles) {
            if (`getPanel -typeOf $item` == "modelPanel") {
                modelPanel -e -replacePanel $panelName $item;
				$ret = $item;
				$success = 1;
                break;
            }
        }

		// if we were not able to find an unused model panel
		// to swap into place, then we must create a new one.
		//
		if ( $success == 0 ){
			int $showMenubar = `optionVar -q allowMenusInPanels`;
			string $pname = `modelPanel -unParent -mbv $showMenubar`;
			modelPanel -e -replacePanel $panelName -label `interToUI $pname` $pname;
			$ret = $pname;
		}
    }
		
	return $ret;
}
