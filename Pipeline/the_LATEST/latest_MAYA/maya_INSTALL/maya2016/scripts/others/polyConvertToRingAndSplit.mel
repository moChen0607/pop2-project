// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//  Procedure Name:
//      polyConvertToRingAndSplit
//
//  Description:
//      This procedure selects the ring for a selected edge
//      and then splits the ring.
//
//  Input Arguments:
//      None.
//
//  Return Value:
//      None.

global proc polyConvertToRingAndSplit()
{
	// get the input edges 
	getEdges();
	
	// Flatten to make sure the later size() call handles full vtx selection.
	string $edges[] = `ls -sl -fl`;

	// split the ring if a poly edge is selected
	if (size($edges) > 0) {
		// also, make sure the selection is only 1 edge so the resulting
		// split ring looks as expected
		
		if (`size $edges` > 1){
			warning (uiRes("m_polyConvertToRingAndSplit.kMultipleEdgeSelected"));
			
			// convert to a single ring
			select -r $edges[0];
		}
		
		string $buffer[];
		int $numTokens;
		$numTokens = `tokenize $edges[0] "[]" $buffer`;

		string $cmd;
		$cmd = "polySelect -edgeRing ";
		$cmd += $buffer[1];
		eval($cmd);

		$cmd = "polySplitRing -rootEdge ";
		$cmd += $buffer[1];
		$cmd += " -splitType 1 -weight 0.5";

		eval($cmd);
	} else {
		warning (uiRes("m_polyConvertToRingAndSplit.kConverToRingSelectAnEdge"));
	}
}

