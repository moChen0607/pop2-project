// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

// First creation of the assembly namespace widgets in the attribute editor.
global proc AEassemblyNamespaceNew(string $attrName)
{
  rowLayout -numberOfColumns 1 -columnAttach 1 "left" 0 -adjustableColumn 1;
  textFieldGrp -label (uiRes("m_AEassemblyNamespaceUtil.kAEassemblyNamespace"))
    assemblyNamespaceValue;
  iconTextButton -i1 "namespaceEditor.png" -ann (uiRes("m_AEassemblyNamespaceUtil.kAEOpenNSEditor")) -parent assemblyNamespaceValue
    assemblyNamespaceEditor;
  setParent ..;
    
  AEassemblyNamespaceReplace($attrName);
}

// Update and replace the assembly namespace. 
global proc AEassemblyNamespaceReplace(string $attrName)
{
  string $nodeName = `plugNode $attrName`;
  int $editable = !`getAttr -lock $attrName`;
  
  // #1 is the syntax to obtain the value of the control at the time
  // the command is issued (avoids querying the control).
  textFieldGrp -edit -text `getAttr $attrName` -changeCommand
    ("AEassemblyChangeAttrNamespace \""  + $attrName + "\"" + "\"#1\"")
    -editable $editable
    assemblyNamespaceValue;
  iconTextButton -edit -command "AEassemblyShowNamespaceEditor"
    assemblyNamespaceEditor;
}

// Change the namespace attribute value.
global proc AEassemblyChangeAttrNamespace(string $attrName, string $namespace)
{
	// check if the new name has illegal characters
	// if so, show an error and reset the UI
	if( !isValidString($namespace, "([a-zA-Z]+)([a-zA-Z0-9_])*") )
	{
		textFieldGrp -edit -text `getAttr $attrName` assemblyNamespaceValue;
		string $errorMsg = (uiRes("m_AEassemblyNamespaceUtil.kInvalidNamespace"));	
		error(`format -s $namespace $errorMsg`);
	}
    else
    {
      	// Set the new namespace.
	    setAttr $attrName -type "string" $namespace;              	
	    
	    // re-select the assembly node to stay in the attribute editor.
	    select -r `plugNode $attrName`;
	}
}

// Show namespace editor.
global proc AEassemblyShowNamespaceEditor()
{
  if (!`window -exists namespaceEditor`) {
    namespaceEditor;
  }      
}
