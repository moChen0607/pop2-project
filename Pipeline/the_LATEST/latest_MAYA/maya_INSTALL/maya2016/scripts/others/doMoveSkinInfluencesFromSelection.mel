// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

// 
//  Procedure Name:
//      doMoveSkinInfluencesFromSelection()
//
//  Description:
//    This procedure is used to move weights to the selected transforms
//
//  Arguments:
//    None
//
global proc doMoveSkinInfluencesFromSelection()
{
	// From the current selection identify the cluster deformers and potential influence transforms
	// It is assumed that the curent selection includes the individual vertices in which we want to apply the
	// weight redistribution

	string $potentialInfluences[] = `ls -selection -transforms`;
	if (size($potentialInfluences) == 0)
		error((uiRes("m_doMoveSkinInfluencesFromSelection.kInsufficientTransformsSelected")));

	string $influences[];
	string $clusters[];

	for( $transform in $potentialInfluences )
	{
		string $potentialClusters[] = `listConnections -s false -d true -type skinCluster $transform`;
		if( size( $potentialClusters ) == 0 )
			continue;

		$influences[size($influences)] = $transform;

		// Walk the list of potential clusters and append it to the $clusters set
		for( $newCluster in $potentialClusters )
			if ( stringArrayFind($newCluster, 0, $clusters) == -1 )
				$clusters[size($clusters)] = $newCluster;
	}

	doMoveSkinInfluences( $clusters, $influences );
}
