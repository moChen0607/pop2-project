// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//
//
//
//
//	Creation Date:  July 22 1997
//
//  Procedure Name:
//      createPrimitive
//
//  Description:
//		Utility procedure used in the MODELLING->Primitives menu
//
//  Input Arguments:
//      Type of primitive to create
//
//  Return Value:
//      None.
//

global proc createPrimitive( string $operation )
{
	string $selected[];
	string $result[];

	switch( $operation )
	{
		// Nurb primitives
		//
		case "nurbSphere":
			sphere -ch on -o on -ax 0 1 0;
			break;
		case "nurbCircle":
			circle -ch on -o on;
			break;
		case "nurbCylinder":
			cylinder -ch on -o on -ax 0 1 0;
			break;
		case "nurbCone":
			cone -ch on -o on -ax 0 1 0;
			break;
		case "nurbCube":
			nurbsCube -ch on -o on -ax 0 1 0;
			break;
		case "nurbPlane":
			nurbsPlane -ch on -o on -ax 0 1 0;
			break;
		case "nullObject":
			evalEcho "spaceLocator -p 0 0 0";
			break;
		case "constrPlane":
			plane -r 0 90 0;
			break;
		case "text":
			performtextCurves 0;
			break;

	}
}
