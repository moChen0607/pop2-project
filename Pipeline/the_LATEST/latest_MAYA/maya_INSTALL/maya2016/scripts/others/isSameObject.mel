// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//	Creation Date:	June 13, 2003
//
//<doc>
//<name isSameObject>
//
//<synopsis>
//		int isSameObject(string $objectA, string $objectB)
//
//<returns>
//		int : True if $objectA and $objectB are the same object.
//
//<description>
//		This procedure returns true if $objectA and $objectB exist, are
//		unique, and are the same object.
//
//<examples>
//		//	Create a NURBS sphere.
//		//
//		string $createdNodes[] = `sphere -constructionHistory false`;
//		string $sphere = $createdNodes[0];
//
//		isSameObject($sphere, longNameOf($sphere));
//		//	Result: 1 //
//
//		isSameObject($sphere, "foo");
//		//	Result: 0 //
//
//</doc>

global proc int isSameObject(string $objectA, string $objectB)
{
	int $isSameObject = false;

	//	Make sure that we've been provided with two objects that exist.
	//
	if (($objectA != "") && objExists($objectA) &&
		($objectB != "") && objExists($objectB))
	{
		//	Retrieve the long-names. If a long-name is blank, that means
		//	that the object-name we've been given is not unique.
		//
		string $longObjectA = longNameOf($objectA);
		string $longObjectB = longNameOf($objectB);

		if (($longObjectA != "") && ($longObjectB != ""))
		{
			if ($longObjectA == $longObjectB)
			{
				$isSameObject = true;
			}
		}
	}

	return $isSameObject;
}

//	=== END OF FILE isSameObject.mel =========================================
