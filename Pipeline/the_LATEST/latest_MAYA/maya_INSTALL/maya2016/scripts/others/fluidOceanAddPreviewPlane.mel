// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
// Creation Date:  May 2002
//
//
global proc fluidOceanAddPreviewPlane()
{
	if( !fluidEditLicenseFound() ) {
		error(uiRes("m_create2DFluid.kNoFluidLicense"));
		return;
	}

	string $oceanShader = getCurrentOcean();
	if( $oceanShader != "" ){
		string $hf = `shadingNode -asUtility -n oceanPreviewPlane1 heightField`;
		string $hfTform[] = `listRelatives -p $hf`;
		scale 2 1.0 2 $hfTform[0];
		setAttr -l true ($hfTform[0] + ".scaleY");
		setAttr -l true ($hfTform[0] + ".translateY");
		setAttr -l true ($hfTform[0] + ".rotateX");
		setAttr -l true ($hfTform[0] + ".rotateY");
		setAttr -l true ($hfTform[0] + ".rotateZ");
		setAttr ($hf + ".resolution") 10;
		setAttr ($hf + ".color") -type double3 0.2 0.5 0.5;
		connectAttr ($oceanShader + ".displacement") ($hf + ".displacement");
		connectAttr ($oceanShader + ".outColor") ($hf + ".color");
		string $helpString = ("This node is used to preview the ocean's surface. "
				+"It does not appear in renders."
				+"Translate and scale it to preview "
				+"different parts of the ocean.\n" 
				+"One may increase the resolution to better judge the fine details "
				+"on the surface, or lower it to provide faster playback performance.\n");
		addAttr -sn nts -ln notes -dt "string" $hf;
		setAttr -type "string" ($hf + ".notes") $helpString;
	}
}

