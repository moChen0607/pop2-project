// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  14 Jan 2003
//
//  Procedure Name:
//      polyChamferVtx
//
//  Description:
//      Chamfer vertices, using the extrude vertex command.
//         
//  Input Arguments:
//		int		$doHistory		Create history or not
//      float	$width			Width of the chamfer
//		int		$deleteFace		Should corner be removed
//
//  Return Value:
//        The name of the node created, if history is on.
//

global proc string polyChamferVtx(int $doHistory, float $width, int $deleteFace) 
{
	string $cmd = "polyExtrudeVertex -ch " + $doHistory + " ";
	$cmd += "-divisions 1 -width " + $width + ";";
	string $newNode = "";
	string $result[] = eval($cmd);
	if (size($result) > 0) {
		setAttr -lock on ($result[0]+".divisions");
		setAttr -lock on ($result[0]+".length");
		$newNode = `rename $result[0] "polyChamfer#"`;
	}
	if (1 == $deleteFace) {
		getFaces; 
		delete;
	} else {
		DeleteVertex;
	}
	return $newNode;
}


