// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  Jul 2, 1998
//<doc>
//<name tokenizeList>
//
//<synopsis>
//		int tokenizeList( string $list, string $tokenizedList[] )
//
//<description>
//		Takes a string $list representing a list of items.  The 
//		items can be either whitespace- or comma-separated.
//		The individual items in the list are returned as elements
//		of the result array, stored in $tokenizedList.  
//
//<flags>
//		string $list The string of values to tokenize.  Separated by
//		either whitespace or commas.  
//		string[]	$tokenizedList	The items in $list, after tokenization
//
//<examples>
//  string $list = "1 6 7, 54";
//  string $tokenizedList[];
//  tokenizeList($list, $tokenizedList);
//  // Result : 1 //
//  print $tokenizedList;
// // 1
// // 6
// // 7
// // 54
//<returns>
//		int : 1 if successful, 0 if unsuccessful
//
//</doc>
//
global proc int tokenizeList( string $list, string $tokenizedList[] )
{
	string $regExpr  		= ",";
	string $replaceWith 	= " ";
	string $substitutedList = "";
	
	// Remove the commas, if any, and replace them with spaces
	//
	while( $substitutedList != $list ) {
		// Do this only after the first time.
		//
		if( $substitutedList != "" ) {
			$list = $substitutedList;
		}

		$substitutedList = `substitute $regExpr $list $replaceWith`;
	}
	
	// Check if $llist is empty.
	//
	if( size( $list ) == 0 ) {
		return 0;
	}
	
	tokenize( $list, $tokenizedList );

	return 1;
}

