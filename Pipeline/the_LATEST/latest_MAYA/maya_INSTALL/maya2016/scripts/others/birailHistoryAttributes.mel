// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  Oct 9 1996
//
//  Description:
//		These procs create the controls for the history attributes produced 
//		by the Birail tool. These properties will be used in both the
//      Tool Property Sheet & the Object Attributes Sheet for Birail history.
//		See also attributeValues.mel for procs that set the state of the 
//		property sheet. (attributeValues.mel has not been done as yet)
//


global proc birailProfileBlendHistoryAttributes( string $parent, 
						string $numberProfiles, 
						string $firstName, 
						string $secondName )
{
	setParent $parent;

	string $profileTangentCheckBoxName = ("birailBlendingProfiles" + "_CheckBoxGrp");

	if( $numberProfiles == "singleProfile" ) {
		checkBoxGrp -ncb 1 -l (uiRes("m_birailHistoryAttributes.kEdgeBlending"))
			-l1 $firstName $profileTangentCheckBoxName;
	} else {
		checkBoxGrp -ncb 2 -l (uiRes("m_birailHistoryAttributes.kEdgeBlending"))
			-l1 $firstName
			-l2 $secondName
			$profileTangentCheckBoxName;
	}
}

global proc birailHistoryAttributes( string $parent, 
				string $node, 
				string $numberProfiles )
{
	setParent $parent;
	frameLayout -collapsable true -collapse false
		-l "Birail History" birailHistory_Frame;
		columnLayout birailHistory_Column;
			// transform control button on the generation
			// curves.
			//
			radioButtonGrp -nrb 2 -select 1
           		 -l (uiRes("m_birailHistoryAttributes.kTransformControl"))
           		 -l1 (uiRes("m_birailHistoryAttributes.kNonProportional")) -da1 0
           		 -l2 (uiRes("m_birailHistoryAttributes.kProportional")) -da2 1
            		transformControl;

			if ($numberProfiles == "twoProfiles" ) {
              	 floatSliderGrp -field true -l "Surface Blend" dpBirailBlend;
            }
			// blend control for profiles.
			//
			frameLayout -l "Profile Curves" -borderVisible true -collapse false 
					-labelIndent 20 birailProfileCurves_Frame;
				columnLayout  birailProfileCurves_Column;

					birailProfileBlendHistoryAttributes(`setParent -query`, 
								$numberProfiles, "First Edge", "Second Edge" );

				setParent ..;
			setParent ..;

			// blend control for rails.
			//
			//frameLayout -l "Rail Curves" -borderVisible false -collapse false 
			//		-labelIndent 20 birailRailCurves_Frame;
			//	columnLayout  birailRailCurves_Column;

			//		checkBoxGrp -ncb 2 -l "Edge Blending" 
			//			-l1 "First Edge" 
			//			-l2 "Second Edge"
			//			birailTangentRails_checkBoxGrp ;
			//	setParent ..;
			//setParent ..;


			//commonToleranceProperties (`setParent -q`, $node,  
			//		"dontShowPositionalTolerance",
			//		"showTangentTolerance", 
			//		"dontShowCurvatureTolerance");

		setParent ..;
	setParent ..;
}
