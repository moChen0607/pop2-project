// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

global proc isNConstraint(){
	
	global string $nConstraintMembershipConstraint;
	
	string $objects[] = `ls -sl`;
	if (!`size $objects`)
		error( (uiRes("m_nConstraintMembershipTool.kNothingSelected")) );
	string $children[] = `listRelatives -s -type "dynamicConstraint" $objects[0]`;
	
	$nConstraintMembershipConstraint = $children[0];
	
}

proc nConstraintMembershipToolCtx(){

	 scriptCtx
		 -title (uiRes("m_nConstraintMembershipTool.kMembershipTool"))
		 //-image1 "polyPoke.png"
		 -totalSelectionSets 1
		 -ts "isNConstraint; dynamicConstraintMembership \"select\""
		 -fcs "global string $nConstraintMembershipConstraint; select -tgl $nConstraintMembershipConstraint; dynamicConstraintMembership \"replace\"; select -replace $nConstraintMembershipConstraint"
		 //-cumulativeLists true
		 -expandSelectionList true
		 -setNoSelectionPrompt (uiRes("m_nConstraintMembershipTool.kSetNoSelectionPrompt"))
		 -setSelectionPrompt (uiRes("m_nConstraintMembershipTool.kSetSelectionPrompt"))
		 //-setDoneSelectionPrompt "Press enter to finish editing constraint membership."
		 -setAutoToggleSelection false
		 -setSelectionCount 0
		 -setAutoComplete false
		 -polymeshVertex true
		 -polymeshEdge true
		 -polymeshFace true
		 -exitUponCompletion true
		 -toolCursorType "edit"
		 nConstraintMembershipTool;

}


global proc nConstraintMembershipTool(){

	if (!`contextInfo -exists nConstraintMembershipTool`)
		{nConstraintMembershipToolCtx;}
	setToolTo nConstraintMembershipTool;

}
