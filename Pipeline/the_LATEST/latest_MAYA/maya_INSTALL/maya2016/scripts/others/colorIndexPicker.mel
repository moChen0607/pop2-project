// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.


//
//  Description:
//		This script provides a color picker that allows users to set 
//  indexed colors on a particular plug
//
//

global proc colorIndexPickerOkPressed(string $plugToSet,string $window, string $control, int $plugValueOffset )
{    
    int $newColor = `colorIndexSliderGrp -q -value $control`-$plugValueOffset;
    setAttr $plugToSet $newColor;
    deleteUI -window $window;
    
    global string $gPlayBackSlider;
	timeControl -edit -forceRefresh $gPlayBackSlider;    
}

global proc colorIndexPickerCancelPressed(string $window)
{        
    deleteUI -window $window;    
}

global proc colorIndexPicker( string $plugToSet, int $firstColorIndex, int $lastColorIndex, int $plugValueOffset, string $title, string $postCmd )
{
    global string $gColorPickerWindow;
    
    if( $title == "" )
    {
		$title = (uiRes("m_colorIndexPicker.kColorIndexPickerTitle"));
	}
		
    $gColorPickerWindow = `window -title $title -width 450 -height 90`;
    string $layout = `formLayout`;

    int $currColorIndex = `getAttr $plugToSet`+$plugValueOffset;
    
    string $control = `colorIndexSliderGrp -label (uiRes("m_colorIndexPicker.kColorIndexPickerSelectColor")) -min $firstColorIndex -max $lastColorIndex -value $currColorIndex` ;
    string $okButton = `button -label (uiRes("m_colorIndexPicker.kColorIndexPickerOk")) 
                        -command ("colorIndexPickerOkPressed"+" "+$plugToSet+" "+$gColorPickerWindow+" "+$control+" "+ $plugValueOffset+";"+$postCmd ) 
                        -w 60 -h 20`;
    string $cancelButton = `button -label (uiRes("m_colorIndexPicker.kColorIndexPickerCancel")) -command ("colorIndexPickerCancelPressed" + " " + $gColorPickerWindow) -w 60 -h 20`;

    formLayout -e        
			    -attachForm  $control "top" 2
			    -attachForm  $control "left" 2
			    -attachNone  $control "bottom"
			    -attachNone  $control "right"
			    
			    -attachNone  $okButton "top"
			    -attachNone  $okButton "left" 
			    -attachForm  $okButton "bottom" 2
			    -attachForm  $okButton "right"  122
			    
			    -attachNone  $cancelButton "top"
			    -attachNone  $cancelButton "left" 
			    -attachForm  $cancelButton "bottom" 2
			    -attachForm  $cancelButton "right"  40
			    
		    $layout;

    showWindow $gColorPickerWindow;
}
