// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
// Creation Date:  November, 1999
//
//
//  Procedure Name:
//      blendGraphEdit
//
//  Description:
//              Creates a graph editor for the given blend curve.
//
//
//  Input Arguments:
//      $blendName  - The name of the curve to show in the editor.
//      $updateOnly - Whether or not the editor should only update
//                    its selection if the editor already exists.
//
//  Return Value:
//      None.
//

global proc blendGraphEdit(string $blendName, int $updateOnly)
{
	string $win   = ($blendName + "GraphWindow");
	string $form  = ($blendName + "GraphForm");
    string $ed    = ($blendName + "GraphEditor");
    string $conn  = ($blendName + "FromClipEditor");
	string $title = ("Blend: "  + $blendName);
	
	// If this window already exists, just show it.  Otherwise,
	// return if a window should not be created.
	if (`window -exists $win`) {
	    if ($updateOnly)
			selectionConnection -e -select $blendName $conn;
		else
	        showWindow $win;
	    return;
	}
	else if ($updateOnly)
	    return;
		
	// Create a selection connection which is used to pass the curve
	// to the graph editor.
    if (!`selectionConnection -exists $conn`)
	    selectionConnection $conn;
		
	// Create a graph editor inside a form.
    window -title $title $win;
	formLayout $form;
	animCurveEditor -mainListConnection $conn $ed;
	formLayout -edit
	    -attachForm $ed "left" 0
	    -attachForm $ed "right" 0
	    -attachForm $ed "bottom" 0
	    -attachForm $ed "top" 0
		$form;
	showWindow $win;
	
	// Give the blend curve to the editor via the selection connection.
	selectionConnection -e -select $blendName $conn;
}
