// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//  Description:
//      This script is called from layerEditor.mel when the user
//		selects any of the menuItems from Set All Layers, Set
//		Selected Layers or Set Only Selected Layers. These items
//		change the value of the specified attribute.
//
//	Arguments:
//		string $layers: layers to process "all", "selected" or "onlySelected"
//		string $attr: attribute to change eg. ".visibility"
//		int $value: attribute's new value

global proc setLayerTo( string $layers, string $attr, int $value){

	string $selectedLayers[];
	string $allDisplayLayers[] = `layout -query -childArray LayerEditorDisplayLayerLayout`;
	string $layersToChange[];
	if ($layers == "selected" || $layers == "onlySelected"){
		//	For each layer button check to see if it is selected.
		//
		int $index = 0;
		for ($thisLayer in $allDisplayLayers) {
			if (`layerButton -query -select $thisLayer`) {
				$selectedLayers[$index] = $thisLayer;
				if($attr == ".visibility") {
					setDisplayLayerVisibility($thisLayer, $value);
				}
                else if($attr == ".hideOnPlayback")
                {
                    setDisplayLayerHideOnPlayback($thisLayer, $value);
                }
				else {
					eval("setAttr " + $thisLayer + $attr + " " + $value + ";");
				}
				$index ++;
			}
		}
		$layersToChange = stringArrayRemove($selectedLayers, $allDisplayLayers);
	}else{
		//  Change every layer
		for ($thisLayer in $allDisplayLayers) {
			if($attr == ".visibility") {
				setDisplayLayerVisibility($thisLayer, $value);
			}
            else if($attr == ".hideOnPlayback")
            {
                setDisplayLayerHideOnPlayback($thisLayer, $value);
            }            
			else {
				eval("setAttr " + $thisLayer + $attr + " " + $value + ";");
			}
		}
	}

	if ($layers == "onlySelected"){
		//  Change status of unselected layers
		$value = !$value;
		for ( $thisLayer in $layersToChange ){
			if($attr == ".visibility") {
				setDisplayLayerVisibility($thisLayer, $value);
			}
			else {
				eval("setAttr " + $thisLayer + $attr + " " + $value + ";");
			}
		}
	}
}