// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.


//
//  Description:
//      This script creates menu items to add objects to bakeSets.
//


global proc string createBakeSet (string $name, string $type)
{
	string $selectionList[] = `ls -selection`;

	// Create the bakeSet node.
	//
	string $bakeSetName = `createNode -n $name $type`;

	// Add the new bakeSet to the appropriate partition.
	//
	if( $type == "vertexBakeSet" )
	{
		if( size(`ls vertexBakePartition`) < 1 )
		{
			partition -n "vertexBakePartition" $bakeSetName;
		}
		else
		{
			partition -add "vertexBakePartition" $bakeSetName;
		}

        // Add two dynamic attributes to the vertexBakeSet node.
        //
        addAttr -ln filterSize -sn fs -min -1 $bakeSetName;
        setAttr ($bakeSetName+".filterSize") 0.001;
        addAttr -ln filterNormalTolerance -sn fns 
            -min 0 -max 180 $bakeSetName;
        setAttr ($bakeSetName+".filterNormalTolerance") 5; 
	}
	else
	{
		if( size(`ls textureBakePartition`) < 1 )
		{
			partition -n "textureBakePartition" $bakeSetName;
		}
		else
		{
	   		partition -add "textureBakePartition" $bakeSetName;
		}
	}

	// Restore the selection list.
	select -r $selectionList;

	return $bakeSetName;
}


