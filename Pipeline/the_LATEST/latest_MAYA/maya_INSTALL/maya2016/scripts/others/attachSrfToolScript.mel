// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
// Creation Date:  5 January 1999
//
//
//  Procedure Name:
//      alignCurvesToolScript
//
//  Description:
//	create wrapper around the alignCurve command
//
//  Input Arguments:
//      what is going to happen when this script is called
//		$setToTool = 0 ==> do the command
//		$setToTool = 1 ==> show option box
//		$setToTool = 2 ==> return the command
//		$setToTool = 3 ==> show tool option box
//		$setToTool = 4 ==> enter the tool
//
//  Return Value:
//      None.
//

global proc attachSrfToolSetup( int $forceFactorySettings, string $goToTool )
{
	global int $gStartWithAutoComplete;
	if( $forceFactorySettings || !`optionVar -ex attachSurfaceEuc` ) {
		optionVar -iv attachSurfaceEuc 0;
	}
	if( $forceFactorySettings || !`optionVar -ex attachSurfaceLac` ) {
		optionVar -iv attachSurfaceLac $gStartWithAutoComplete;
	}
	if( "" != $goToTool ) {
		scriptCtx -e -euc `optionVar -q attachSurfaceEuc` $goToTool;
		scriptCtx -e -lac `optionVar -q attachSurfaceLac` $goToTool;
	}
}

global proc attachSurfaceValues ( string $toolName ) 
{
	performAttachSrf 3 $toolName;
	scriptCtxCommonValues( $toolName );
}

global proc attachSurfaceProperties()
{
	scriptCtxCommonProperties;
}

proc createAttachSrfContext ( string $tool )
{
	if( ! `scriptCtx -exists $tool` ) {
		attachSrfToolSetup( 0, "" );
		scriptCtx
			-i1 "align.png"
			-bcn "attachSurface"

			-title (uiRes("m_attachSrfToolScript.kAttachSurfacesTool"))
			-totalSelectionSets 1
			-expandSelectionList true
			-fcs ("attachSrfToolScript 0")

			-setNoSelectionPrompt ((uiRes("m_attachSrfToolScript.kSelectTwoSurfaces")))
			-setSelectionPrompt ((uiRes("m_attachSrfToolScript.kSelectSecondSurface")))
			-setDoneSelectionPrompt ((uiRes("m_attachSrfToolScript.kPressEnterToComplete")))

			-setAutoToggleSelection true
			-showManipulators true
			-nurbsSurface true
			-isoparm true
   			-surfaceEdge true
   			-polymeshEdge true

			-setAutoComplete `optionVar -q attachSurfaceLac`
			-setSelectionCount 2

			// If this was true, the tool would exit
			// once the attach has been completed
			-exitUponCompletion `optionVar -q attachSurfaceEuc`

		$tool;
	}
}

global proc string attachSrfToolScript( int $setToTool )
//
//	Description :
//		$setToTool = 0 ==> do the command
//		$setToTool = 1 ==> show option box
//		$setToTool = 2 ==> return the command
//		$setToTool = 3 ==> show tool/action option box
//		$setToTool = 4 ==> enter the tool/do the action
{
	string $tool = "";
	if( $setToTool > 2 ) {
		if( !`optionVar -q modelWithToolAttachSurface` ) {
			$setToTool = 4 - $setToTool;
		}
		else {
			$tool = "attachSrfContext";
			createAttachSrfContext $tool;
		}
	}
	return scriptToolScript( "performAttachSrf", $setToTool, $tool );
}
