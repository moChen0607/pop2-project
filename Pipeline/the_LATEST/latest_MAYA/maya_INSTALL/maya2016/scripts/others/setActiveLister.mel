// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  24 Sept 1996
//
//  Description:
//      sets the active lister
//

//////////////////////////////////////////////////////////////////////
//
//  Procedure Name:
//      setActiveLister
//
//  Description:
// 		If the input lister is part of the multilister built by multilister.mel,
//		indicate within the multilister layout that the input is active.  The
//		active lister is the one that all of the menu options and buttons act on
//		
//  Input Arguments:
//		$listerLongName - the name of the lister.
//		$nameRoot - assumed to be a panelName.
//
//  Return Value:
//      None
//
global proc setActiveLister(string $listerLongName, string $nameRoot)
{
//	string $pieces[];
//	tokenize($listerLongName,"|",$pieces);

//	int $length = size ($pieces);

	if(`scriptedPanel -q -exists $nameRoot`) {
//	if(	$length > 3) {

		string $topControl = `scriptedPanel -q -control $nameRoot`;
		string $topControl = $topControl + "|" + $nameRoot;
		string $workArea = ($nameRoot + "WorkArea");

		string $multiListerPane 
			= $topControl + "|MultiListerForm|PaneWorkAreaMultiLister";
		
		string $otherPane = $multiListerPane + "|PaneTabsMultiLister";
		
		if($listerLongName != $workArea) {
			// must check the actual children of the widget, not the prefs.
			string $kids[];
			$kids = `tabLayout -q -childArray ($otherPane + "|MultiListerTabs")`;
			int $numKids = `size $kids`;
			int $i, $j, $numFormKids;
 			int $found = 0 ;
			string $form,$editor;
			string $formKids[];
			
			for ($i = 0; $i < $numKids; $i++) {
				$form = $kids[$i];
				$numFormKids = `formLayout -q -numberOfChildren $form`;
				if($numFormKids > 0) {
					$formKids = `formLayout -q -childArray $form`;
					$editor = $formKids[0];
					if($editor == $listerLongName) {
						$found = 1;
					}
 				}
			}

 			if($found == 1) {
 				paneLayout -e -activePaneIndex 4 $multiListerPane;
 				paneLayout -e -activePaneIndex 1 $otherPane;		
 			} else {
				$kids = `tabLayout -q -childArray ($otherPane + "|MultiListerTabs2")`;
				$numKids = `size $kids`;
			
				for ($i = 0; $i < $numKids; $i++) {
					$form = $kids[$i];
					$numFormKids = `formLayout -q -numberOfChildren $form`;
					if($numFormKids > 0) {
						$formKids = `formLayout -q -childArray $form`;
						$editor = $formKids[0];
						if($editor == $listerLongName) {
							$found = 1;
						}
					}
 				}
 				if($found == 1) {
 					paneLayout -e -activePaneIndex 4 $multiListerPane;
 					paneLayout -e -activePaneIndex 2 $otherPane;		
 				} else {
 					paneLayout -e -activePaneIndex 2 $multiListerPane;
 					paneLayout -e -activePaneIndex 4 $otherPane;		
 				}
			}

		} else {
			paneLayout -e -activePaneIndex 2 $multiListerPane;
			paneLayout -e -activePaneIndex 4 $otherPane;		
		}

		multiListerValues $topControl $nameRoot;

		string $cmd = "setFocus \"" + $topControl + "\"";

		eval $cmd;
	}
}
