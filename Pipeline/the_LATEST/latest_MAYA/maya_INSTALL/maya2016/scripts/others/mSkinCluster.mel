// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//
//
//
//
//	Creation Date:  3 Aug 1998
//
//  Procedure Name:
//      mSkinCluster
//
//  Description:
//     Executes the skinCluster command with the selected arguments
//     for multiple geometries.
//
//     Example:
//        Select a few of the already skinCluster-bound geometries and 
//        execute:
//   
//           mSkinCluster "-e -mi 6"    
//
//           OR
//  
//           mSkinCluster "-e -ai transform1"
// 
//
global proc string[] mSkinCluster(string $args)
{
	// Get the currenly selected objects
	//
	string $result[];

	string $sel[] = `ls -sl`;
	if (!size($sel)) {
		error( (uiRes("m_mSkinCluster.kSelectGeometries")));
		return $result;
	}

	int $i;
	string $cmd;
	string $item;
	string $res;
	int $execCount = 0;


	for($i=0;$i<size($sel);$i++)
	{	
		$item = $sel[$i];
		// Find all the DAG leaved under the selected transform
		//
		string $allShapes[] = `ls -lf -dag $item`;
		string $shape;
		for ($shape in $allShapes)
		{
			// Check if the object still exists
			//
			string $exists[] = `ls $shape`;
			if (size($exists) == 0)
				continue;

			// Ignore intermediate objects
			//
			int $io = `getAttr ($shape+".io")`;
			if ($io == 1)
				continue;
			
			$cmd = "skinCluster "+$args+" "+$shape;
			print($cmd+"\n");
			if (!catch($res = eval($cmd)))
				$result[$execCount++] = $res;
		}
	}
	return $result;
}
	
