// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

displayString -replace -value "       A hotbox region must be selected.       " m_menuEditorWnd.kAHotboxRegionMustBeSelected;
displayString -replace -value "       A mouse button must be selected.      " m_menuEditorWnd.kAMouseButtonMustBeSelected;
displayString -replace -value "Alert" m_menuEditorWnd.kAlert;
displayString -replace -value "Alert" m_menuEditorWnd.kAlertDlg;
displayString -replace -value "Alert" m_menuEditorWnd.kAlertDlgTitle;
displayString -replace -value "Alert" m_menuEditorWnd.kAlertTitle;
displayString -replace -value "Alert" m_menuEditorWnd.kAlertTitleString;
displayString -replace -value "Alert" m_menuEditorWnd.kAlertWindow;
displayString -replace -value "Alert" m_menuEditorWnd.kAlertWindowTitle;
displayString -replace -value "Apply Settings" m_menuEditorWnd.kApplySettings;
displayString -replace -value "Cancel" m_menuEditorWnd.kCancel;
displayString -replace -value "Cancel" m_menuEditorWnd.kCancelOption;
displayString -replace -value "Center" m_menuEditorWnd.kCenter;
displayString -replace -value "Check box" m_menuEditorWnd.kCheckBox;
displayString -replace -value "Click Here to Test" m_menuEditorWnd.kClickHereToTest;
displayString -replace -value "Close" m_menuEditorWnd.kClose;
displayString -replace -value "       Close all edit windows before restoring defaults.       " m_menuEditorWnd.kCloseAllEditWindowsBefore;
displayString -replace -value "Close" m_menuEditorWnd.kCloseButton;
displayString -replace -value "       Close edit window before applying new settings.       " m_menuEditorWnd.kCloseEditWindowBefore;
displayString -replace -value "       Close edit window before deleting.       " m_menuEditorWnd.kCloseEditWindowBeforeDeleting;
displayString -replace -value "Close" m_menuEditorWnd.kCloseOption;
displayString -replace -value "Command(s) :" m_menuEditorWnd.kCommands;
displayString -replace -value "Unexpected condition in ^1s" m_menuEditorWnd.kConditionWarn;
displayString -replace -value "Create Backup" m_menuEditorWnd.kCreateBackup;
displayString -replace -value "Create Marking Menu" m_menuEditorWnd.kCreateMarkingMenu;
displayString -replace -value "Create Marking Menu" m_menuEditorWnd.kCreateMarkingMenuButton;
displayString -replace -value "To create a menu item, drag commands from the shelf\nor the Script Editor and drop over an icon above.\nTo edit a menu item, click the RMB over its icon." m_menuEditorWnd.kCreateMenuItem;
displayString -replace -value "Cannot find definition of ^1s" m_menuEditorWnd.kDefinitionWarn;
displayString -replace -value "Delete Marking Menu" m_menuEditorWnd.kDeleteMarkingMenuButton;
displayString -replace -value "Delete Menu" m_menuEditorWnd.kDeleteMenu;
displayString -replace -value "Delete Menu Item" m_menuEditorWnd.kDeleteMenuItem;
displayString -replace -value "Do Not Backup" m_menuEditorWnd.kDoNotBackup;
displayString -replace -value "Do Not Load" m_menuEditorWnd.kDoNotLoad;
displayString -replace -value "East" m_menuEditorWnd.kEast;
displayString -replace -value "Edit Marking Menu" m_menuEditorWnd.kEditMarkingMenu;
displayString -replace -value "Edit Marking Menu" m_menuEditorWnd.kEditMarkingMenuButton;
displayString -replace -value "Edit Menu Item..." m_menuEditorWnd.kEditMenuItem;
displayString -replace -value "Edit ^1s" m_menuEditorWnd.kEditTitle;
displayString -replace -value "The file\n\n^1s\n\nwill be deleted.  Would you like a backup\n(.bak) to be made before it is deleted ?\n\nNote: To restore a backed-up menu file,\nrename it to something of the form\n\n^2s\n\nThen, the next time the Marking Menu Editor\nwindow is opened, you will be prompted for\nan auto-restoration of the file." m_menuEditorWnd.kFileDeleteConfirmMsg;
displayString -replace -value "The following files were detected in your user-scripts directory:\n\n^1s\nThese files are not registered with the Marking Menu Editor.\nYou may now load these files into the Marking Menu list for\nediting.  Note that the integrity of the files will not be tested,\nand if they do not contain valid menus then errors could occur.\n\nIf you don't want this dialog box to come up again, you should\nmove the above files to another directory, or rename them so\nthey don't match the \"^2s\" pattern.\n" m_menuEditorWnd.kFileMsg;
displayString -replace -value "Hotbox" m_menuEditorWnd.kHotbox;
displayString -replace -value "Hotbox region:" m_menuEditorWnd.kHotboxRegion;
displayString -replace -value "Hotkey Editor" m_menuEditorWnd.kHotkeyEditor;
displayString -replace -value "Icon filename:" m_menuEditorWnd.kIconFilename;
displayString -replace -value "Insert Separator" m_menuEditorWnd.kInsertSeparator;
displayString -replace -value "Label:" m_menuEditorWnd.kLabel;
displayString -replace -value "Left" m_menuEditorWnd.kLeft;
displayString -replace -value "Load Menus" m_menuEditorWnd.kLoadMenus;
displayString -replace -value "Marking Menus" m_menuEditorWnd.kMarkingMenus;
displayString -replace -value "    The Menu Name cannot contain spaces. Please use    \n    underscores (like_this) or intercaps (LikeThis).    " m_menuEditorWnd.kMenuCannotHaveSpaces;
displayString -replace -value "Menu name:" m_menuEditorWnd.kMenuName;
displayString -replace -value "       Menu Name contains illegal characters.  Please enter an ASCII-only name.       " m_menuEditorWnd.kMenuNameIllegal;
displayString -replace -value "       Menu name is not unique! Please select another.       " m_menuEditorWnd.kMenuNameIsNot;
displayString -replace -value "Middle" m_menuEditorWnd.kMiddle;
displayString -replace -value "Mouse button(s):" m_menuEditorWnd.kMouseButtons;
displayString -replace -value "Neither" m_menuEditorWnd.kNeither;
displayString -replace -value "Cannot find definition of hotkeyEditor_renameMarkingMenu()" m_menuEditorWnd.kNoDefinitionFound;
displayString -replace -value "Cannot find definition of hotkeyEditor_deleteMarkingMenu()" m_menuEditorWnd.kNoDefinitionWarn;
displayString -replace -value "No settings." m_menuEditorWnd.kNoSettings;
displayString -replace -value "North" m_menuEditorWnd.kNorth;
displayString -replace -value "(not set)" m_menuEditorWnd.kNotSet;
displayString -replace -value "Note: all radio button menu items created here will\nshare the same default radio button collection." m_menuEditorWnd.kNote;
displayString -replace -value "OK" m_menuEditorWnd.kOK;
displayString -replace -value "OK" m_menuEditorWnd.kOKButton;
displayString -replace -value "OK" m_menuEditorWnd.kOKButtonLabel;
displayString -replace -value "OK" m_menuEditorWnd.kOKLabel;
displayString -replace -value "OK" m_menuEditorWnd.kOKOption;
displayString -replace -value "OK" m_menuEditorWnd.kOKSelection;
displayString -replace -value "Option box" m_menuEditorWnd.kOptionBox;
displayString -replace -value "Option box command(s) :" m_menuEditorWnd.kOptionBoxCommands;
displayString -replace -value "Optional Properties" m_menuEditorWnd.kOptionalProperties;
displayString -replace -value "       Please enter a label.       " m_menuEditorWnd.kPleaseEnterALabel;
displayString -replace -value "       Please enter a menu name.       " m_menuEditorWnd.kPleaseEnterAMenuName;
displayString -replace -value "Popup Submenu..." m_menuEditorWnd.kPopupSubmenu;
displayString -replace -value "Radio button" m_menuEditorWnd.kRadioButton;
displayString -replace -value "Restore Default Menus" m_menuEditorWnd.kRestoreDefaultMenus;
displayString -replace -value "Restore Defaults" m_menuEditorWnd.kRestoreDefaults;
displayString -replace -value "Restore Menu Files" m_menuEditorWnd.kRestoreMenuFiles;
displayString -replace -value "Right" m_menuEditorWnd.kRight;
displayString -replace -value "Save" m_menuEditorWnd.kSave;
displayString -replace -value "Save and Close" m_menuEditorWnd.kSaveAndClose;
displayString -replace -value "Settings" m_menuEditorWnd.kSettings;
displayString -replace -value "       Sorry, separators have no editable attributes.       " m_menuEditorWnd.kSorrySeparatorsHaveNo;
displayString -replace -value "South" m_menuEditorWnd.kSouth;
displayString -replace -value "Submenu Editor for Linear Item ^1s" m_menuEditorWnd.kSubmenuLinearTitle;
displayString -replace -value "Submenu Editor for ^1s Item" m_menuEditorWnd.kSubmenuRadialTitle;
displayString -replace -value "    The default menus will be restored.  Continue ?    " m_menuEditorWnd.kTheDefaultMenusWillBe;
displayString -replace -value "       The entered menu name is not acceptable.       " m_menuEditorWnd.kTheEnteredMenuNameIsNot;
displayString -replace -value "The Marking Menu will be available\nfor editing in the Hotkey Editor." m_menuEditorWnd.kTheMarkingMenuWillBe;
displayString -replace -value "       Unable to apply settings.       " m_menuEditorWnd.kUnableToApplySettings;
displayString -replace -value "Undo Settings" m_menuEditorWnd.kUndoSettings;
displayString -replace -value "(Use LMB)" m_menuEditorWnd.kUseLMB;
displayString -replace -value " Use marking menu in:" m_menuEditorWnd.kUseMarkingMenuIn;
displayString -replace -value "West" m_menuEditorWnd.kWest;
displayString -replace -value "Yes" m_menuEditorWnd.kYesOption;
