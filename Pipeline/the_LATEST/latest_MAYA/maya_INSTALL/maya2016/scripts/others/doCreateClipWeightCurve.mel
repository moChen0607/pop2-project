// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  Feb 20, 2001
//
//  Description:
//		This script creates a weight curve.
//
//  Input Arguments:
//      None.
//
//  Return Value:
//      None.
//

global proc doCreateClipWeightCurve (string $clips[])
{
	int $nClips = size($clips);
	if ($nClips == 0) {
		return;
	}

	int $ii = 0;
	for ($ii = 0; $ii < $nClips; $ii++) {
		string $clip = $clips[$ii];

		string $connections[] = `listConnections -source true -destination false ($clip+".weight")`;
		if (size($connections) > 0) {
			//	Something is already connected, so do nothing.
			//
			string $warnMsg = (uiRes("m_doCreateClipWeightCurve.kClipWarn"));
			$warnMsg = `format -s $clip $warnMsg`;
			warning($warnMsg);
			continue;
		}

		float $startTime = `getAttr ($clip + ".startFrame")`;
		setKeyframe -at weight -t $startTime -v 1.0 $clip;
		float $sourceStartTime = `getAttr ($clip + ".sourceStart")`;
		float $sourceEndTime = `getAttr ($clip + ".sourceEnd")`;
		float $endTime = ($sourceEndTime - $sourceStartTime) * `getAttr ($clip + ".scale")`;
		setKeyframe -at weight -t ($startTime + $endTime) -v 1.0 $clip;
	}
}
