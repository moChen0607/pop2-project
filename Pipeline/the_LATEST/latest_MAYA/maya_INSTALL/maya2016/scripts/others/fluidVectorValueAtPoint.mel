// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.


//
//
//  Creation Date:  Oct 21, 2002
//
//  Description:
//      Get fluid properties at point
//		returns 0 if point is outside
//      
//		
//  Input Arguments:
//      fluid, world space position, attribute to get
//		fluidVectorAtPoint fluid1 -2.4 -2.4 0 velocity;
//
//  Return Value:
//      float array 
//

global proc float[] fluidVectorValueAtPoint( string $fluid, float $xp, float $yp, float $zp, string $fluidAttr )
{
	// use this for color, velocity
	int $vox[] = `fluidVoxelInfo -objectSpace false -cb -voxel $xp $yp $zp $fluid`;
	if( size($vox) == 0) {
		float $zero[];
		$zero[0] = 0.0;
		$zero[1] = 0.0;
		$zero[2] = 0.0;
		return $zero;
	}
	return `getFluidAttr -at $fluidAttr -xi $vox[0] -yi $vox[1] -zi $vox[2] $fluid`;
}
