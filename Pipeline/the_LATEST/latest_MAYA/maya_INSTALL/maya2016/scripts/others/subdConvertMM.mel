// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//
//
//
//  Creation Date:  11 January 2002
//
//  Procedure Name:
//      subdConvertMM
//
//  Description:
//      This procedure creates the popup/marking menu
//      for subd component conversion. See buildConvertMM.
//
//  Input Arguments:
//      The parent item to parent the popup menu to.
//
//  Return Value:
//      None.

global proc subdConvertMM(string $parent){

	if (`popupMenu -query -exists $parent`){
		popupMenu -edit -deleteAllItems $parent;
    
		setParent -menu $parent;
		menuItem
			-label (uiRes("m_subdConvertMM.kToEdge")) 
			-command ("ConvertSelectionToEdges;" +
				"selectType -ocm -alc false;" +
				"selectType -ocm -subdivMeshEdge true;") 
			-radialPosition "N" 
			-annotation (getRunTimeCommandAnnotation ("ConvertSelectionToEdges"))
			;
		menuItem
			-label (uiRes("m_subdConvertMM.kDisplayCoarser")) 
			-command "CoarseLevelComponentDisplay" 
			-radialPosition "NE" 
			-annotation (getRunTimeCommandAnnotation ("CoarseLevelComponentDisplay"))
			;
		menuItem
			-label (uiRes("m_subdConvertMM.kToUVs")) 
			-command ("ConvertSelectionToUVs;" +
				"selectType -ocm -alc false;" +
				"selectType -ocm -subdivMeshUV true;") 
			-radialPosition "E" 
			-annotation (getRunTimeCommandAnnotation ("ConvertSelectionToUVs"))
			;
		menuItem
			-label (uiRes("m_subdConvertMM.kExpandSelection")) 
			-command "ExpandSelectedComponents" 
			-radialPosition "SE" 
			-annotation (getRunTimeCommandAnnotation ("ExpandSelectedComponents"))
			;
		menuItem
			-label (uiRes("m_subdConvertMM.kToFaces")) 
			-command ("ConvertSelectionToFaces;" +
				"selectType -ocm -alc false;" +
				"selectType -ocm -subdivMeshFace true;")
			-radialPosition "S" 
			-annotation (getRunTimeCommandAnnotation ("ConvertSelectionToFaces"))
			;
		menuItem
			-label (uiRes("m_subdConvertMM.kRefineSelection")) 
			-command "RefineSelectedComponents" 
			-radialPosition "SW" 
			-annotation (getRunTimeCommandAnnotation ("RefineSelectedComponents"))
			;
		menuItem
			-label (uiRes("m_subdConvertMM.kToVertices")) 
			-command ("ConvertSelectionToVertices;" +
				"selectType -ocm -alc false;" +
				"selectType -ocm -subdivMeshPoint true;")
			-radialPosition "W" 
			-annotation (getRunTimeCommandAnnotation ("ConvertSelectionToVertices"))
			;
		menuItem
			-label (uiRes("m_subdConvertMM.kDisplayFiner")) 
			-command "FineLevelComponentDisplay" 
			-radialPosition "NW" 
			-annotation (getRunTimeCommandAnnotation ("FineLevelComponentDisplay"))
			;
		setParent -menu ..;
	}
}
