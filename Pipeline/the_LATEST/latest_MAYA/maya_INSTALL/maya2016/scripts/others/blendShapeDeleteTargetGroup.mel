// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

global proc blendShapeDeleteTargetGroup( string $bsn, int $inTgtGrp )
{
    string $attr;
    
	// Remove the element in the weight array. This has to happen first.
    $attr = $bsn + ".weight[" + $inTgtGrp + "]";
    removeMultiInstance -b true $attr;

	$attr = $bsn + ".inputTarget";
	int $nbInTgt = `getAttr -size $attr`;
    int $inTgtIndices[] = `getAttr -multiIndices $attr`;

	int $needsReset = 0;
    for( $i = 0; $i < $nbInTgt; $i++ )
    {
		int $index = $inTgtIndices[$i];

		// remove each input target item within the group
		// we have to do this first before deleting the inputTargetGroup
		// otherwise on undo, the inputTargetItems aren't restored for some reason.
		$attr = $bsn + ".inputTarget[" + $index + "].inputTargetGroup[" + $inTgtGrp + "].inputTargetItem";

		int $nbInItems = `getAttr -size $attr`;
		int $inItemIndices[] = `getAttr -multiIndices $attr`;
		for( $j = 0; $j < $nbInItems; $j++ )
		{
			$attr = $bsn + ".inputTarget[" + $index + 
					"].inputTargetGroup[" + $inTgtGrp + 
					"].inputTargetItem[" + $inItemIndices[$j] + "]";

			removeMultiInstance -b true $attr;
		}

		// remove the entire target group
        $attr = $bsn + ".inputTarget[" + $index + "].inputTargetGroup[" + $inTgtGrp + "]";
        removeMultiInstance -b true $attr;

		string $targetIndex = $bsn + ".inputTarget[" + $index + "].sculptTargetIndex";
		if( `getAttr $targetIndex` == $inTgtGrp )
			$needsReset = 1; 
    }

	// we just deleted the target group that is being sculpted on
	if( $needsReset == 1 )
	{
		sculptTarget -e -target -1 $bsn;
	}
}
