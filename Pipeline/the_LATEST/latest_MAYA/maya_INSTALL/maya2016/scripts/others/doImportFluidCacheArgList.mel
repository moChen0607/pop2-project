// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  Jan, 2005
//
//	Procedure Name:
//		doImportFluidCacheArgList
//
//	Description:
//		Import a cache file from disk and connect it to a fluid object
//
//	Input Arguments:
//	$version: The version of this option box.  Used to know how to 
//	interpret the $args array.
//  
//	$args
//	Version 1
//   - none
//
	
source doImportFluidCacheFile.mel;


global proc int 
importFluidCacheFile(string $fileName, string $fileType)
//
// Import the specified file.
//
{
	string $fluidObjects[];
	return doImportFluidCacheFile($fileName, $fileType, $fluidObjects, {});
}
	

global proc doImportFluidCacheArgList( int $version, string $args[] )
{
	int $import = 1;
	verifyWorkspaceFileRule( "fluidCache", "cache/nCache/fluid" );
	string $dataDir = cacheGetCurrentDir("fluidCache", "fluidCacheDirName", "CurrentProject", $import );
	if (`file -q -ex $dataDir`) {
		workspace -dir $dataDir;
	}

	string $sel[] = `getFluidObjectsToCache 1`;
	
	// bring up the file browser dialog so that they can choose a file name
	//
	string $browserTitle = (uiRes("m_doImportFluidCacheArgList.kFluidImportCache"));
	fileBrowser("importFluidCacheFile", $browserTitle, "xmlcache", 0);
}
