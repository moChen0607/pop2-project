// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
// Returns the key corresponding to the current image format.
//
global proc string getImfImageType()
{
	global string $imfKey[];  // This is IMF keyword
	if (size( $imfKey ) == 0) {
		// If the file format array has not been initialized yet, do so.
		// This routine may be called in dynPaintMenus.mel during the
		// file save for PFX canvas images.
		createImageFormats();
	}

	int $compare;
	int $imageNum = `getAttr "defaultRenderGlobals.imageFormat"`;
	// 
	string $imageType = "";
	switch ($imageNum) {
		case 50:							// IMF plug-in
		global string $imfPlugInKey[];
		string $key = `getAttr "defaultRenderGlobals.imfkey"`;
		for ($i=0; $i < size($imfPlugInKey); ++$i) {
			if ($imfPlugInKey[$i] == $key) {
				$imageType = $imfPlugInKey[$i];
				break;
			}
		}
		break;

		case 51:							// User defined
		$imageType = `getAttr "defaultRenderGlobals.imfkey"`;
		break;

		// Vector formats are not registered as IMF.
		case 60: $imageType = "swf"; break;
		case 61: $imageType = "ai"; break;
		case 62: $imageType = "svg"; break;
		case 63: $imageType = "swft"; break;

		default:
		$imageType = $imfKey[$imageNum];
	}

	if ($imageType == "") 
		$imageType = "iff";

	return $imageType;
}
