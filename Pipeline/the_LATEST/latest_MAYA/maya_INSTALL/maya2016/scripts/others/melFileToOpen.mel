// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//	Creation Date:	Aug 21, 2003
//
//	Procedure Name:
//	melFileToOpen()
//
//	Description:
//	Brings up a modal dialog for the user to input the pathname
//	to a MEL script to be loaded into the Script Editor.  Called
//	from within the Script Editor code.
//
//	Input Value:
//	None
//
//	Output Value:
//	Pathname of a valid readable file that the user typed in.
//

global proc string melFileToOpen()
//
//	Purpose:
//
//		Called from the "File->Open Script" menu item
//		of the Script Editor under low memory conditions
//		on Windows, when a standard system dialog would
//		cause Maya to hang.
//
//		Brings up a simple text box that allows the user 
//		to type in a full path to a MEL script to load.
//		Loops until a valid pathname is entered, or
//		the user cancels the dialog.
//
//
{
	string $text = "";
	string $ok = (uiRes("m_melFileToOpen.kOk"));
	string $cancel = (uiRes("m_melFileToOpen.kCancel"));
	
	while( 1 )
	{
		$result = `promptDialog
    		-title (uiRes("m_melFileToOpen.kOpenScript"))
    		-message (uiRes("m_melFileToOpen.kEnterFilename"))
    		-button $ok -button $cancel
    		-defaultButton $ok -cancelButton $cancel
    		-dismissString $cancel
			-tx $text`;

		if ($result == $ok) {
    		$text = `promptDialog -query -text`;

			if( !`filetest -r $text` )
			{
				confirmDialog 
					-title (uiRes("m_melFileToOpen.kError"))
					-message (uiRes("m_melFileToOpen.kOpenMessage"))
					-button (uiRes("m_melFileToOpen.kTryAgain"));
				continue;
			}
			else
			{
				break;
			}
		}
		else
		{
			//	user cancelled dialog
			//
			$text = "";
			break;
		}
	}

	return $text;
}
