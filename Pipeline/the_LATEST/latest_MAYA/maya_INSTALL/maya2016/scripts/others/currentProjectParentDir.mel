// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  April 20, 1998
//
//  Description:
//      This script returns the parent of the current project directory
//
//  Input Arguments:
//      None
//
//  Return Value:
//      string - the parent of the current project dir
//

global proc string getParentDir( string $directory ) 
//
//  Description:
//      Get the parent directory of the given directory.
//
//  Input Arguments:
//      $directory
//
//  Return Value:
//      string - the parent
//
{
	string $result = $directory;
	int $i = size( $directory ) - 1;
	while ( $i >= 1 ) {
		string $char = substring( $directory, $i, $i );
		if ( ( $char == "/" ) || ( $char == "\\" ) ) {
			if ( $i > 1 ) {
				$result = substring( $directory, 1, $i - 1 );
			} else {
				$result = "/";
			}
			break;
		}
		$i--;
	}

	return $result;
}

global proc string currentProjectParentDir()
//
//  Description:
//		Global callback for getting the parent of the 
//		current project's directory
//
//  Return Value:
//      string - the parent of the current project dir
//
{
	string $projDir = `workspace -q -fn`;
	return getParentDir( $projDir );
}
