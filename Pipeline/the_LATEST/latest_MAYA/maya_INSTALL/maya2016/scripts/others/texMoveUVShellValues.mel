// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Description:
//		This script sets the values for the specified smudge
//	context within the tool property sheet. 
//
//  Input Arguments:
//      None.
//
//  Return Value:
//      None.
//



global proc texMoveShellMaskButtonCB( string $parent, string $context )
{
	setParent $parent; 
	int $mask = `checkBoxGrp -query -value1 textureMoveShellMaskButton`;
	texMoveUVShellContext -edit -m $mask $context;

	if ( $mask) { 
		floatSliderGrp -edit -en true textureMoveShellSpacing; 
		intSliderGrp -edit -en true textureMoveIteration;
	} else { 
		floatSliderGrp -edit -en false textureMoveShellSpacing;
		intSliderGrp -edit -en false textureMoveIteration;		
	}	
	
}

global proc texMoveShellSpacingCB( string $parent, string $context )
{
	setParent $parent;
	float $spacing = `floatSliderGrp -query -value textureMoveShellSpacing`;
	texMoveUVShellContext -edit -sb $spacing $context;
}


global proc texMoveIterationCB( string $parent, string $context )
{
	setParent $parent;
	int $iter = `intSliderGrp -query -value textureMoveIteration`;
	texMoveUVShellContext -edit -it $iter $context;
}


global proc texMoveUVShellValues( string $context ) 
{
	string $parent = `toolPropertyWindow -query -location`;
	setParent $parent;
	
	int $mask = `texMoveUVShellContext -query -m $context`;
	float $spacing = `texMoveUVShellContext -query -sb $context`;	
	int $iter = `texMoveUVShellContext -query -it $context`;
	
	checkBoxGrp -edit 
		-changeCommand ("texMoveShellMaskButtonCB " + $parent + " " + $context)
		-value1  $mask textureMoveShellMaskButton; 

	floatSliderGrp -edit 
		-changeCommand ("texMoveShellSpacingCB " + $parent + " " + $context)
		-enable $mask
		-value $spacing 
		textureMoveShellSpacing; 
		
	intSliderGrp -edit	
		-changeCommand ("texMoveIterationCB " + $parent + " " + $context)
		-enable $mask
		-value  $iter 
		textureMoveIteration; 		

	string $helpTag = "texMoveUVShellTool";
	toolPropertySetCommon $context "moveUVShellLarge.png" $helpTag; 
	toolPropertySelect "texMoveUVShell";
}
