// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//	Proceduce Name:
//		doAppendNclothCache
//
//	Description:
//		Append to cache as specified by options
//
//	Input Arguments:
//		Time mode, start time, end time, simulation rate, sample multiplier
//
//	Return Value:
//		None
//
global proc doAppendNclothCache(int	$timeMode,
								float $startTime,
								float $endTime,
								float $simRate,
								int $sampleMult )
{
	string $obj;
	string $cmd = "cacheFile -refresh -appendFrame ";
	string $objects[] = getNclothObjectsToCache(1);
	for( $obj in $objects ) {
		$cmd += (" -cnd " + $obj);
	}
	switch( $timeMode ) {
		case 1:
			$startTime = `currentTime -q`;
			$endTime = $startTime;
			break;
		case 2:
			$startTime = `currentTime -q`;
			$endTime = `playbackOptions -q -max`;
			break;
		case 3:
			$startTime = `playbackOptions -q -min`;
			$endTime = `playbackOptions -q -max`;
			break;
		case 4:
 			$endTime = `playbackOptions -q -max`;
			// No break - fall through to case 4 to set the startTime to the
			// current cache end time
			//
 		case 5:
 			$startTime = getCacheEndTime( getGeometriesToCache() );
			// If we're doing case 5 only, $endTime has already been
			// initialized to optionVar appendNclothCacheEndTime; if we're
			// dropping down from case 4, we've aleady overriden $endTime
			// appropriately. Either way, we have nothing further to do.
			//
 			break;
 		case 6:
		default:
			// $startTime and $endTime have already been initialized to
			// optionVar appendNclothCacheStartTime & appendNclothCacheEndTime,
			// so we have nothing futher to do.
			//
			break;
	}
	
	
	$cmd += (" -startTime " + $startTime );
	$cmd += (" -endTime " + $endTime ); 
	$cmd += (" -simulationRate " + $simRate );
	$cmd += (" -sampleMultiplier " + $sampleMult );
	$cmd += (" -noBackup" );

	evalEcho($cmd);
}
