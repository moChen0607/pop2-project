// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

displayString -replace -value "Project from:" m_performPolyProjectionArgList.kBBoxSide;
displayString -replace -value "Camera" m_performPolyProjectionArgList.kCamera;
displayString -replace -value "Contour Stretch Mapping Options" m_performPolyProjectionArgList.kContourProjectionOptions;
displayString -replace -value "Could not create a new set to hold the faces." m_performPolyProjectionArgList.kCreateNewSetWarn;
displayString -replace -value "Create new UV Set" m_performPolyProjectionArgList.kCreateNewUVSet;
displayString -replace -value "Cylindrical Mapping Options" m_performPolyProjectionArgList.kCylindricalProjectionOptions;
displayString -replace -value "Could not create the default polygons shader" m_performPolyProjectionArgList.kDefaultPolygonsShaderWarn;
displayString -replace -value "Fit projection to:" m_performPolyProjectionArgList.kFitProjectionTo;
displayString -replace -value "Best plane" m_performPolyProjectionArgList.kFitToBestPlane;
displayString -replace -value "Bounding box" m_performPolyProjectionArgList.kFitToBoundingBox;
displayString -replace -value "Insert projection before deformers" m_performPolyProjectionArgList.kInsertBeforeDeformers;
displayString -replace -value "Keep image width/height ratio" m_performPolyProjectionArgList.kKeepImageRatio;
displayString -replace -value "Method:" m_performPolyProjectionArgList.kMethod;
displayString -replace -value "NURBS Projection" m_performPolyProjectionArgList.kNURBSProjection;
displayString -replace -value "Offset 0:" m_performPolyProjectionArgList.kOffset0;
displayString -replace -value "Offset 1:" m_performPolyProjectionArgList.kOffset1;
displayString -replace -value "Offset 2:" m_performPolyProjectionArgList.kOffset2;
displayString -replace -value "Offset 3:" m_performPolyProjectionArgList.kOffset3;
displayString -replace -value "Planar Mapping Options" m_performPolyProjectionArgList.kPlanarProjectionOptions;
displayString -replace -value "Poly Contour Stretch" m_performPolyProjectionArgList.kPolyContourProjCtx;
displayString -replace -value "PolyProjection works on polygonal faces.  Select them and invoke the command." m_performPolyProjectionArgList.kPolyProjectionInvokeWarn;
displayString -replace -value "polyProjection works only on polygonal faces; Try turning Polygons->ToolOptions->ConvertSelection On." m_performPolyProjectionArgList.kPolyProjectionWarn;
displayString -replace -value "Project" m_performPolyProjectionArgList.kProject;
displayString -replace -value "Projection Manipulator" m_performPolyProjectionArgList.kProjectManipFrame;
displayString -replace -value "Select 4 boundary vertices" m_performPolyProjectionArgList.kSelectContourProjVertices;
displayString -replace -value "Select 4 boundary vertices, then press Enter" m_performPolyProjectionArgList.kSelectVertices;
displayString -replace -value "Smoothness 0:" m_performPolyProjectionArgList.kSmoothness0;
displayString -replace -value "Smoothness 1:" m_performPolyProjectionArgList.kSmoothness1;
displayString -replace -value "Smoothness 2:" m_performPolyProjectionArgList.kSmoothness2;
displayString -replace -value "Smoothness 3:" m_performPolyProjectionArgList.kSmoothness3;
displayString -replace -value "Spherical Mapping Options" m_performPolyProjectionArgList.kSphericalProjectionOptions;
displayString -replace -value "UV Set" m_performPolyProjectionArgList.kUVSetFrame;
displayString -replace -value "UV Set name: " m_performPolyProjectionArgList.kUVSetName;
displayString -replace -value "User defined corner vertices" m_performPolyProjectionArgList.kUserDefinedCorners;
displayString -replace -value "Walk Contours" m_performPolyProjectionArgList.kWalkContours;
displayString -replace -value "X axis" m_performPolyProjectionArgList.kXAxis;
displayString -replace -value "Y axis" m_performPolyProjectionArgList.kYAxis;
displayString -replace -value "Z axis" m_performPolyProjectionArgList.kZAxis;
