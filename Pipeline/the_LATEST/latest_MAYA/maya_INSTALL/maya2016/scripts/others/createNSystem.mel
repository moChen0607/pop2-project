// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//	createNSystem.mel
//
//	Description:
//		Find a suitable nucleus node or create one.
//
//		Arguments:
//			None.
//

global proc string createNSystem()
//
//	Description:
//
//		If there is an nucleus node selected, return it, 
//	otherwise, create a new one and return it.
//	TODO - add a create flag, and decide exactly when to create a new one.
//	TODO - or perhaps allow an nThing as an argument
//
{
	string $nucleus;
	if( !nClothEditLicenseFound() ) {        
		error(uiRes("m_createNCloth.kNoNClothLicense"));
		return $nucleus;
	}
	string $selected[] = `ls -sl`;
	// Get the selected nucleuss
	//
	string $nsys[] = `listRelatives -type "nucleus" $selected`;
	int $numSystems = size($nsys);

	if( $numSystems == 0 ){
		$nucleus = `createNode nucleus`;
		connectAttr time1.outTime  ($nucleus + ".currentTime");
		string $ax = `upAxis -q -axis`;
		if( $ax == "z" ){
			setAttr( $nucleus + ".gravityDirection" ) 0 0 -1;
		} 
	} else {
		$nucleus = $nsys[0];
	}
	return $nucleus;
}
