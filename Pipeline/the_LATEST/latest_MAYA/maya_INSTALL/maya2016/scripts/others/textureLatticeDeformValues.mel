// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Description:
//		This script sets the values for the specified latticeDeformKey
//	context within the tool property sheet. 
//
//  Input Arguments:
//      None.
//
//  Return Value:
//      None.
//

global proc textureLatticeDeformRowChange( string $parent, string $context )
{
	setParent $parent;
	int $row = `intSliderGrp -query -value texLatticeDeformRows`;
	texLatticeDeformContext -edit -latticeRows $row $context;
}

global proc textureLatticeDeformColumnChange( string $parent, string $context )
{
	setParent $parent; 
	int $col = `intSliderGrp -query -value texLatticeDeformColumns`;
	texLatticeDeformContext -edit -latticeColumns $col $context;
}

global proc textureLatticeDeformEnvelopeChange( string $parent, string $context )
{
	setParent $parent;
	float $env = `floatSliderGrp -query -value texLatticeDeformEnvelope`;
	texLatticeDeformContext -edit -envelope $env $context;
}

global proc textureLatticeDeformUseBoundChange( string $parent, string $context )
{
	setParent $parent;
	int $ub = `checkBoxGrp -query -value1 texLatticeDeformUseBoundRect`;
	texLatticeDeformContext -edit -ubr $ub $context;
}

global proc textureLatticeDeformValues( string $context ) 
{
	string $parent = `toolPropertyWindow -query -location`;
	setParent $parent;
	
	int $rows = `texLatticeDeformContext -query -latticeRows $context`;
	int $col  = `texLatticeDeformContext -query -latticeColumns $context`;
	float $env = `texLatticeDeformContext -query -envelope $context`;
	int $br = `texLatticeDeformContext -query -ubr $context`; 

	intSliderGrp -edit 
		-changeCommand ("textureLatticeDeformRowChange " + $parent + " " + $context)
		-value $rows
		-min 2 
		-max 8 
		texLatticeDeformRows;

	intSliderGrp -edit
		-changeCommand ("textureLatticeDeformColumnChange " + $parent + " " + $context)
		-min 2 
		-max 8 	
		-value $col
		texLatticeDeformColumns;

	floatSliderGrp -edit
		-changeCommand ("textureLatticeDeformEnvelopeChange " + $parent + " " + $context)
		-value $env
		texLatticeDeformEnvelope;

	checkBoxGrp -edit 
		-changeCommand( "textureLatticeDeformUseBoundChange " + $parent + " " + $context) 
		-v1 $br texLatticeDeformUseBoundRect;

	int $snapMode = `texLatticeDeformContext -q -snapPixelMode $context`;
	// Recast the values to the selected items
	switch ($snapMode)
	{
		case 1:
			radioButtonGrp -e -sl 1 texLatSnapMode;
			break;
		case 0:
			radioButtonGrp -e -sl 2 texLatSnapMode;
			break;
	}

	// setup the commands
	radioButtonGrp -e 
		-on1 ("texLatticeDeformContext -e -snapPixelMode 0 " + $context)
		-on2 ("texLatticeDeformContext -e -snapPixelMode 1 " + $context)
		texLatSnapMode;

	string $helpTag = "UVTextureEditorLatticeTool";
	toolPropertySetCommon $context "uvlattice.png" $helpTag; 
	toolPropertySelect "textureLatticeDeform";
}
