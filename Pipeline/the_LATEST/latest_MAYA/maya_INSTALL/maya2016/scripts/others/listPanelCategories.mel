// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  05 July 2006
//
//<doc>
//<name listPanelCategories>
//
//<synopsis>
//		string[] listPanelCategories()
//
//<description>
//		Lists all categories present in the Panels menus, including the
//	default menu entries as well as new categories added view the command
//	addPanelCategory.
//
//<returns>
//		string result[] : Returns the list of Panels categories on success.
//
//<examples>
//  string $cats[] = `listPanelCategories()`;
//
//</doc>
//

global proc string[] listPanelCategories()
{
    global string $categoryName[];
    global string $categoryInsertAfter[];

	// Define the list of default Panels entries. We need to define these
	// as a hardwired list to allow the user to query the entries before
	// the menu is constructed. What should really happen is the entire
	// panels menu is built using the addPanelCategory() mechanism so this
	// list always matches.
	//
	string $items[];
	int $i = 0; 
	$items[$i++] = uiRes( "m_buildPanelPopupMenu.kPerspective" );
	$items[$i++] = uiRes( "m_buildPanelPopupMenu.kOrthographic" );
	$items[$i++] = uiRes( "m_buildPanelPopupMenu.kLookThroughSelected");
	if ( `getenv ENABLE_DEFAULT_VIEWPORT_CAMERA_SETS` == 1 ) { 
		$items[$i++] = uiRes( "m_buildPanelPopupMenu.kCameraSet" );
	}
	$items[$i++] = uiRes( "m_buildPanelPopupMenu.kPanel" );
	$items[$i++] = uiRes( "m_buildPanelPopupMenu.kLayouts" );
	$items[$i++] = uiRes( "m_buildPanelPopupMenu.kSavedLayouts" );
	$items[$i++] = uiRes( "m_buildPanelPopupMenu.kTearOff" );
	$items[$i++] = uiRes( "m_buildPanelPopupMenu.kTearOffCopy" );
	$items[$i++] = uiRes( "m_buildPanelPopupMenu.kPanelEditor" );

	// Insert the user-defined categories.
	//
	int $i, $j;
	int $nc = size( $categoryName );
	for ( $i = 0; $i < $nc; $i++ ) {
		// Find the button to insert after.
		//
		int $ni = size( $items );
		for ( $j = 0; $j < $ni; $j++ ) {
			if ( $items[$j] == $categoryInsertAfter[$i] ) {
				stringArrayInsertAtIndex( $j + 1, $items, $categoryName[$i] );
			}
		}
	}

	return( $items );
}
