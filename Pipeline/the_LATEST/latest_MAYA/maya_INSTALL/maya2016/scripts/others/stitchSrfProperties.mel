// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date: Oct 9, 1996
//
//  Description:
//      These procs create the controls for stitchSrf tool property sheet.
//      See also stitchSrfValues.mel for procs that set the state of the
//      property sheet.
//
//  Input Arguments:
//      None.
//
//  Return Value:
//      None.
//

proc stitchSrfOtherCallbacks( string $parent )
{
    setParent $parent;

	checkBoxGrp -e -cc1 ("stitchSurfaceCtx -e -kg0 #1 `currentCtx`")
		-cc2 ("stitchSurfaceCtx -e -kg1 #1 `currentCtx`") stitchSrfContinuityOptions ;

	checkBoxGrp -e -cc1 ("stitchSurfaceCtx -e -c #1 `currentCtx`") stitchNodeOptions ;
	floatSliderGrp -e -cc ("stitchSurfaceCtx -e -wt0 #1 `currentCtx`") weight1Slider ;
	floatSliderGrp -e -cc ("stitchSurfaceCtx -e -wt1 #1 `currentCtx`") weight2Slider ;
	intSliderGrp -e -cc ("stitchSurfaceCtx -e -ns #1 `currentCtx`") sampleCountField ;
}

proc optionalStitchSurfaceProperties( string $parent, string $ctxCmdName  )
//
//  Description :
//      checkBox Grp for trim cos generation on the surfaces.
//
{
    setUITemplate -pushTemplate OptionsTemplate ;
    setParent $parent ;

    string $tangent  = (uiRes("m_stitchSrfProperties.kTangent"));
    string $position = (uiRes("m_stitchSrfProperties.kPosition"));
    frameLayout -label (uiRes("m_stitchSrfProperties.kStitchSettings"))  -borderVisible true
				  -collapse false -collapsable true ;
        columnLayout;
		checkBoxGrp -ncb 2 -label (uiRes("m_stitchSrfProperties.kBlending"))  -label1 $position  -label2 $tangent  stitchSrfContinuityOptions;

		floatSliderGrp -field true -fmn 0.0 -fmx 1.0 -ss 0.1 -min 0 -max 1 -label (uiRes("m_stitchSrfProperties.kWeightingonEdge1"))  weight1Slider;
		floatSliderGrp -field true -fmn 0.0 -fmx 1.0 -ss 0.1 -min 0 -max 1 -label (uiRes("m_stitchSrfProperties.kWeightingonEdge2"))  weight2Slider;

		intSliderGrp -label (uiRes("m_stitchSrfProperties.kSamples"))  -min 20 -max 400 -fmn 0 -fmx 1000 sampleCountField ;
		checkBoxGrp -ncb 1 -label1 (uiRes("m_stitchSrfProperties.kCascade"))  stitchNodeOptions ;
        setParent ..;

    setParent ..;

    // set the call back.
    //
	stitchSrfOtherCallbacks( $parent ) ;

    setUITemplate -popTemplate;
}


global proc stitchSrfProperties()
//
//  Description:
//      This procedure builds the property sheet and assigns callbacks to
//      its controls.  The state of the controls are set in stitchSrfValues().
//
//
{
	int $hasNodes = 0;

	string $parent = `toolPropertyWindow -q -location`;
	string $curctx = `currentCtx`;
	string $node = `stitchSurfaceCtx -q -tnq $curctx`;

	setUITemplate -pushTemplate OptionsTemplate;

	setParent $parent;
	columnLayout -adj true stitchSrf;
		separator -style "none";

		$parent = `setParent -query`;
		optionalStitchSurfaceProperties( $parent, "stitchSurfaceCtx");
		stitchSrfHistoryAttributes( $parent, $node, "none");
		stitchSrfHistoryLink( $parent, $node );
		commonModellingProperties($parent,"stitchSurfaceCtx") ;
		optionalCommonModellingSetCallbacks($parent, "stitchSurfaceCtx", 
											"dontShowOutputStyle", 
											"showKeepOriginals",
											"dontShowCurveRange",
											"dontShowRebuild");
	setParent ..; // columnLayout

	setUITemplate -popTemplate;
}

