// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

displayString -replace -value "    - ^1s has auto focus + reuse depth map turned on.\n      This may cause inconsistent shadow results if you produced the\n      the shadow map, then changed any of the angle of view, turned on/off\n      the shadow casting option for some objects, transformed objects,\n      turned off the auto focus, etc.  Might be best to turn off auto focus\n      when you produce the shadow map.\n" m_renderChecker.kAutoFocus;
displayString -replace -value "    - you have motion blur turned on.  Be aware that particles,\n      lights and shadows do not motion blur.  As well, motion\n      blurred shadows may produce artifacts - a thorough discussion\n      of the shadowing issues is available in the rendering release notes.\n" m_renderChecker.kBlur;
displayString -replace -value "    - 2d motion blur is used with a colored background.  This will likely\n      produce edge artifacts.  Turning on the 2d motion blur's 'smooth color'\n      attribute will resolve those artifacts.\n" m_renderChecker.kBlurColor;
displayString -replace -value "    - motion blur and raytracing are both turned on.  Please note\nthat reflections, refractions and shadows are not motion blurred.\n" m_renderChecker.kBlurRaytrace;
displayString -replace -value "    - ^1s has both its bump and environment map connected.  Please be\n      aware of the limitation that the reflection will not be bumped unless you\n      invoke a MEL proc - cnctBumpProjNormal MATERIAL - see rendering release notes.\n" m_renderChecker.kBumpEnv;
displayString -replace -value "    - you have specified output to the Cineon format.  This format\n      will not render out a mask channel.\n" m_renderChecker.kCineon;
displayString -replace -value "    - ^1s's Output Settings, Depth Type is set to 'Closest Visible Depth',\n      'Transparency Based Depth' is OFF and there are Paint Effects strokes in the scene. This can\n      result in a halo-like rim around objects which have Paint Effects behind them. To fix this,\n      open the Attribute Editor for the renderable camera (in this case ^2s)\n      and in the Output Settings section, select Depth, and set Depth Type to 'Furthest Visible Depth'.\n      If you require 'Closest Visible Depth' for some other reason, select 'Transparency Based Depth'\n      and set the 'Threshold' low enough to avoid the fringing. Start at a value of .25 and see if the\n      halo fringes around your objects are gone the next time you render. If not, you will need to reduce\n      the Threshold value further.\n" m_renderChecker.kClosestDepth;
displayString -replace -value "    - you have turned on composite rendering.  Be aware that the\n      rendering will appear aliased, but will be ideal once you complete\n      your compositing work.\n" m_renderChecker.kCompRender;
displayString -replace -value "    - ^1s is a degree 1 surface.  You can usually get\n      away with setting the tessellation at its minimum without loss of\n      rendering quality.\n" m_renderChecker.kDegreeOne;
displayString -replace -value "    - ^1s is a degree 1 surface.  You can usually get\n      away with setting the tessellation at its minimum without loss of\n      rendering quality.\n" m_renderChecker.kDegreeOne2;
displayString -replace -value "Diagnostic Completed...\n\n" m_renderChecker.kDiagComplete;
displayString -replace -value "    - ^1s's file texture name has more than one '.' delimiter.\n      This may produce erroneous frame parsing for animated textures.  Please refer\n      to the rendering release notes for more information on this restriction.\n" m_renderChecker.kFileTexture;
displayString -replace -value "    - you have quite a few file textures in use.  You might want to consider\n      using texture file caching to reduce memory usage.\n" m_renderChecker.kFileTextures;
displayString -replace -value "    - you have specified a fractional animation by-frame step.  This will result\n      in images over-writing each other for fractional frame counts.  Please\n      remember to turn on the modify-extension.\n" m_renderChecker.kFractional;
displayString -replace -value "    - there is shader glow in your scene, and autoExposure is turned on.\n      This may cause glow flicker over an animation.  To remedy this,\n      render one frame in which the glow intensity looks desirable, then\n      apply the normalization factor (from the rendering output) as the\n      glow intensity to the shader glow node, and also turn off autoExposure.\n      For more information, please refer to the rendering reference manual.\n" m_renderChecker.kGlow;
displayString -replace -value "    - ^1s has the shadow map filter set at a very\n      high value.  This can make shadow map rendering very expensive.\n      We recommend that this value be lowered.\n" m_renderChecker.kHighFilter;
displayString -replace -value "    - ^1s has the shadow map resolution set at a very\n      high value.  Note that the shadow blockiness artifact has been fixed\n      and thus you don't need high resolution maps to get good shadow quality.\n" m_renderChecker.kHighMapRes;
displayString -replace -value "    - the raytrace reflection limit is very high.  This can result\n      very long rendering times, particularly with a high refraction\n      limit and transparent surfaces.\n" m_renderChecker.kHighReflection;
displayString -replace -value "    - your render quality's shading sample value is quite high.  This\n      will slow down the render times.  If the image quality is not high enough,\n      it is best to increase the maximum shading samples value or turn on multi-\n      pixel filtering.  If that does not work, consider decreasing the contrast\n      threshold values (see Contrast Sensitive Production preset) to anti-\n      alias details better.  If that fails, please refer to the user manual,\n      \"Optimizing Maya's Renderer\", for tricks + tips to get better image quality.\n" m_renderChecker.kHighSample;
displayString -replace -value "    - ^1s has a high tessellation count: ^2s.\n      It will be worthwhile to reduce the tessellation amount.\n" m_renderChecker.kHighTess;
displayString -replace -value "    - your render quality's visibility sample value is quite high.  This\n      will slow down the render times.  If the image quality is not high enough,\n      it is best to increase the maximum visibility samples value first.  If it\n      does not work, please refer to the user manual, under \"Optimizing Maya's\n      Renderer\" for tricks + tips to get better image quality.\n" m_renderChecker.kHighVis;
displayString -replace -value "Speed/Memory Implications\n" m_renderChecker.kImplications;
displayString -replace -value "    - ^1s appears to be an instanced light.  It is best\n      to avoid instanced lights - copying lights would be recommended.\n" m_renderChecker.kInstancedLight;
displayString -replace -value "Known Problems/Limitations\n" m_renderChecker.kKnownProbs;
displayString -replace -value "    - '^1s' is a layered shader at the top level.\n      It would be more optimal for the lambert/phong/phongE shader\n      to be at the top level of the shading network, and layer\n      textures in the rest of the shading network.\n" m_renderChecker.kLayered;
displayString -replace -value "    - ^1s Light glow for (^2s) is not connected to the postProcessList1.\n      This will slow down the renderer and yet light glow for this node will not\n      appear in the final rendering. \n" m_renderChecker.kLightGlow;
displayString -replace -value "    - ^1s is casting depth map shadows with 'Use Mid Dist Dmap' enabled and there\n      are Paint Effects strokes in the scene. Paint Effects strokes may not shadow correctly or may not\n      cast shadows correctly if 'Use Mid Dist Dmap' is on for shadow maps. It is best to de-select the\n      'Use Mid Dist Dmap' option for shadow casting lights when Paint Effects are in the scene.\n" m_renderChecker.kMidDistDmap;
displayString -replace -value "    - ^1s is missing a file texture on disk.\n" m_renderChecker.kMissingTexture;
displayString -replace -value "    - you have 3d motion blur turned on.  Since v2, there is a new feature\n      utilizing 2d motion blur which should work just as well, except\n      with rotational blurring.  With 2d motion blur, rendering will be\n      much faster, and a much lower shading sampling rate is needed.\n" m_renderChecker.kMotionBlur3d;
displayString -replace -value "    - ^1s's near/far clipping values are too far apart - you may\n      enounter numerical imprecision resulting in incorrect renders.\n" m_renderChecker.kNearFar;
displayString -replace -value "    - there are no renderable cameras in your scene.\n" m_renderChecker.kNoCamera;
displayString -replace -value "    - ^1s's rendering won't have the color channel written out.\n" m_renderChecker.kNoColor;
displayString -replace -value "    - ^1s does not have a geometry connected to the glowVisibility attribute.\n      This lightGlow can never be occluded.\n" m_renderChecker.kNoGeom;
displayString -replace -value "    - ^1s has no shading group associated with it.  This\n      means that it will not be rendered.  This is usually a residue of\n      disconnection of light fog/glow. You may wish to delete this.\n" m_renderChecker.kNoGroup;
displayString -replace -value "    - ^1s has no shading group associated with it.  This\n      means that it will not be rendered.  Please assign it to a shading group.\n" m_renderChecker.kNoGroup2;
displayString -replace -value "    - ^1s has no shading group associated with it.  This\n      means that it will not be rendered.  Please assign it to a shading group.\n" m_renderChecker.kNoGroup3;
displayString -replace -value "    - you have no lights to illuminate your scene.\n" m_renderChecker.kNoLights;
displayString -replace -value "    - output to GIF/EPS/JPEG formats will result in the mask channel not being\n      written.\n" m_renderChecker.kNoMask;
displayString -replace -value "    - ^1s has no port connected.  This can be dangerous for rendering.\n" m_renderChecker.kNoPort;
displayString -replace -value "    - raytracing is turned on, but no objects have been marked for raytracing.\n" m_renderChecker.kNoRayMarks;
displayString -replace -value "    - raytracing shadows are specified but the Render Settings' raytracing flag\n      is not turned on.  Those raytracing shadows will not be computed.\n" m_renderChecker.kNoRayShadows;
displayString -replace -value "    - no RT reflections will be rendered (renderQuality's global RT reflection control is switched off).\n" m_renderChecker.kNoReflect;
displayString -replace -value "    - no RT refractions will be rendered (renderQuality's global RT refraction control is switched off).\n" m_renderChecker.kNoRefract;
displayString -replace -value "    - no RT shadows will be rendered (renderQuality's global RT shadow control is switched off).\n" m_renderChecker.kNoShadow;
displayString -replace -value "      Furthermore, performance can be severely affected when used with non-mipmap mode.\n" m_renderChecker.kNonMipMap;
displayString -replace -value "    - using Render->Set NURBS Tessellation[] can improve image quality\n      and reduce render time by automatically setting the optimum\n      tessellation based on distance from the camera. The tessellation\n      can be computed for multiple surfaces across all frames in the\n      animation.\n" m_renderChecker.kNurbsTess;
displayString -replace -value "    - it can be useful to run your scene through \"maya -optimizeRender\"\n      before rendering.  This can help optimize the scene for rendering.\n" m_renderChecker.kOptimize;
displayString -replace -value "    - you have specified output to the Quantel format.  This format may only\n      be output to NTSC/PAL/HDTV resolutions, and does not output to fields.\n      If the above restrictions are not met, rendering will default to IFF\n      image output.\n" m_renderChecker.kQuantel;
displayString -replace -value "    - you have raytracing turned on.  Keep in mind that raytracing is\n      inherently slow and the memory usage tends to be very large.\n" m_renderChecker.kRayOn;
displayString -replace -value "    - ^1s has raytrace shadows turned on.  Raytrace shadows\n      can be expensive.  Doing depth map shadows may be more economical, and\n      should be used unless transparent shadows are desired.\n" m_renderChecker.kRayShadExp;
displayString -replace -value "    - ^1s has 'Use Ray Trace Shadows' selected and there are Paint Effects strokes in the scene.\n      Paint Effects strokes cannot cast raytrace shadows, they can only cast depth map shadows or fake shadows\n      (as specified on the brush). Paint Effects strokes will also not be visible in raytraced reflections and\n      refractions. If you wish to raytrace Paint Effects, you will need to devise reflection mapping or\n      compositing solutions.\n" m_renderChecker.kRayTraceShadows;
displayString -replace -value "    - ^1s has a high tessellation count of at least ^2s\n      triangles. It will be worthwhile to reduce the tessellation amount.\n" m_renderChecker.kReduceTess;
displayString -replace -value "     - ^1s is probably a residue of light fog/glow creation/disconnection.\n      Rendering will slow down and yet there will be no effect on the final image.\n" m_renderChecker.kResidue;
displayString -replace -value "    - ^1s is tesselated with the screen-space option.\n      If this object also contains a solid texture, the different tessellations\n      over an animation may result in the appearance of solid texture flicker.\n" m_renderChecker.kScreenSpace;
displayString -replace -value "    - ^1s's filter value is very small.  This can result in bad aliasing.\n" m_renderChecker.kSmallFilter;
displayString -replace -value "    - The Render Settings Paint Effects Rendering Option 'Only Render Strokes' is enabled, but you have\n      not supplied a source depth file for the Paint Effects to render against. This means that all Paint\n      Effects strokes will render regardless of their visibility when they are composited into your final\n      scene. If the file you supply as a depth file has no color information, the Paint Effects strokes\n      will render against the background color. If the depth file has color, the Paint Effects strokes will\n      render against the depth file's image. Allowing Paint Effects to render against the depth file's image\n      will produce superior results to what a post-process compositing package can do. The Paint Effects\n      rendering process uses a multi-depth buffer compositing process which cannot be duplicated in a\n      post-process composite. See the Paint Effects documentation for more information on how to use\n      'Only Render Strokes' to add Paint Effects to existing images (which is the best way to use non-Maya\n      renderers and combine Paint Effects with their output.\n" m_renderChecker.kSourceDepth;
displayString -replace -value "Starting diagnostics...\n\n\n" m_renderChecker.kStarting;
displayString -replace -value "    - the animation by-frame step is 0.  Please be aware that this may result\n      in an infinite loop - 0 for by-frame is not meaningful.\n" m_renderChecker.kStepZero;
displayString -replace -value "    - The Render Settings Paint Effects Rendering Option 'Only Render Strokes' is enabled. This means that\n      a primary rendering pass is not being performed, only strokes will be rendered. A consequence of this\n      is that shadow maps are not being generated so shadowing of Paint Effects strokes, and the shadows of\n      Paint Effects strokes may be wrong. To have shadows properly cast onto Paint Effects strokes, be sure\n      that the lights in the scene have their 'Disk Based Dmaps' attribute set to 'Reuse Existing Dmap(s)'.\n      To have Paint Effects strokes cast shadows properly, do a shadow map rendering pass before rendering\n      your geometry image; set all shadow depth map producing light's 'Disk Base Dmaps' to 'Overwrite Existing\n      Dmap(s)' and render the full scene with 'Only Render Strokes' de-selected (OFF). Then set the 'Disk Based Dmaps'\n      back to 'Reuse Existing Dmap(s)' and 'Enable Stroke Rendering' de-selected, and then render the geometry\n      only pass.\n" m_renderChecker.kStrokes;
displayString -replace -value "    - you have specified output to the TIFF format.  This will write out LZW\n      compressed TIFF images for version 5.  Applications which can only handle\n      version 4 TIFF may not be able to read Maya's TIFF images.  A possible\n      workaround is to write to uncompressed TIFF images, which can be achieved\n      by typing \"setenv IMF_TIFF_COMPRESSION none\".  Uncompressed TIFF is also\n      ideal for Zap!It.\n" m_renderChecker.kTiff;
displayString -replace -value "    - ^1s has useMaximumRes turned on.  This attribute is not intended\n      to provide highest image quality, but use the highest resolution in the mipmap.\n      As such, it may even produce undersirable artifacts.  To turn it off, type:\n      setAttr ^2s.umr 0.\n" m_renderChecker.kUseMaxRes;
displayString -replace -value "Warnings\n" m_renderChecker.kWarnings;
displayString -replace -value "    - ^1s has zero scale.  This can be a problem\n      for optimize instances, so either turn optimize instances off\n      in renderGlobals or make it invisible instead of zero scale.\n      Zero-scale may also have problems with texture maps or shadow maps.\n" m_renderChecker.kZeroScale;
