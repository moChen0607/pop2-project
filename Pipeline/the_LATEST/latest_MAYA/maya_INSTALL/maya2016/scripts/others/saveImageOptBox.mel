// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

proc createOptionsUI()
{
	setUITemplate -pushTemplate DefaultTemplate;
	waitCursor -state 1;
        
	string $parent = `columnLayout -adjustableColumn 1`;

    radioButtonGrp -nrb 1 -label (uiRes("m_saveImageOptBox.kSaveMode")) 
		-label1 (uiRes("m_saveImageOptBox.kSaveRaw"))
		renderViewSaveModeRadio;

	radioButtonGrp -nrb 1
		-label1 (uiRes("m_saveImageOptBox.kSaveColorManged"))
		-shareCollection renderViewSaveModeRadio
		renderViewSaveModeRadio2;

    int $mode = 0;
    if( `optionVar -exists renderViewSaveMode` )
    {
        $mode = `optionVar -q renderViewSaveMode`;
    }

    switch ($mode)
    {
    case 1:
	    radioButtonGrp -e -select 1 renderViewSaveModeRadio2;
	    break;
    default:
	    radioButtonGrp -e -select 1 renderViewSaveModeRadio;
	    break;
    }

	waitCursor -state 0;
	setUITemplate -popTemplate;
}

global proc saveImageOptionsCreate(string $parent)
{
	setParent $parent;
	$parent = `scrollLayout -childResizable true`;

	createOptionsUI();
}

global proc setRenderViewSaveMode(string $parent)
{
	setParent $parent;

	if (`radioButtonGrp -q -select renderViewSaveModeRadio2`)
		optionVar -intValue renderViewSaveMode 1;
	else 
		optionVar -intValue renderViewSaveMode 0;
}

global proc resetRenderViewSaveMode(string $parent)
{
	setParent $parent;
	optionVar -intValue renderViewSaveMode 0;
	radioButtonGrp -e -select 1 renderViewSaveModeRadio;
}

global proc saveImageOptBox ()
{
	string $layout = getOptionBox();
	setParent $layout;

	createOptionsUI();

	string $applyBtn = getOptionBoxApplyBtn();
	button -edit -command ("setRenderViewSaveMode " + $layout)
		$applyBtn;
	string $saveBtn = getOptionBoxSaveBtn();
	button -edit -command ("setRenderViewSaveMode " + $layout)
		$saveBtn;
	string $resetBtn = getOptionBoxResetBtn();
	button -edit -command ("resetRenderViewSaveMode " + $layout)
		$resetBtn;
                         
	setOptionBoxTitle (uiRes("m_saveImageOptBox.kRenderViewSaveOptions"));

	showOptionBox();
}
