// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Description:
//      Procedure to register and initialize localizable 
//      string resources for the cgfxShader plugin. 
//


global proc cgfxShaderPluginInitStrings()
{
	registerPluginResource("cgfxShader", "kCgFXShader", "CgFX Shader");
	registerPluginResource("cgfxShader", "kCgFXParameters", "CgFX Parameters");
	registerPluginResource("cgfxShader", "kCgFXFile", "CgFX File");
	registerPluginResource("cgfxShader", "kVertexData", "Vertex Data");
	registerPluginResource("cgfxShader", "kNoneDefined", "None defined");
	registerPluginResource("cgfxShader", "kTechnique", "Technique");
	registerPluginResource("cgfxShader", "kOpen", "Open");
	registerPluginResource("cgfxShader", "kEdit", "Edit");
	registerPluginResource("cgfxShader", "kReload", "Reload");
	registerPluginResource("cgfxShader", "kSave", "Save");
	registerPluginResource("cgfxShader", "kCreate", "Create");
	registerPluginResource("cgfxShader", "kDelete", "Delete");
	registerPluginResource("cgfxShader", "kClose", "Close");
	registerPluginResource("cgfxShader", "kOpenFileAnn", "Open CgFX file in its default application");
	registerPluginResource("cgfxShader", "kEditWindowsAnn", "Edit CgFX file with Notepad");
	registerPluginResource("cgfxShader", "kEditMacAnn", "Edit CgFX file with your TextEdit");
	registerPluginResource("cgfxShader", "kEditAnn", "Edit CgFX file with your text editor");
	registerPluginResource("cgfxShader", "kReloadAnn", "Reload CgFX file");
	registerPluginResource("cgfxShader", "kEditActionDefinition", "Edit the action definition");
	registerPluginResource("cgfxShader", "kButtonNotAssigned", "Button does nothing; not assigned.");
	registerPluginResource("cgfxShader", "kAddNewMenuAction", "Add a new action to this menu");
	registerPluginResource("cgfxShader", "kName", "Name");
	registerPluginResource("cgfxShader", "kDescription", "Description");
	registerPluginResource("cgfxShader", "kInsertVariable", "Insert variable");
	registerPluginResource("cgfxShader", "kCommands", "Commands");
	registerPluginResource("cgfxShader", "kShaderDescription", "Shader description");
	registerPluginResource("cgfxShader", "kShaderHelp", "Shader help - Click to browse");
	registerPluginResource("cgfxShader", "kShaderHelpUnavailable", "Shader help not available.  No URL declaration in CgFX file.");
	registerPluginResource("cgfxShader", "kPosition", "position");
	registerPluginResource("cgfxShader", "kNormal", "normal");
	registerPluginResource("cgfxShader", "kEmpty", "empty");
	registerPluginResource("cgfxShader", "kChooseVertexAttributeValueSource", "RMB to choose source of vertex attribute values");
	registerPluginResource("cgfxShader", "kChooseTEXCOORDAttributeValueSource", "RMB to choose source of TEXCOORD values");
	registerPluginResource("cgfxShader", "kShowAnotherTEXCOORD", "Show another TEXCOORD");
	registerPluginResource("cgfxShader", "kHideLastTEXCOORD", "Hide last TEXCOORD");
	registerPluginResource("cgfxShader", "kSetOptionVarWarning", "Please set the ^1s optionVar before using this feature.");
	registerPluginResource("cgfxShader", "kToolButtonEditor", "cgfxShader Tool Button Editor");
	registerPluginResource("cgfxShader", "kChooseButtonAction", "Choose button action:");
	registerPluginResource("cgfxShader", "kNothing", "(nothing)");
	registerPluginResource("cgfxShader", "kNewAction", "New action...");
	registerPluginResource("cgfxShader", "kTexcoordValuesareForced", "TEXCOORD values are forced to (0,0) for the UV set names listed here.");
	registerPluginResource("cgfxShader", "kRmbToChooseSource", "RMB to choose source of COLOR values");
	registerPluginResource("cgfxShader", "kProfile", "Profile");
	registerPluginResource("cgfxShader", "kDefault", "Default");
	registerPluginResource("cgfxShader", "kSettingUpPopup", "Setting up popup on node ");
	registerPluginResource("cgfxShader", "kInternalError", "AEcgfxShaderTemplate.mel internal error");
	registerPluginResource("cgfxShader", "kCgFXVector", "CgFX Vector");
	registerPluginResource("cgfxShader", "kParameters", " Parameters");

    loadPluginLanguageResources("cgfxShader", "cgfxShader.pres.mel");
}
