// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

displayString -replace -value "Alphabetical" m_mapcharWindow.kAlphabetical;
displayString -replace -value "^1s is not a character." m_mapcharWindow.kCharError;
displayString -replace -value "Character Mapper" m_mapcharWindow.kCharacterMapper;
displayString -replace -value "Character Mapper" m_mapcharWindow.kCharacterMapperTitle;
displayString -replace -value "Clear All" m_mapcharWindow.kClearAll;
displayString -replace -value "Close" m_mapcharWindow.kClose;
displayString -replace -value "Display Channel Names" m_mapcharWindow.kDisplayChannelNames;
displayString -replace -value "Display Node Names" m_mapcharWindow.kDisplayNodeNames;
displayString -replace -value "Edit" m_mapcharWindow.kEdit;
displayString -replace -value "From:" m_mapcharWindow.kFrom;
displayString -replace -value "Help on Character Mapper" m_mapcharWindow.kHelpCharacterMapper;
displayString -replace -value "Hierarchical" m_mapcharWindow.kHierarchical;
displayString -replace -value "Source and target must be loaded." m_mapcharWindow.kLoadError;
displayString -replace -value "Load Source" m_mapcharWindow.kLoadSource;
displayString -replace -value "Load source side of editor based on selected character or selected object" m_mapcharWindow.kLoadSourceAnnot;
displayString -replace -value "Load Target" m_mapcharWindow.kLoadTarget;
displayString -replace -value "Load target side of editor based on selected character or selected object" m_mapcharWindow.kLoadTargetAnnot;
displayString -replace -value "Map" m_mapcharWindow.kMap;
displayString -replace -value "Map Based on Hierarchy" m_mapcharWindow.kMapBasedHierarchy;
displayString -replace -value "Map Based on Node Names" m_mapcharWindow.kMapBasedNodeNames;
displayString -replace -value "Map Based on Order" m_mapcharWindow.kMapBasedOrder;
displayString -replace -value "Can't map an object to itself." m_mapcharWindow.kMapError;
displayString -replace -value "Map" m_mapcharWindow.kMapOption;
displayString -replace -value "Map selected source item to selected target item" m_mapcharWindow.kMapSelectedSourceAnnot;
displayString -replace -value "Mapped" m_mapcharWindow.kMapped;
displayString -replace -value "Refresh" m_mapcharWindow.kRefresh;
displayString -replace -value "Couldn't find root node for both characters." m_mapcharWindow.kRootNodeError;
displayString -replace -value "Select a single character or object in a character." m_mapcharWindow.kSelectionError;
displayString -replace -value "Show" m_mapcharWindow.kShow;
displayString -replace -value "To:" m_mapcharWindow.kTo;
displayString -replace -value "Type name of character to be mapped from" m_mapcharWindow.kTypeNameFromAnnot;
displayString -replace -value "Type name of character to be mapped to" m_mapcharWindow.kTypeNameToAnnot;
displayString -replace -value "Unmap" m_mapcharWindow.kUnmap;
displayString -replace -value "Unmap All" m_mapcharWindow.kUnmapAll;
displayString -replace -value "Unmapped" m_mapcharWindow.kUnmapped;
displayString -replace -value "Unmap" m_mapcharWindow.kUpdateUnmap;
