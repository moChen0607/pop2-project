// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//<doc>
//<name stringRemovePrefix>
//
//<synopsis>
//	string stringRemovePrefix(string $object, string $prefix )
//
//<description>
//	Return a new string whose contents is equivalent to $object without $prefix
//
//<flags>
//	string $object  The input string.
//
//	string $prefix  The string to be removed from the beginning of $object.
//
//<returns>
//	string : A new string whose contents is equivalent to $object without $prefix.
//
//<related stringAddPrefix stringArrayAddPrefix stringArrayRemovePrefix >
//
//<examples>
//
// stringRemovePrefix( "a", "" );
// // ,Result:, a // 
//
// size( stringRemovePrefix( "", "a" ) );
// // ,Result:, 0 // 
//
// stringRemovePrefix( "aa", "a" );
// // ,Result:, a // 
//
// stringRemovePrefix( "a", "___" );
// // ,Result:, a // 
//
// stringRemovePrefix( "a", "abc" );
// // ,Result:, a // 
//
// size( stringRemovePrefix( "a", "a" ) );
// // ,Result:, 0 // 
//
//</doc>
//
global proc string stringRemovePrefix( string $object, string $prefix )
{
	int $m = size( $prefix );
	if ( $m > 0 )
	{
		int $n = size( $object );
		if ( $n && substring( $object, 1, $m ) == $prefix )
			$object = ( $m != $n ) ?
				substring( $object, $m+1, $n ) :
				"" ;
	}
	return $object;
}