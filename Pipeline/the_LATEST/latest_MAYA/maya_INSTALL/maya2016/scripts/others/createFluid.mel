// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  2000
//


global proc string createFluid( int $is2d )
{
	if( `artFluidAttrCtx -exists artFluidAttrContext` ) {
		artFluidAttrCtx -e -dsc true artFluidAttrContext;
	}
		
	string $flShad = `shadingNode -asShader fluidShape`;

// 	setAttr -lock yes ($flShad + ".is2d") $is2d;
 	setAttr ($flShad + ".is2d") $is2d;

	// 2D fluid should show outline by default, but for
	// a 2D fluid this means Outline, not Bottom.
	if( $is2d ) {
		setAttr ($flShad + ".boundaryDraw") 2;
		setAttr ($flShad + ".resolutionD") 1;
	}
	

	// Use startFrame to make sure that unit conversion happens tastefully
	// and that attribute editor is up to date
	setAttr ($flShad + ".startFrame") 1;
	connectAttr time1.outTime ($flShad + ".currentTime");
	string $flSG = `sets -renderable true -noSurfaceShader true -empty -name ($flShad + "SG")`;
	connectAttr -f ($flShad +".outColor") ($flSG + ".volumeShader");
	connectAttr -f ($flShad +".instObjGroups[0]") ($flSG + ".dagSetMembers[0]");
	if( `artFluidAttrCtx -exists artFluidAttrContext` ) {
		artFluidAttrCtx -e -delaySelectionChanged false artFluidAttrContext;
	}
	return( $flShad );
}	
	
