// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  20 Feb 2002
//
//  Description:
//      Make sure the fluid's resolution matches its cache
//		
//
global proc fluidCheckResolutionAgainstCaches() {
	if( !`exists getActiveFluidShapes` ) {
		source "getFluidShape.mel";
	}

	string $activeFluids[] = getActiveFluidShapes();
	for( $fluid in $activeFluids ) {
		float $fRes[] = `getAttr ($fluid + ".resolution")`; 
		int $errorCondition = 0;

		int $hasCache = `fluidCacheInfo -hasCache -ic $fluid`;
		
		if( $hasCache == 1 ) {
			int $icRes[] = `fluidCacheInfo -ic -re $fluid`;
			if( $icRes[0] != $fRes[0] 
			||  $icRes[1] != $fRes[1] 
			||  $icRes[2] != $fRes[2] )
			{ 
				$errorCondition += 1;
			}
		}
		
		$hasCache = `fluidCacheInfo -hasCache -pb $fluid`;
		
		if( $hasCache == 1 ) {
			int $pbRes[] = `fluidCacheInfo -pb -re $fluid`;
			if( $pbRes[0] != $fRes[0] 
			||  $pbRes[1] != $fRes[1] 
			||  $pbRes[2] != $fRes[2] ) 
			{ 
				$errorCondition += 2;
			}
		}

		string $noMatch = ( "The resolution of \'" + $fluid + "\' does not " +
							"match the resolution of its " );
		
		string $rebuild;
		string $rebuildPB = "To rebuild the cache, use \'Create Cache\'.  ";
		string $rebuildIC = ( "To rebuild the Initial State, use \'Set as " +
							  "Initial State\'.  " );
		string $changeRes = ( "To change a fluid's resolution, use \'Edit Fluid " +
							  "Resolution\'." );
		
		if( $errorCondition > 2 ) {
			$noMatch += "cache or Initial State.  ";
			$rebuild = $rebuildPB + $rebuildIC;
		} else if( $errorCondition > 1 ) {
			$noMatch += "cache.  ";
			$rebuild = $rebuildPB;
		} else if( $errorCondition > 0 ) {
			$noMatch += "Initial State.  ";
			$rebuild = $rebuildIC;
		}
		
		if( $errorCondition > 0 ) {
			warning( $noMatch );
			warning( $rebuild );
			warning( $changeRes );
		}
	}
}

