// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

global proc convertToSelectionBorder(int $compType, int $doSelect, string $borderComps[], string $containedFaces[])
{
    string $sel[] = `ls -sl`;

    $containedFaces = `polyListComponentConversion -ff -fv -fe -fuv -fvf -tf -in $sel`;
	if (0 == size($containedFaces))
	{
		// if there are no contained faces, then we'll convert everything to faces and see what we get
		$containedFaces = `polyListComponentConversion -ff -fv -fe -fuv -fvf -tf $sel`;
	}

	if (0 == size($containedFaces))
	{
		return;
	}

	$borderComps = `polyListComponentConversion -ff -te -bo $containedFaces`;

	switch ($compType) {
	case 0:
		$borderComps = `polyListComponentConversion -fe -tv $borderComps`;
		break;
	case 1:
		$borderComps = `polyListComponentConversion -fe -tuv $borderComps`;
		break;
	default:
		break;
	}

	if ($doSelect)
	{
		if (`selectMode -q -object`) 
		{
			selectType -ocm -alc false;

			switch ($compType) {
			case 0:
				selectType -ocm -polymeshVertex true;
				break;
			case 1:
				selectType -ocm -polymeshUV true;
				break;
			default:
				selectType -ocm -polymeshEdge true;
				break;
			}
		} 
		else 
		{
			selectType -alc false;

			switch ($compType) {
			case 0:
				selectType -polymeshVertex true;
				break;
			case 1:
				selectType -polymeshUV true;
				break;
			default:
				selectType -polymeshEdge true;
				break;
			}
		}

		select $borderComps;
	}
}
