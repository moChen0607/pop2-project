// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
// Creation Date:  14 January 1999
//
//
//  Procedure Name:
//      attachCrvToolScript
//
//  Input Arguments:
//      what is going to happen when this script is called
//		$setToTool = 0 ==> do the command
//		$setToTool = 1 ==> show option box
//		$setToTool = 2 ==> return the command
//		$setToTool = 3 ==> show tool option box
//		$setToTool = 4 ==> enter the tool
//
//  Return Value:
//      None.
//

global proc attachCrvToolSetup( int $forceFactorySettings, string $goToTool )
{
	global int $gStartWithAutoComplete;
	if( $forceFactorySettings || !`optionVar -ex attachCurveEuc` ) {
		optionVar -iv attachCurveEuc 0;
	}
	if( $forceFactorySettings || !`optionVar -ex attachCurveLac` ) {
		optionVar -iv attachCurveLac $gStartWithAutoComplete;
	}
	if( "" != $goToTool ) {
		scriptCtx -e -euc `optionVar -q attachCurveEuc` $goToTool;
		scriptCtx -e -lac `optionVar -q attachCurveLac` $goToTool;
	}
}

global proc attachCurveValues ( string $toolName ) 
{
	performAttachCrv 3 $toolName;
	scriptCtxCommonValues( $toolName );
}

global proc attachCurveProperties()
{
	scriptCtxCommonProperties;
}

proc createAttachCrvContext( string $tool )
{
	if( ! `scriptCtx -exists $tool` ) {
		attachCrvToolSetup( 0, "" );
		scriptCtx
		  -i1 "attachCurves.png"
		  -bcn "attachCurve"

		  -title (uiRes("m_attachCrvToolScript.kAttachTool"))
		  -totalSelectionSets 1
		  -expandSelectionList true
		  -fcs ("attachCrvToolScript 0")

		  -setNoSelectionPrompt (uiRes("m_attachCrvToolScript.kSelectTwoCurves"))
		  -setSelectionPrompt (uiRes("m_attachCrvToolScript.kSelectSecondCurve"))
		  -setDoneSelectionPrompt (uiRes("m_attachCrvToolScript.kCompleteAttach"))

		  -setAutoToggleSelection true
		  -showManipulators true
		  -nurbsCurve true
		  -curveParameterPoint true
		  -curveOnSurface true

		  -lastAutoComplete `optionVar -q attachCurveLac` 
		  -setSelectionCount 2 

		  // If this was true, the tool would exit
		  // once the attach has been completed
		  -exitUponCompletion `optionVar -q attachCurveEuc` 
		$tool;
	}
}

global proc string attachCrvToolScript( int $setToTool )
//
//	Description :
//		$setToTool = 0 ==> do the command
//		$setToTool = 1 ==> show option box
//		$setToTool = 2 ==> return the command
//		$setToTool = 3 ==> show tool/action option box
//		$setToTool = 4 ==> enter the tool/do the command
{
	string $tool = "";
	if( $setToTool > 2 ) {
		if( !`optionVar -q modelWithToolAttachCurve` ) {
			$setToTool = 4 - $setToTool;
		}
		else {
			$tool = "attachCrvContext";
			createAttachCrvContext $tool;
		}
	}
	return scriptToolScript( "performAttachCrv", $setToTool, $tool );
}
