// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.


proc scriptedPanelRunTimeCmdPanZoom( string $currentPanel )
{
	string $scriptedType = `scriptedPanel -q -type $currentPanel`; 

	global string $gScriptedModelEditorTypes[]; 
	global string $gScriptedModelEditorList[]; 
	int $typeCount = size( $gScriptedModelEditorTypes ); 
	int $editorCount = size( $gScriptedModelEditorList ); 
	for ( $i = 0; $i < $typeCount; $i ++ ) { 
		if ( $scriptedType == $gScriptedModelEditorTypes[$i] && $i < $editorCount ) 
		{
		    string $camera = `modelEditor -q -camera $gScriptedModelEditorList[$i]`;
		    int $panZoomEnabled = !`camera -q -panZoomEnabled $camera`;
		    camera -e -panZoomEnabled $panZoomEnabled $camera;			
			break; 
		}
	}
}

global proc deactivatePanZoom() {
	global string $gPanZoomCtx;
    global float $gPanZoomBtnDown;
    panZoomCtx -e -buttonUp $gPanZoomCtx; 
    float $gPanZoomBtnUp = `timerX -startTime $gPanZoomBtnDown`;

    if($gPanZoomBtnUp < 0.3) {
         string $currentPanel = `getPanel -underPointer`;
         if ("" == $currentPanel) {
             $currentPanel = `getPanel -withFocus`;
         }
         if ("" != $currentPanel) {
             string $panelType = `getPanel -typeOf $currentPanel`;
             if ($panelType ==  "modelPanel") {
                 string $camera = `modelEditor -q -camera $currentPanel`;
                 int $panZoomEnabled = !`camera -q -panZoomEnabled $camera`;
                 camera -e -panZoomEnabled $panZoomEnabled $camera;
             } else if ($panelType ==  "scriptedPanel") {
                 scriptedPanelRunTimeCmdPanZoom( $currentPanel );
             }
         }
    }
}