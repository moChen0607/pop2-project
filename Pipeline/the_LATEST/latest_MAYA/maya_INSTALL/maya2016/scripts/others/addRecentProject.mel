// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  December 10, 1999
//
//  Description:
//      addRecentProject, used currently used by Project Viewer.
//		adds projects to the recent project list.
//



global proc addRecentProject( string $theProject )
{
	string $RecentProjectsList[];
	int $i;
	int $nNum;
	int $maxNum;

	string $project = $theProject;
	// Strip off slash from the end if it's there (and not the only char)
	if ( size( $theProject ) > 1 && 
		 (gmatch($theProject, "*/") || gmatch($theProject, "*\\\\")) )
	{
		$project = substitute( "/$", $theProject, "" );
	}

	$maxNum = `optionVar -q "RecentProjectsMaxSize"`;

	if (!`optionVar -exists "RecentProjectsList"`)
	{
		if ( $maxNum > 0 )
			optionVar -sva "RecentProjectsList" $project;
		return;
	}

	// get the list
	$RecentProjectsList = `optionVar -q "RecentProjectsList"`;
	$nNum = size($RecentProjectsList);

	// search for name in the list.
	for ($i = 0; $i < $nNum; $i++)
	{
		if ($RecentProjectsList[$i] == $project)
		{
			// move it to the top.
			optionVar -rfa "RecentProjectsList" $i;
			optionVar -sva "RecentProjectsList" $project;
			return;
		}
	}

	// not found, append at the end.
	optionVar -sva "RecentProjectsList" $project;
	$nNum = `optionVar -arraySize "RecentProjectsList"`;
	if ( $nNum > $maxNum )  // default maximum size
	{
		for ( $i = 0; $i < $nNum - $maxNum; $i++ )
		{
			// remove the oldest one.
			optionVar -rfa "RecentProjectsList" 0;
		}
	}
}
