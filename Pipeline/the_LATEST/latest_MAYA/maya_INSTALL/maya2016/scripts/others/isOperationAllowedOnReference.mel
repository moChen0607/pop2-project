// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

global proc string isOperationAllowedOnReference(string $op, string $refNode)
//
//	Description:
//		Determine whether the specified reference operation is allowed on the 
//	specified reference node. The routine returns a warning message describing 
//  the reason that the operation is not allowed.
//
//		expeccted values of $op and corresponding return values:
//		addProxy		->	Reference proxies cannot be added to file references when used within assembly representations.
//		removeProxy		->	Reference proxies cannot be removed from file references when used within assembly representations.
//
{
	string $warningMsg = "";
	
	python("import maya.app.general.assemblyUtils as assemblyUtils");
	string $command = "assemblyUtils.isReferenceInAssembly(\"" + $refNode + "\")";
	int $isReferenceInAssembly = python($command);
	if($isReferenceInAssembly)
	{
		if("addProxy" == $op)
		{
			$warningMsg = (uiRes("m_isOperationAllowedOnReference.kCannotAddProxyInAssembly"));
		}
		else if("removeProxy" == $op)
		{
			$warningMsg = (uiRes("m_isOperationAllowedOnReference.kCannotRemoveProxyInAssembly"));
		}
	}
	
	return $warningMsg;
}
