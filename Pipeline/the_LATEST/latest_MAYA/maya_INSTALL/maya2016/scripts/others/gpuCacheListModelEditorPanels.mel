// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

// Returns the list of existing model editor panels that have a valid
// controller.
global proc string[] gpuCacheListModelEditorPanels()
{
    string $editors[] = `lsUI -editors -long`;
    string $result[];
    
    for ($editor in $editors) {

        // Double check that the editor of type modelEditor which
        // should correspond to an M3dView.
        if ( `objectTypeUI -isType "modelEditor" $editor` ) {
            if ( `modelEditor -q -ex $editor` ) {
                string $control = `modelEditor -q -control $editor`;
                string $panel   = `modelEditor -q -panel   $editor`;
                
                // An active modelEditor must have a valid
                // controller. Note that for some scriptedPanel
                // editor, the string "NONE" will be returned when no
                // controller is actually connected. This is the case
                // of the StereoPanelEditor for example.
                if (size($control) > 0 && $control != "NONE" &&
                    `control -q -ex $control`) {

                    // Note that modelEditor don't necessarilly have
                    // an associated panel. For example, the
                    // narrowPolyViewer creates a modelEditor without
                    // an associated panel! Fortunately, the
                    // MUiMessage::add3dViewPostRenderMsgCallback()
                    // API seems to accept either the panel name or
                    // the editor name even though this is not
                    // documented per se.
                    $result[size($result)] = $editor;
                }
            }
        }
    }

    return $result;
}

