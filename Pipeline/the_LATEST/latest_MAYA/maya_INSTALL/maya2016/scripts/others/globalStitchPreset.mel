// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  October 1998
//
//  Description:
//      The globalStitchPreset() procedure executes a offset curve operation on 
//      a curve based on the offset option vars.
//
//  Input Arguments:
//      None.
//
//  Return Value:
//      None.
//

proc string pieceTogetherGlobalStitchCmd(
 	int $history,
	int $replaceOriginal,
	int $stitchCorners,
	int $stitchEdges,
	int $stitchSmoothness,
	int $stitchInteriors,
	float $maxSeparaion,
	float $modificationResistance,
	int $sampling)
//
//	Description :
//		Piece together a globalStitch command.
//
{
	string $cmd;
	$cmd = "globalStitch ";

	// construction history
	$cmd = $cmd + " -ch ";
	if ( $history == 1 ) $cmd = $cmd + "on";
	else  $cmd = $cmd + "off";

	$cmd = $cmd + " -rpo ";
	if ( $replaceOriginal == 1 ) $cmd = $cmd + "on";
	else  $cmd = $cmd + "off";
	
	// stitch options
	$cmd = $cmd + " -sc " + $stitchCorners;
	$cmd = $cmd + " -se " + $stitchEdges;
	$cmd = $cmd + " -ss " + $stitchSmoothness;

	if($stitchInteriors == 1) $cmd = $cmd + " -spe true";
	else  $cmd = $cmd + " -spe false";

	// max separation, modification resistance
	// and sampling
	$cmd = $cmd + " -ms " + $maxSeparaion;
	$cmd = $cmd + " -mr " + $modificationResistance;
	$cmd = $cmd + " -sam " + $sampling;

	return $cmd;
}

global proc globalStitchPreset(
 	int $history,
	int $replaceOriginal,
	int $stitchCorners,
	int $stitchEdges,
	int $stitchSmoothness,
	int $stitchInteriors,
	float $maxSeparaion,
	float $modificationResistance,
	int $sampling)
//
//	globalStitch with the preset options.
//	Use this proc when operation dragged to Shelf.
//
{
	// build the command
	string $cmd = pieceTogetherGlobalStitchCmd($history,
											   $replaceOriginal,
											   $stitchCorners,
											   $stitchEdges,
											   $stitchSmoothness,
											   $stitchInteriors,
											   $maxSeparaion,
											   $modificationResistance,
											   $sampling);

	global int $gSelectNurbsSurfacesBit;
	string $srf[] = `filterExpand -ex true -sm $gSelectNurbsSurfacesBit`;

	// placeholder for one selection item
	int $nsrf = size($srf);
	int $i;
	for($i=0; $i<$nsrf; $i++) {
		$cmd += " " + $srf[$i];
	}

	string $result[] = evalEcho($cmd);

	select -r $result;
}
