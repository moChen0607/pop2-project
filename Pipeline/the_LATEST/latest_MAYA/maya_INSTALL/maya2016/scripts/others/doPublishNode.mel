// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//<doc>
//<name doPublishNode>
//
//<synopsis>
//		doPublishNode(int $version, string $args[])
//
//<returns>
//		None
//
//<description>
//		Publish or unpublish the selected node to its container (asset).
//		Publishing is done so that the node will appear in the UI and be
//		selectable even when the asset is black boxed.
//
//<flags>
//	int $version: script version, indicates how to interpret the $args array
//	string $args[]: for $version == 1, $args[0] = whether or not to bind
//
//<examples>
//  // publish the selected node
//	doPublishNode(1,{1});
//</doc>
//
global proc
doPublishNode( int $version, string $args[] )
{
	int $publish = $args[0];

	string $sel[] = `ls -sl`;
	int $numSel = size($sel);
	if ( $numSel > 1 ){
		error( (uiRes("m_doPublishNode.kTooManyNodes")));
	} else if ($numSel == 0) {
		error( (uiRes("m_doPublishNode.kSelectNode")));
	}

	string $node = $sel[0];
	string $container = `container -q -fc $node`;
	if( $container == "" ){
		// A node was selected, but it's not in a container
		//
		error( (uiRes("m_doPublishNode.kNotInAsset")) );
	}

	if ($publish) {
		if ( !`exists publishNodeNamePrompt`) {
			eval("source \"AEcontainerMain.mel\"");
		}
		publishNodeNamePrompt($container);
	} else {
		if ( !`exists doNodePublish`) {
			eval("source \"AEcontainerMain.mel\"");
		}
		string $bound[] = `containerPublish -q -bindNode $container`;
		int $bsize = size($bound);
		int $foundIt = 0;
		for ($ii = 0; $ii < $bsize; $ii++) {
			if ($bound[$ii+1] == $sel[0]) {
				doNodePublish($bound[$ii],$container,0);
				$foundIt = 1;
				break;
			}
		}
		if ($foundIt == 0) {
			print((uiRes("m_doPublishNode.kNotPublished")));
		}
	}
}
