// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

// Description:  This procedure is called to stop all Ipr rendering.
//
global proc stopIprRendering(string $editor)
{
    if (`about -batch`)
    {
        // There is no IPR during batch rendering.  Nothing to be done.
        //
        return;
    }

    // Check which renderer is running IPR and stop its IPR rendering.
    //
    string $renderers[] = `renderer -query -namesOfAvailableRenderers`;
    int $i;
    for ($i = 0; $i < size($renderers); $i += 1)
    {
        string $renderer = $renderers[$i];
        string $isRunningIprProc = `renderer -q -isRunningIprProcedure $renderer`;

        if ($isRunningIprProc !="" && eval($isRunningIprProc) )
        {
            string $stopIprProc = `renderer -q -stopIprRenderProcedure $renderer`;
            if ($stopIprProc != "")
            {
                catch( `eval $stopIprProc` );

                // Turn IPR tuning off.
                //
                global int $gIprTuningPaused;
                $gIprTuningPaused = false;

                // Issue a refresh so that the IPR related UIs get
                // updated.
                //
                if ($editor == "")
                {
                    string $renderPanels[] = `getPanel -scriptType "renderWindowPanel"`;
            
                    if( size($renderPanels) != 0 )
                    {
                        $editor = $renderPanels[0];
                    }
                }
                if (`layout -exists $editor`)
                {
                    refreshIprRelatedUI($editor);
                    renderWindowEditor -e -resetRegion -caption "" $editor;
                    renderWindowRefreshLayout($editor);
                }
            }
        }
    }

    // Resume material view renderer.
    // It is suspended when IPR start in renderWindowPanel.mel
    renderer -materialViewRendererSuspend false;
}
