// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  February 4, 1999
//
//
//  Description:
//
//      This is the interface for display smoothness, so that both
//      nurbs and subdivision surfaces smoothness can be changed 
//      using the 1,2,3 keys.
//
//      First, pass everything off to nurbs displaySmoothness
//
//      If subdiv slice exists,
//          Gets a list of subdivs and passes them off to 
//          subdivDisplaySmoothness
//      

global proc int setDisplaySmoothness(int $smoothness) 
{
	// Get the select list.
	string $selList[] = `ls -sl`;
	int $len = size($selList) ;

	if ($len == 0) {
		$selList = `ls -hl`;
		$len = size($selList) ;
	}
	if ($len == 0) {
	  return 0;
	}
	  
	// 
	// Set nurbs display smoothness
	//
  	if ($smoothness == 1) {
  	  evalEcho("displaySmoothness -divisionsU 0 -divisionsV 0 -pointsWire 4 -pointsShaded 1 -polygonObject 1");
  	}
  	else if ($smoothness == 2) {
  	  evalEcho("displaySmoothness -divisionsU 1 -divisionsV 1 -pointsWire 8 -pointsShaded 2 -polygonObject 2");
  	}
  	else if ($smoothness == 3) {
  	  evalEcho("displaySmoothness -divisionsU 3 -divisionsV 3 -pointsWire 16 -pointsShaded 4 -polygonObject 3");
  	} 
	else if ($smoothness == 0) {
	  evalEcho("displaySmoothness -polygonObject 0");
	}

	// 
	// Set subdivision surfaces display smoothness
	//
	// if (`isTrue "SubdivUIExists"`) {

		eval("subdivDisplaySmoothness -smoothness " + $smoothness);

	// }
	
	return 1;
}
