// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.


// Description : Get multi-camera children assuming child is passed in.
global proc string[] getMultiCameraRenderList( string $camera )
{
	string $cameras[];
	$cameras[0] = $camera;
	
	string $parentXform[] = `listRelatives -path -parent $camera`;

	if ( `pluginInfo -query -loaded "stereoCamera"` ) {
		string $parentXform[] = `listRelatives -path -parent $camera`;
		if ( size($parentXform) > 0 ) { 			
			python("import maya.app.stereo.stereoCameraRig as stereoCameraRig");
	
			// Make sure we have a rig before trying to find it's children
			string $pyCmd = ("stereoCameraRig.isRigRoot('" + $parentXform[0] + "')");
			int $isRig = python( $pyCmd );
			if ($isRig)
			{
				int $cameraCount = 0;
				$pyCmd = ("str(stereoCameraRig.leftCam('" + $parentXform[0] + "'))");
				string $result = python( $pyCmd );
				if ( $result != "None" ) {
					$cameras[$cameraCount] = $result;
					$cameraCount++;
				}

				$pyCmd = ("str(stereoCameraRig.centerCam('" + $parentXform[0] + "'))");
				$result = python( $pyCmd );
				if ( $result != "None" ) {
					$cameras[$cameraCount] = $result;
					$cameraCount++;
				}
				
				$pyCmd = ("str(stereoCameraRig.rightCam('" + $parentXform[0] + "'))");
				$result = python($pyCmd);
				if ( $result != "None" ) {
					$cameras[$cameraCount] = $result;
					$cameraCount++;
				}
			}	
		}
	}

	return $cameras;
}

// Description: Get multi-camera children for camera rig
global proc string[] getMultiCameraChildren( string $camera )
{
	string $cameras[];
	$cameras[0] = $camera;

	if ( `pluginInfo -query -loaded "stereoCamera"` )
	{
		python("import maya.app.stereo.stereoCameraRig as stereoCameraRig");

		string $pyCmd = ("stereoCameraRig.isRigRoot('" + $camera + "')");
		int $isRig = python( $pyCmd );
		if ($isRig)
		{
			string $pyCmd = ("str(stereoCameraRig.leftCam('" + $camera + "'))");
			string $result = python( $pyCmd );
			if ( $result != "None" ) {
				$cameras[0] = $result;
				$pyCmd = ("str(stereoCameraRig.rightCam('" + $camera + "'))");
				$result = python($pyCmd);
				if ( $result != "None" ) {
					$cameras[1] = $result;
				}
			}
		}
	}

	return $cameras;
}

// Check for immediate parent to see if it is a camera rig. If so
// return it's name. Otherwise return an empty string.
// TODO: remove this proc
global proc string getParentCameraRig( string $camera )
{
	string $parent = "";
	if ( `pluginInfo -query -loaded "stereoCamera"` ) {
		string $parentXform[] = `listRelatives -path -parent $camera`;
		if ( size($parentXform) > 0 ) { 			
			python("import maya.app.stereo.stereoCameraRig as stereoCameraRig");
	
			// Make sure we have a rig before trying to find it's children
			int $isRig = python("stereoCameraRig.isRigRoot('" + $parentXform[0] + "')");
			if ($isRig)
			{
				$parent = $parentXform[0];
			}			
		}
	}
	return $parent;
}

// Check to see if camera rigs are supported
// TODO: remove this
global proc int multipleCamerasSupported()
{
	int $supported = 0;

	if ( `pluginInfo -query -loaded "stereoCamera"` ) {
		$supported = 1;
	}

	return $supported;
}
