// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//<doc>
//<name intArrayCount>
//
//<synopsis>
//		int intArrayCount(int $item, int[] $list)
//
//<description>
//		Return the number of times the int in $item
//		occurs in the int array $list.
//		Zero is returned if the int is not in the list.
//
//<flags>
//		int $item	The int item to search for in the int array.
//		int[] $list	A list of int values.
//
//<returns>
//		int : The number of occurrences of the int item in the int array.
//
//<examples>
//  int $list[] = { 1, 2, 3, 2, 2 };
//  // Result: item1 item2 item1 //
//  int $count = intArrayCount( 1, $list );
//  // Result: 1 //
//  $count = intArrayCount( 2, $list );
//  // Result: 3 //
//  $count = intArrayCount( 4, $list );
//  // Result: 0 //
//
//</doc>
//

global proc int intArrayCount(int $item, int $list[])
{
	int $result = 0;

	int $listItem;
	for ($listItem in $list)
	{
		if ($item == $listItem)
			$result++;
	}
	
	return $result;
}
