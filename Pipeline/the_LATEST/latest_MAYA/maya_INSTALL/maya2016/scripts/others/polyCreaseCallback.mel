// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
// polyCreaseCallback is used by polyCreaseCtx context
//
// input
//		tool:	calling context
//		action: "press", or "release" 
//

global proc polyCreaseCallback(string $tool, string $action)
{
	global string $savePolySelectConstraintState;

	if($action == "press") {
		// initialize selection constraint
		$savePolySelectConstraintState = `polySelectConstraint -q -stateString`;
		int $extendCrease = `polyCreaseCtx -q -extendSelection $tool`;
		polySelectConstraint -shell off -border off -crease $extendCrease;
		
	} else if($action == "release") {
		// restore selection constraint
		eval $savePolySelectConstraintState;
	
	} else {
		// Report invalid action
		error((uiRes("m_polyCreaseCallback.kInvalidActionParam")));
	}
}
