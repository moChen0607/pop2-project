// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date: 
//

global proc int findPanelInConfiguration(
	string $panelConfiguration, 
	string $panelType)
//
//	Description:
//		Look for a specific panel type in a panel configuration.  If the
//		panel configuration contains the panel then the index (0 based)
//		of the panel is returned.
//
//	Arguments:
//		panelConfiguration - A panel configuration.
//
//		panelType          - A panel type.
//
//	Returns:
//		The 0-based index of the panel if it is found in the panel
//		configuration.  -1 is returned if the panel is not found.
//
{
	int $result = -1;
	
	string $createStrings[] = `panelConfiguration -query -createStrings $panelConfiguration`;
	string $panelTypes[] = `panelConfiguration -query -typeStrings $panelConfiguration`;
	string $buffer[];

	for ($panelIndex = 0; $panelIndex < size ($panelTypes); $panelIndex++) {
		if ("scriptedPanel" == $panelTypes[$panelIndex]) {

			//	Tokenize the panel creation string, looking for the -type flag
			//	to determine the scripted panel type.
			//
			$type = "";
			$tokenCount = tokenize($createStrings[$panelIndex], $buffer);
			for ($index = 0; $index < size ($buffer); $index++) {
				if ("-type" == $buffer[$index] || "-typ" == $buffer[$index]) {
					$type = $buffer[$index + 1];
					break;
				}
			}

			if ("" != $type) {
				if ($panelType == $type || ("\"" + $panelType + "\"") == $type) {
					$result = $panelIndex;
					break;
				}
			}
		}
	}

	return $result;
}
