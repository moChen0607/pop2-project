// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

// Description:  This procedure is called after we connect a 
//  node to a shading network.  We want the source node
//  to inherit the bins from all its downstream shading nodes.
// 
global proc updateBinMembershipAfterConnection(string $node)
{
    if (`about -batch`)
    {
        // We do not copy the bin list during batch mode.
        // Currently the bin assignment should only be used through
        // the interactive UI.
        //
        return;
    }

    // Make sure the node exists.
    //
    string $res[] = `ls $node`;
    if (size($res)!=1 || $res[0] != $node) 
    {
        // This node does not exist any more.
        //
        return;
    }

    // If the hyper shade panel does not exist, don't update anything.
    //
    string $hyperShadePanel; 
    if (catch($hyperShadePanel = hyperShadePanelName()))
    {
        // Can not recover hyperShadePanel name.  Do nothing.
        //
        return;
    }
    
    if (`layout -q -exists $hyperShadePanel` == 0)
    {
        // Hyper shade panel UI has not been created yet.
        //
        return; 
    }

	// Don't put the binMembership changes on the undo queue since it
	// messes up undo. Since it gets notified when connections are made,
	// it does not need to be on the undo queue.
	//
	int $undoState = `undoInfo -q -stateWithoutFlush`;
	undoInfo -stateWithoutFlush 0;
	
    // List the downstream shading nodes.
    //
    string $downstreamShaderNodes[] = 
        `hyperShade -listDownstreamShaderNodes $node`;

    binMembership -inheritBinsFromNodes $node $downstreamShaderNodes;

    binMembership -notifyChanged;
	
	undoInfo -stateWithoutFlush $undoState;
}
