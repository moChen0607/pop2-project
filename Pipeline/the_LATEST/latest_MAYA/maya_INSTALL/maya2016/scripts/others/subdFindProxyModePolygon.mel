// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//	Creation Date:	Nov 4, 1999
//
//	Procedure:
//	    subdFindPolyForHierMode
//
//	Description:
//	    Given a subdivision surface (with construction history),
//      return the name of the upstream polygon used when in
//      "polygon proxy" mode.
//
global proc string subdFindProxyModePolygon( string $subd ) 
{
	string $result = "";

	// Ordinarilly, this would be called with a subdivision surface as
	// $subd.  However, dagMenuProc.mel may call it with a transform
	// above it instead, so we do a filterExpand, just in case.
	//
	global int $gSelectSubdivSurface;
	string $list[]=`filterExpand -ex 1 -fp 1 -sm $gSelectSubdivSurface $subd`;
	int $len = size($list);
	if( $len > 0 ) {
		$subd = $list[0];
	}

	// If we're not in polygon mode, no point in looking
	// for the polygon proxy.
	//
	int $whichMode = `subdiv -q -proxyMode $subd`;
	if( 1 != $whichMode ) {
		error( `format -s $subd (uiRes("m_subdFindProxyModePolygon.kErrorNotInPolygonMode"))` );
		return $result;
	}

	string $hist[] = `listHistory $subd`;
	for( $histNode in $hist ) {
		if( "mesh" == `nodeType $histNode` ) {
			$result = $histNode;
			break;
		}
	}

	return $result;
}
