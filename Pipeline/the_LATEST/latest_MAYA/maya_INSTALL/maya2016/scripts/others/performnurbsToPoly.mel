// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  4 April 1997
//
//  Description:
//      Option box for the nurbs to poly conversion.
//

//
//  Procedure Name:
//      nurbsToPolyOptions
//
//  Description:
//		Construct the option box UI.  Involves accessing the standard option
//		box and customizing the UI accordingly.
//
//  Input Arguments:
//      None.
//
//  Return Value:
//      None.
//

proc nurbsToPolyOptions()
{
	//	Name of the command for this option box.
	//
	string $commandName = "nurbsToPoly";

	//	Build the option box actions.
	//
	string $callback = ($commandName + "Callback");
	string $setup = ($commandName + "Setup");

	//	STEP 1:  Get the option box.
	//	============================
	string $layout = getOptionBox();
	setParent $layout;
	
	//	STEP 2:  Pass the command name to the option box.
	//	=================================================
	setOptionBoxCommandName($commandName);
	
	//	STEP 3:  Activate the default UI template.
	//	==========================================
	setUITemplate -pushTemplate DefaultTemplate;

	//	STEP 4: Create option box contents.
	//	===================================
	
	//	Turn on the wait cursor.
	//
	waitCursor -state 1;

	tabLayout -scr true -tv false;
	
	string $parent = `columnLayout -adjustableColumn 1`;
	
	nurbsToPolyAddOptions $parent;

	//	Turn off the wait cursor.
	//
	waitCursor -state 0;
	
	//	Step 5: Deactivate the default UI template.
	//  ===========================================
	setUITemplate -popTemplate;

	//	Step 6: Customize the buttons.  
	//	==============================

	//	'Apply' button.
	//
	string $applyBtn = getOptionBoxApplyBtn();
	button -edit -label (uiRes("m_performnurbsToPoly.kTessellate")) 
		-command ($callback + " " + $parent + " " + 1)
		$applyBtn;

	//	'Save' button.
	//
	string $saveBtn = getOptionBoxSaveBtn();
	button -edit 
		-command ($callback + " " + $parent + " " + 0 + "; hideOptionBox")
		$saveBtn;

	//	'Reset' button.
	//
	string $resetBtn = getOptionBoxResetBtn();
	button -edit 
		-command ($setup + " " + $parent + " " + 1)
		$resetBtn;

	//	Step 7: Set the option box title.
	//	=================================
	//
	setOptionBoxTitle (uiRes("m_performnurbsToPoly.kConvertNURBS"));

	//	Step 8: Customize the 'Help' menu item text.
	//	============================================
	//
	setOptionBoxHelpTag( "NURBStoPolygons" );

	//	Step 9: Set the current values of the option box.
	//	=================================================
	//
	eval (($setup + " " + $parent + " " + 0));	
	
	//	Step 10: Show the option box.
	//	=============================
	//
	showOptionBox();
}

//
//  Procedure Name:
//      nurbsToPolyHelp
//
//  Description:
//		Return a short description about this command.
//
//  Input Arguments:
//      None.
//
//  Return Value:
//      string.
//
proc string nurbsToPolyHelp()
{
	return (
	"  Command: NURBS to Poly - tessellate NURBS surfaces into polygons.>\n" +
	"Selection: NURBS surfaces." );
}

//
//  Procedure Name:
//      assembleCmd
//
//  Description:
//		Construct the command that will apply the option box values.
//
//  Input Arguments:
//      None.
//
//  Return Value:
//      None.
//
proc string assembleCmd()
{
	int $history = `constructionHistory -q -tgl`;
	int $format = `nurbsToPolygonsPref -q -f`;
	int $merge = `nurbsToPolygonsPref -q -m`;
	int $mrt = `nurbsToPolygonsPref -q -mrt`;
	int $type = `nurbsToPolygonsPref -q -pt`;
	int $count = `nurbsToPolygonsPref -q -pc`;
	float $chr = `nurbsToPolygonsPref -q -chr`;
	float $ft = `nurbsToPolygonsPref -q -ft`;
	float $mel = `nurbsToPolygonsPref -q -mel`;
	float $d = `nurbsToPolygonsPref -q -d`;
	int $ut = `nurbsToPolygonsPref -q -ut`;
	int $un = `nurbsToPolygonsPref -q -un`;
	int $vt = `nurbsToPolygonsPref -q -vt`;
	int $vn = `nurbsToPolygonsPref -q -vn`;
	int $uch = `nurbsToPolygonsPref -q -uch`;
	int $ucr = `nurbsToPolygonsPref -q -ucr`;
	float $cht = `nurbsToPolygonsPref -q -cht`;
	int $es = `nurbsToPolygonsPref -q -es`;

	string $cmd = "nurbsToPolyPreset";

	$cmd = ( $cmd + " " + $history + " " + $format + " " + 
			 $merge + " " + $mrt + " " + $type + " " + $count + " " + $chr + " " +
			 $ft + " " + $mel + " " + $d + " " +
			 $ut + " " + $un + " " + $vt + " " + $vn + " " +
			 $uch + " " + $ucr + " " + $cht + " " + $es + " " );

	return $cmd;
}

//
//  Procedure Name:
//      performnurbsToPoly
//
//  Description:
//		Perform the nurbsToPoly command using the corresponding 
//		option values.  This procedure will also show the option box
//		window if necessary as well as construct the command string
//		that will invoke the nurbsToPoly command with the current
//		option box values.
//
//  Input Arguments:
//      0 - Execute the command.
//      1 - Show the option box dialog.
//      2 - Return the command.
//
//  Return Value:
//      None.
//

global proc string performnurbsToPoly(int $action)
{
	string $cmd = "";

	switch ($action) {

		//	Execute the command.
		//
		case 0:
			//	Get the command.
			//
			$cmd = `assembleCmd`;

			//	Execute the command with the option settings.
			//
			eval($cmd);

			break;

		//	Show the option box.
		//
		case 1:
			nurbsToPolyOptions;
			break;

		//	Return the command string.
		//
		case 2:
			//	Get the command.
			//
			$cmd = `assembleCmd`;
			break;
	}
	return $cmd;
}

