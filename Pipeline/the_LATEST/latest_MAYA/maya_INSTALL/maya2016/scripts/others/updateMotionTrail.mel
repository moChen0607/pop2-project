// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  Dec, 2000
//
//	Procedure Name:
//		updateMotionTrail
//
//	Description:
//		Force update of selected motion trails.
//

proc int updateSnapshotInList(string $historyNodes[]) {
	int $count = 0;
	string $node;
	for ($node in $historyNodes) {
		if (nodeType($node) == "snapshot" || nodeType($node) == "motionTrail" ) {
		    string $printMsg = (uiRes("m_updateMotionTrail.kUpdating"));
		    $printMsg = `format -s $node $printMsg`;
			print($printMsg);
			int $currVal = `getAttr ($node+".nodeState")`;
			if ($currVal == 2) {
				setAttr ($node+".nodeState") 0;
			} else {
				setAttr ($node+".nodeState") 2;
			}
			refresh;
			setAttr ($node+".nodeState") $currVal;
			$count++;
		}
	}
	return $count;
}

global proc updateMotionTrail()
{
	string $sel[] = `ls -sl`;
	if (0 == size($sel)) {
		error( (uiRes("m_updateMotionTrail.kSelectMotionTrailsErr")) );
		return;
	}
	
	int $count = 0;
	string $futureNodes[] = `listHistory -f 1 -lf 0 -pdo 1`;
	$count += updateSnapshotInList($futureNodes);
	string $historyNodes[] = `listHistory -f 0 -lf 1 -pdo 1`;
	$count += updateSnapshotInList($historyNodes);
	string $futureNodes2[] = `listHistory -f 1 -lf 1 -pdo 1`;
	$count += updateSnapshotInList($futureNodes2);
	if (0 == $count) {
		error( (uiRes("m_updateMotionTrail.kNoMotionTrailsErr")) );
	}
}
