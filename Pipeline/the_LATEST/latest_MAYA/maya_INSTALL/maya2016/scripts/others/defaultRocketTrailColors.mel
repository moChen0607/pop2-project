// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//  ================ defaultRocketTrailColors ================
//
//  SYNOPSIS
//      Set the colors for the particle rocket trail streaks (the cone
//		instances).
//		This proc will set $numColors of colors into a vector array, ranging
//		in the yellow to orange range.
//		The colors are "rgb".
//
//	ARGUMENTS
//		int $numColors
//
//	RETURN
//		The colors
//
global proc vector[] defaultRocketTrailColors(int $numColors)
{
	vector $colors[];

	clear($colors);

	float $numC = $numColors * 2;

	// Set "red" and "green" to full blast, then set "blue" to various shades to
	// get shades of yellow/white -- going from .9 to .5 to keep it light. 
	//
	float $min = .5;
	float $max = .9;

	int $denom = $numColors - 1;
	if ($denom == 0) $denom = 1;
	for ($i = 0; $i < $numColors; $i++)
	{
		float $b =  $min + (($max - $min) * ($i / $denom));
		vector $rgb = <<1,1,$b>>;
		$colors[$i] = $rgb; 
	}
	return $colors;
}
