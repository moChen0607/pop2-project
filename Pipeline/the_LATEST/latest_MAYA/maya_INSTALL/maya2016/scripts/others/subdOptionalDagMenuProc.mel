// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  Dec 3, 1999
//
//
//  Description:
//      The optional stuff for the subd's.
//
//  Input Arguments:
//      None.
//
//  Return Value:
//      None.
//

global proc subdOptionalDagMenuProc( string $parent, string $item )
{
	setParent -m $parent;

	menuItem -label (uiRes("m_subdOptionalDagMenuProc.kRefineSelected"))
		-annotation (uiRes("m_subdOptionalDagMenuProc.kRefineSelectedAnnot"))  -echoCommand true
		-c ("subdivCreateRegion; setAttr " + $item + ".displayFilter 0")
		setRefineRegionItem;

	menuItem -label (uiRes("m_subdOptionalDagMenuProc.kSelectCoarser"))
		-annotation (uiRes("m_subdOptionalDagMenuProc.kSelectCoarserAnnot"))  -echoCommand true
		-c ("subdivCoarserLevel; setAttr " + $item + ".displayFilter 0")
		setCoarsenRegionItem;

	string $menu = `menuItem -subMenu true -aob true -label (uiRes("m_subdOptionalDagMenuProc.kDisplayLevel")) `;

	// Get the maximal level on this surface.
	int $maxLevel = `subdiv -q -deepestLevel $item`;

	int $i;
	for( $i=0; $i<=$maxLevel; $i+=1 ) {
		menuItem -label $i
			-annotation ( `format -stringArg $i (uiRes("m_subdOptionalDagMenuProc.kSetComponentDisplayLevelToAnnot"))` )
			-c ("setAttr \"" + $item + ".displayLevel\" " + $i)
			;
	}

	// Add menu item for changing the display filter
	setParent -m $parent;
	$menu = `menuItem -subMenu true -aob true -label (uiRes("m_subdOptionalDagMenuProc.kDisplayFilter")) `;
	menuItem -label (uiRes("m_subdOptionalDagMenuProc.kAll")) 
			-annotation ( (uiRes("m_subdOptionalDagMenuProc.kSetComponentDisplayFilterAllAnnot")) )
			-c ("setAttr \"" + $item + ".displayFilter\"  0;")
			;
	menuItem -label (uiRes("m_subdOptionalDagMenuProc.kEdited"))
			-annotation ( (uiRes("m_subdOptionalDagMenuProc.kSetComponentDisplayEditAnnot")) )
			-c ("setAttr \"" + $item + ".displayFilter\"  1;")
			;

	setParent -m $parent;
}
