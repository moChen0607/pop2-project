// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
// Creation Date:  14 January 1999
//
//
//  Procedure Name:
//      blendToolScript
//
//  Input Arguments:
//      what is going to happen when this script is called
//		$setToTool = 0 ==> do the command
//		$setToTool = 1 ==> show option box
//		$setToTool = 2 ==> return the command
//		$setToTool = 3 ==> show tool option box
//		$setToTool = 4 ==> enter the tool
//
//  Return Value:
//      None.
//

proc createBlendContext ()
{
	if( ! `scriptCtx -exists blendContext` ) {
		
		scriptCtx
			-i1 "blendSurface.png"
			-bcn "blend"

			-title (uiRes("m_blendToolScript.kBlendTool"))
			-toolCursorType  "edit"
			-totalSelectionSets 2
			-cumulativeLists false
			-showManipulators true
			-expandSelectionList true
			-exitUponCompletion true
			-fcs ("performBlendGiven $Selection1 $Selection2")

			-setNoSelectionPrompt (uiRes("m_blendToolScript.kSelectForLeftEdge"))
			-setSelectionPrompt (uiRes("m_blendToolScript.kSelectAdditionalForLeftEdge"))
									
            -setAutoToggleSelection true
			-setAutoComplete false
			-setSelectionCount 0
            -isoparm true
            -curveOnSurface true
            -surfaceEdge true

			-setNoSelectionPrompt (uiRes("m_blendToolScript.kSelectForRightEdge"))
			-setSelectionPrompt (uiRes("m_blendToolScript.kSelectAdditionalForRightEdge"))

            -setAutoToggleSelection true
            -setAutoComplete false
            -setSelectionCount 0
            -isoparm true
            -curveOnSurface true
            -surfaceEdge true

			blendContext;
	}
}

global proc string blendToolScript( int $setToTool )
//
//	Description :
//		$setToTool = 0 ==> do the command
//		$setToTool = 1 ==> show option box
//		$setToTool = 2 ==> return the command
//		$setToTool = 3 ==> show tool option box
//		$setToTool = 4 ==> enter the tool
{
	string $tool = "";
	if( $setToTool > 2 ) {
		createBlendContext;
		$tool = "blendContext";
	}
	return scriptToolScript( "performBlend", $setToTool, $tool );
							 
}
