// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.


//
//  Description:
//		Build filter for reference editor outliner based on selected
//		references in the sceneEditor (file list)
//		
//  Input Arguments:
//		None
//
//  Return Value:
//      None
//

global proc refEdUpdateFilter(){

	//	only update filter if the outliner portion is visible
	string $outlinerVisible = `optionVar -query refEdEditorVisibility`;
	if ($outlinerVisible != "refEdSceneEditorButton"){
		global string $gReferenceEditorPanel;
		string $references[] = `sceneEditor -q -selectReference $gReferenceEditorPanel`;
		int $numReferences = `size $references`;

		string $mainFilter;
		int $i;
		for ($i = 0; $i<$numReferences; $i++){

			//get nodes in the reference
			string $nodes[] = `reference -rfn $references[$i] -q -n`;
			//get the name of one node and tokenize it to build the
			//nameSpace - nameSpace will be used to filter
			string $buffer[];
			int $numTokens = `tokenize $nodes[0] ":" $buffer`;
			string $nameSpace = "";
			int $j;
			for ($j=0; $j<($numTokens-1); $j++){
				$nameSpace = ($nameSpace + $buffer[$j] + ":");
			}
			$nameSpace = ($nameSpace + "*");

			//create the filter
			if ($i == 0){
				$mainFilter = `itemFilter -classification "builtIn" -byName ($nameSpace)`;
			} else {
				string $tempFilter = `itemFilter -classification "builtIn" -byName ($nameSpace)`;
				$mainFilter = `itemFilter -classification "builtIn" -union $mainFilter $tempFilter`;
			}
		}

		//apply the filter
		global string $gReferenceEditorOutliner;
		outlinerEditor -e -filter $mainFilter $gReferenceEditorOutliner;
	}

}
