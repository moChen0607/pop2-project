// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  March 20 1997
//
//  Description:
//      Global function to make sure the options for intersect are set.
//
//  Input Arguments:
//      Force the factory setting or not.
//
//  Return Value:
//      None.
//
global proc intersectSetOptionVars( int $forceFactorySettings )
{

	// generate cos(2d or 3d) on both surfaces (1) or only on the first surface (0).
	// Default is on BOTH (1).
	//
	if( $forceFactorySettings || ! `optionVar -exists intersectCosOnlyOnFirstSurface` ) {
		optionVar -intValue intersectCosOnlyOnFirstSurface 0;
	}

	// generate cos as 3D curves (0) || 2D curves (1)
	// Default is generate as 2D curves.
	//
	if( $forceFactorySettings || ! `optionVar -exists intersectCosAs2D` ) {
		optionVar -intValue intersectCosAs2D 1;
	}

	// Global or local tolerance.
	//
	if( $forceFactorySettings || !`optionVar -exists intersectSrfUseGlobalTol` ){
		optionVar -intValue intersectSrfUseGlobalTol false;
	}

	//	Tolerance.
	//
	if ($forceFactorySettings || !`optionVar -exists intersectSrfTolerance`) {
		optionVar -floatValue intersectSrfTolerance 0.01;
	}
}

