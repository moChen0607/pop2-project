// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
// Based on the selection find the associated deformer set or sets.
// Return a string listing the sets found.
//
global proc string[] findDeformerSet()
{
	string $defResult[];
	string $sels[] = `ls -sl`;
	string $sel, $rel, $def;
	
	for ($sel in $sels) {
		string $defs[] = `listConnections -s false -d true -type geometryFilter $sel`;
		if (0 == size($defs)) {
			string $rels[] = `listRelatives`;
			for ($rel in $rels) {
				string $isAShape[] = `ls -type shape $rel`;
				if (0 == size($isAShape)) {
					continue;
				}
				$defs = `listConnections -s false -d true -type geometryFilter $rel`;
				if (size($defs)) {
					break;
				}
			}
		}
		for ($def in $defs) {
			int $foundIt = 0;
			for ($rel in $defResult) {
				if ($rel == $def) {
					$foundIt = 1;
					break;
				}
			}
			if (! $foundIt) {
				$defResult[size($defResult)] = $def;
			}
		}
	}


	string $result[];
	for ($rel in $defResult) {
		string $conns[] = `listConnections -type objectSet ($rel+".msg")`;
		if (size($conns)) {
			$result[size($result)] = $conns[0];
		}
	}
	
	return $result;
}
