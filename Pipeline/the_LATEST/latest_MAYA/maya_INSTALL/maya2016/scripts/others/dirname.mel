// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//  Creation Date:  Sept 22, 1999
//<doc>
//<name dirname>
//
//<synopsis>
//		dirname( string $path )
//
//<description>
//		Strips the last level of the given pathname. On Windows, all '\' characters
//		in $path (input as "\\") are replaced with '/'.
//
//<flags>
//      string	 $path			Path string to strip
//
//<returns>
//      string: all but the last level of the given pathname
//
//<examples>
//	string $path = "/usr/people/gamera/gamera.mel";
//	string $dirname = dirname( $path );
//	// Result: /usr/people/gamera //
//  string $ntPath = "C:/aw/godzilla/hello.c";
//	dirname( $ntPath );
//	// Result: C:/aw/godzilla //
//
//</doc>
//
//
// This proc strips the last slash from the path,
// provided it's not a 'significant' slash. That is,
// if the path looks like "C:/" or  "/"
proc string stripLastSlash( string $path )
{
	if ( (match( "^/$", $path ) == "") && // Root dir
		 (match( "^[A-Za-z]:/$", $path ) == "" ) ) // X:/ on Windows
	{
		// Strip off last '/', if it exists
		$path = substitute("/$", $path, "");
	}
	return $path;
}

global proc string dirname( string $path )
{
	if ( `about -nt` || `about -mac`)
		$path = convert( $path );

	$path = stripLastSlash( $path );

	string $dirname;
	// If the path starts with "//" we'll assume this is a UNC path and
	// treat this as root...
	if ( match( "^//", $path ) != "" )
	{
		// Match first two slashes and everything up to the last slash
		$dirname = match( "^//.*/", $path );
		// Maybe there is no slash other than these first two -
		// we'll keep the path we entered this block with
		if ( size( $dirname ) == 0 )
			$dirname = $path;
		else
			$dirname = stripLastSlash( $dirname );
	}
	else
	{
		// Match the beginning up to the first slash
		$dirname = match( "^.*/", $path );
	}

	$dirname = stripLastSlash( $dirname );

	return $dirname;
}

