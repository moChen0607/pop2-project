// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
// Create marking menu for both w-LMB and CTRL-SHIFT-RMB popup's
//
global proc rotateMarkingMenuImpl()
{
	int $mode = `manipRotateContext -q -mode Rotate`;
	
	//
	// Top level non-submenu
	//

	menuItem -radialPosition "NW"
		-label (uiRes("m_rotateMarkingMenuImpl.kLocalLabel"))
		-checkBox ($mode == 0 ? 1 : 0) 
		-command ("manipRotateContext -e -mode 0 Rotate");

	menuItem -radialPosition "W"
		-label (uiRes("m_rotateMarkingMenuImpl.kWorldLabel"))
		-checkBox ($mode == 1 ? 1 : 0) 
		-command ("manipRotateContext -e -mode 1 Rotate");

	menuItem 
		-version "2015"
		-label (uiRes("m_translateMarkingMenuImpl.kCustomAxis"))
		-subMenu 1
		-radialPosition	"SW";

		menuItem -radialPosition "E" 
			-label (uiRes("m_translateMarkingMenuImpl.kCustomAxis"))
			-command ("manipRotateContext -e -mode 3 Rotate") 
			-checkBox ($mode == 3 ? 1 : 0);

		menuItem -rp "W"
			-label (uiRes("m_translateMarkingMenuImpl.kOrientAxisToComponent"))
			-command "manipRotateOrient 4";

		menuItem -rp "SW"
			-label (uiRes("m_translateMarkingMenuImpl.kOrientAxisTowardsPoint"))
			-command "manipRotateOrient 1";

		menuItem -rp "S"
			-label (uiRes("m_translateMarkingMenuImpl.kAlignAxisWithEdge"))
			-command "manipRotateOrient 2";

		menuItem -rp "SE"
			-label (uiRes("m_translateMarkingMenuImpl.kAlignAxisWithFace"))
			-command "manipRotateOrient 3";

		menuItem -rp "NW"
			-label (uiRes("m_translateMarkingMenuImpl.kOrientAxisReset"))
			-command "manipRotateOrient 0";

		setParent -m ..;

	menuItem -radialPosition "SE"
		-label (uiRes("m_rotateMarkingMenuImpl.kDiscreteRotate"))  
		-checkBox (`manipRotateContext -q -snap Rotate`)
		-command ("manipRotateContext -e -snap #1 Rotate");

    menuItem -radialPosition "NE" 
        -label (uiRes("m_rotateMarkingMenuImpl.kNormalAverageRotate"))  
        -command ("manipRotateContext -e -mode 9 Rotate") 
        -checkBox (9 == $mode)
		;

	menuItem -radialPosition "E"
		-label (uiRes("m_rotateMarkingMenuImpl.kGimbalLabel"))
		-checkBox ($mode == 2 ? 1 : 0) 
		-command ("manipRotateContext -e -mode 2 Rotate");


	//
	// North submenu
	//
	commonReflectionOptionsPopup();


	//
	// South submenu
	//
	commonSelectOptionsPopup();


	//
	// Lower non-gestural menus
	//
	commonSelectionConstraintsOptionsPopup();

	menuItem 
		-label (uiRes("m_rotateMarkingMenuImpl.kUseObjectPivotLabel"))
		-checkBox (`manipRotateContext -q -useObjectPivot Rotate` && !`manipRotateContext -q -useManipPivot Rotate`)
		-command ("manipRotateContext -e -useObjectPivot #1 -useManipPivot 0 Rotate");

	menuItem 
		-label (uiRes("m_rotateMarkingMenuImpl.kCenterTrackballLabel"))
		-checkBox (`manipRotateContext -q -centerTrackball Rotate`)
		-command ("manipRotateContext -e -centerTrackball #1 Rotate");

	 menuItem
		-label (uiRes("m_rotateMarkingMenuImpl.kPreserveUVs"))
		-command ("setTRSPreserveUVs #1")
		-checkBox `manipRotateContext -q -preserveUV Rotate`
		-annotation (uiRes("m_rotateMarkingMenuImpl.kPreserveUVsAnnot")) ;

	menuItem
		-label (uiRes("m_translateMarkingMenuImpl.kPreserveChild"))
		-command ("setTRSPreserveChildPosition #1")
		-checkBox `manipRotateContext -q -preserveChildPosition Rotate`
		-annotation (uiRes("m_translateMarkingMenuImpl.kPreserveChildAnnot")) ;

    menuItem
		-label (uiRes("m_translateMarkingMenuImpl.kTweakMode"))
		-command ("strsTweakMode #1")
		-checkBox `manipRotateContext -q -tweakMode Rotate`;

	menuItem
		-label (uiRes("m_rotateMarkingMenuImpl.kRelativeLabel"))
		-command ("manipRotateContext -e -snapRelative #1 Rotate")
		-checkBox (`manipRotateContext -q -snapRelative Rotate`);

    menuItem
        -label (uiRes("m_rotateMarkingMenuImpl.kRotateOptions"))  
        -command ("ToggleToolSettings") 
		-annotation (uiRes("m_rotateMarkingMenuImpl.kRotateToolOptionsAnnot")) ;
}
