// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:	June 18, 1997
//
//<doc>
//<name attributeExists>
//
//<synopsis>
//		attributeExists (string $attr, string $node)
//
//<returns>
//		int : 1 if the attribute exists on the node, else 0
//
//<description>
//      Check to see if the named attribute exists in the
//		given node.
//
//<flags>
//		string $attr Name of attribute to look for.
//		string $node Name of node that will be searched.
//
//<examples>
//  string $shapeName[] = `cone`;
//  if (`attributeExists "scaleX" $shapeName[0]`) {
//      print "Attribute exists\n";
//  } else {
//      print "Attribute does not exist\n";
//  }
//
//</doc>
/////////////////////////////////////////////////////////////////////////

global proc int attributeExists(string $attr, string $node)
{
	if ("" == $attr || "" == $node) return 0;

	// check zero, see if the node exists!
	//
	if( !`objExists $node` ) return 0;

	// First check to see if the attribute matches the short names
	//
	string $attrList[] = `listAttr -shortNames $node`;
	int $max = size($attrList);
	int $i;
	for( $i = 0; $i<$max; $i++ )
	{
		if( $attr == $attrList[$i] )
		{
			return 1;
		}
	}

	// Now check against the long names
	//
	$attrList = `listAttr $node`;
	$max = size($attrList);
	for( $i = 0; $i<$max; $i++ )
	{
		if( $attr == $attrList[$i] )
		{
			return 1;
		}
	}
	return 0;
}
