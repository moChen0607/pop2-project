// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//<doc>
//<name stringArrayInsertAtIndex>
//<owner "Internal">
//
//<synopsis>
//		int stringArrayInsertAtIndex(int $index, string[] $list, string $item)
//
//<description>
//		Insert $item at $index in the string array $list. If $index is
//		greater than the last index of $list, $item will be placed at the
//		end of the list.
//
//<flags>
//		int      $index  The index into $list to add $str at
//		string[] $list   A list of string values.
//		string   $item   The new item to add to $list at $index
//
//<returns>
//		int : Returns false if $index was negative and true on
//			  success.
//
//<examples>
//  // Initialize the list
//  string $list[] = {"item1", "item3"};
//  // Result: item1 item3 //
//  // Insert in the middle of the sequence
//  stringArrayInsertAtIndex(1, $list, "item2");
//  // Result: 1 //
//  print $list;
//  // Result: item1 item2 item3 //
//  // Insert before the first element
//  stringArrayInsertAtIndex(-1, $list, "item4" );
//  // Result: 0 //
//  // Insert at (or after) the end of the sequence
//  stringArrayInsertAtIndex( 10, $list, "item4" );
//  // Result: 1 //
//  print $list;
//  // Result: item1 item2 item3 item4 //
//  // Insert at the beginning of the sequence
//  stringArrayInsertAtIndex( 0, $list, "item0" );
//  // Result: 1 //
//  print $list;
//  // Result: item0 item1 item2 item3 item4 //
//
//
//</doc>
//

global proc int stringArrayInsertAtIndex( int $index, string $list[], string $item )
{
	int $len = size( $list );

	// Check for a invalid indeces ...
	//
	if ( $index < 0 )
		return false;

	// ... or for the simple case of appending to the 
	//     end of the array
	//
	if ( $index >= $len )
	{
		$list[$len] = $item;
		return true;
	}

	// If either of these tests fail, we are inserting 
	// somewhere into the middle of the list
	
	// First do an in-place copy of all entries after $index
	//
	int $i;
	for ($i = $len-1; $i >= $index; $i--)
		$list[$i+1] = $list[$i];

	// Lastly copy entry at $index
	//
	$list[$index] = $item;

	return true;
}