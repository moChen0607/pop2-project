// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  June 14, 1996
//
//  Description:
//      This script creates popup menu items for the dope sheet editor.
//
//  Input Arguments:
//      The dope sheet editor that the menu will belong to.
//
//  Return Value:
//      None.
//

global
proc DopeSheetEdMenu (string $dopeSheetEd)
{
	// Find the name of the associated outliner
	//
	string $outlineEd = `dopeSheetEditor -query -outliner $dopeSheetEd`;
	// Load in the common menu elements library
	//
	loadAnimMenuLibrary;
	// Create the popup menu
	//
	popupMenu
		-ctrlModifier false
		-button 3
		-parent $dopeSheetEd;

	// Create the main menu items
	//
	menuItem -label (uiRes("m_DopeSheetEdMenu.kEdit")) 
		-allowOptionBoxes true
		-subMenu true
		-tearOff true
		editHierItem;
		defineEditMenu $outlineEd $dopeSheetEd "editHierItem" "noOptions" ""; 
	setParent -m ..;

	string $viewItem = `menuItem -label (uiRes("m_DopeSheetEdMenu.kView")) 
		-allowOptionBoxes false
		-subMenu true
		-tearOff true`;
	menuItem -edit
		-postMenuCommand ("buildDopeSheetEdViewMenu " + $dopeSheetEd + " " + $viewItem)
		$viewItem;
	setParent -menu ..;

	menuItem -divider true;

	string $curvesItem = `menuItem -label (uiRes("m_DopeSheetEdMenu.kCurves"))  -allowOptionBoxes true -subMenu true -tearOff true`;
		defineCurvesMenu $outlineEd $dopeSheetEd $curvesItem "noOptions" ""; 
	setParent -menu ..;

	string $keysItem = `menuItem -label (uiRes("m_DopeSheetEdMenu.kKeys"))  -allowOptionBoxes true -subMenu true -tearOff true`;
		buildDopeSheetEdKeysMenu $outlineEd $dopeSheetEd $keysItem; 
	setParent -menu ..;

	string $tangentsItem = `menuItem -label (uiRes("m_DopeSheetEdMenu.kTangents"))  -subMenu true -tearOff true`;
		defineTangentsMenu $outlineEd $dopeSheetEd $tangentsItem "noOptions" ""; 
	setParent -menu ..;

	menuItem -divider true;

	string $menuItem = `menuItem -label (uiRes("m_DopeSheetEdMenu.kList")) 
		-allowOptionBoxes false
		-subMenu true
		-tearOff true
		optionsHierItem`;
		defineListMenu "useHier" $outlineEd $dopeSheetEd $menuItem ""; 
	setParent -m ..;
}
