// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

global proc sculptMeshCacheRotateStamp()
{
	float $pi = 3.14159;
	string $tool = `currentCtx`;
	float $stampRotation = (`sculptMeshCacheCtx -q -stampRotation $tool`);
	
	$stampRotation = $stampRotation + $pi * 0.5;
	if( $stampRotation >= $pi * 2.0 )
		$stampRotation = $stampRotation - $pi * 2.0;

	// Because of precision problem after rotating by 90 degrees 4 times the result is not exactly 360 (that is 0 after modulo) so we have to round it.
	if( $stampRotation < 0.01 )
		$stampRotation = 0;

	sculptMeshCacheCtx -e -stampRotation $stampRotation $tool;
	iconTextButton -e -rotation $stampRotation stampFile_IMG;
}

global proc sculptMeshCacheClearStamp()
{
    sculptMeshCacheCtx -e -stampFile "" -useStampImage 0 `currentCtx`;
}

global proc sculptMeshCachePickStamp()
{
	VisorWindow;
	string $nameOfTab = "Sculpting Stamps";
	string $pnl = visorPanelName();
	if( size($pnl) > 0 )
		visorPanelMenuCommand( $pnl, ("selectTabByLabel " + $nameOfTab));
}

global proc sculptMeshCacheImportStamp()
{
	global int 		$gArtSetAttrMapWorkspace;
	global string 	$gArtWorkdirectory;

	// Set the proper image directory.
	string $imageDir = $gArtWorkdirectory;
	if ( "" == $imageDir ) {
		$imageDir = (`workspace -q -rd` + "sourceimages\/" );
	}

    if (`file -q -ex $imageDir`) {
		if ( 1 == $gArtSetAttrMapWorkspace ) {
        	workspace -dir $imageDir;
			$gArtSetAttrMapWorkspace = 0;
		}
    }

	string $action = (uiRes("m_sculptMeshCacheProperties.kImport"));
    string $callback = "sculptMeshCacheImportStampCB";
    fileBrowser( $callback, $action, "image", 0 );

	// Set the currenrt workspace directory.
	$gArtWorkdirectory = `workspace -q -dir`;
}

global proc int sculptMeshCacheImportStampCB( string $fileName, string $fileType )
{
	// Ask the context to load the file.
    eval("sculptMeshCacheCtx -e -stampFile \"" + $fileName + "\" `currentCtx`");
	
	string $tool = `currentCtx`;
	sculptMeshCacheCtx -e -useStampImage 1 $tool;

	iconTextButton -e -image $fileName stampFile_IMG;

    // Return true to close the filebrowser.
    return true;
}

global proc sculptMeshCacheViewImage()
{
	string $toolName = `currentCtx`;
	string $stampFile = (`sculptMeshCacheCtx -q -stampFile $toolName`);
	if( $stampFile != "" )
		launchImageApp( $stampFile, 0, 0 );
}

global proc sculptMeshCacheRefreshImage()
{
	string $toolName = `currentCtx`;
	string $stampFile = (`sculptMeshCacheCtx -q -stampFile $toolName`);
	if( $stampFile != "" )
	{
		sculptMeshCacheCtx -e -stampFile "" `currentCtx`;
		eval("sculptMeshCacheCtx -e -stampFile \"" + $stampFile + "\" `currentCtx`");

		iconTextButton -e -image "" stampFile_IMG;
		iconTextButton -e -image $stampFile stampFile_IMG;
	}
}

global proc sculptMeshCacheSetUseStampSpacing( string $tool, int $use )
{
	floatSliderGrp -edit -enable $use sculptMeshStampDistance_FSG;
	sculptMeshCacheCtx -e -useStampDistance $use $tool;
}

global proc sculptMeshCacheSetUseStampImage( string $tool, int $use )
{
	sculptMeshCacheCtx -e -useStampImage $use $tool;
}

global proc sculptMeshCacheSetStampPlacement(string $tool)
{
	int $newVal = `optionMenuGrp -q -select sculptMeshStampPlacement_OMG` - 1;
	sculptMeshCacheCtx -e -stampPlacement $newVal $tool;
}

global proc sculptMeshCacheSetDirection (string $tool)
{
	int $newVal = `optionMenuGrp -q -select sculptMeshDirection_OMG` - 1;
	sculptMeshCacheCtx -e -direction $newVal $tool;
}

global proc sculptMeshCacheSetGrabDirection (string $tool)
{
	int $newVal = `optionMenuGrp -q -select sculptMeshGrabDirection_OMG` - 1;
	sculptMeshCacheCtx -e -direction $newVal $tool;
}

global proc sculptMeshCacheSetPaintMethod(string $tool)
{
	int $newVal = `optionMenuGrp -q -select sculptMeshPaintMethod_OMG`;
	if( $newVal == 1 )
		sculptMeshCacheCtx -e -freezesmooth false -freezesmoothandpaint false $tool;
	if( $newVal == 2 )
		sculptMeshCacheCtx -e -freezesmooth true -freezesmoothandpaint true $tool;
	if( $newVal == 3 )
		sculptMeshCacheCtx -e -freezesmooth true -freezesmoothandpaint false $tool;
}

global proc sculptMeshCacheSetBrushSpace (string $tool)
{
	int $newVal = `optionMenuGrp -q -select sculptMeshBrushSpace_OMG` - 1;
	sculptMeshCacheCtx -e -useScreenSpace $newVal $tool;
}

global proc sculptMeshCacheSetMirrorMode (string $tool)
{
	int $newVal = `optionMenuGrp -q -select sculptMeshMirrorMode_OMG` - 1;
	if( $newVal >= 1 && $newVal <= 3 )
		$newVal += 3;
	else if( $newVal >= 4 && $newVal <= 6 )
		$newVal -= 3;
	sculptMeshCacheCtx -e -mirror $newVal $tool;
}

global proc sculptMeshCacheSetFalloffType (string $tool)
{
	int $newVal = `optionMenuGrp -q -select sculptMeshFalloffType_OMG` - 1;
	sculptMeshCacheCtx -e -falloffType $newVal $tool;
}

global proc sculptMeshCacheProperties( )
{
	source "falloffUtility.mel";
	string	$currContext = `currentCtx`;
	string	$currTool	 = `contextInfo -c $currContext`;
	string  $currCmd = "sculptMeshCacheCtx";
	string  $falloffName = "sculptFalloffCurve";

	initCurvePreset();

	global string $gCurvePresets[];
	global int $maxCustomCurveSize;

	setUITemplate -pushTemplate OptionsTemplate;

	string $parent = `toolPropertyWindow -q -location`;
	setParent $parent;

	columnLayout -adj true sculptMeshCache;
    
		frameLayout -label (uiRes("m_sculptMeshCacheProperties.kBrushSection")) 
			-labelVisible true 
			-collapsable false;

		rowLayout -numberOfColumns 2 -columnWidth 1 50 -columnWidth 2 20 -adjustableColumn 1 -rowAttach 2 "top" 0;
		floatSliderGrp -field true -pre 3 -cw 1 126
			-min 0
			-max 100
			-fieldMaxValue 100000
			-label (uiRes("m_sculptMeshCacheProperties.kFalloffSize"))  
			-annotation (uiRes("m_sculptMeshCacheProperties.kFalloffSizeAnnotation"))
			-cc ( ("sculptMeshCacheCtx -e -size #1 " + $currContext) )
				sculptMeshFalloffSize_FSG;

		iconTextCheckBox -width 22 -height 22 -style "iconOnly" -image "nodeGrapherUnpinnedLarge.png" -selectionImage "nodeGrapherPinnedLarge.png" 
			-annotation (uiRes("m_sculptMeshCacheProperties.kUseGlobalSizeAnnotation"))
			-onCommand ("sculptMeshCacheCtx -e -useGlobalSize false " + $currContext) 
			-offCommand ("sculptMeshCacheCtx -e -useGlobalSize true " + $currContext) 
			sculptMeshRemember_ITCB;

		setParent ..;

		optionMenuGrp -label (uiRes("m_sculptMeshCacheProperties.kFalloffSizeUnits"))
				-cc (("sculptMeshCacheSetBrushSpace(\"" + $currContext + "\");")) 
					sculptMeshBrushSpace_OMG;
		menuItem -label (uiRes("m_sculptMeshCacheProperties.kWorldSpace"));
		menuItem -label (uiRes("m_sculptMeshCacheProperties.kScreenSpace"));

		floatSliderGrp -field true -pre 3
			-min 0
			-max 100
			-fieldMaxValue 100000
			-label (uiRes("m_sculptMeshCacheProperties.kFalloffStrength"))
			-annotation (uiRes("m_sculptMeshCacheProperties.kFalloffStrengthAnnotation"))
			-cc ( ("sculptMeshCacheCtx -e -strength #1 " + $currContext) )
				sculptMeshFalloffStrength_FSG;

		checkBoxGrp -label1 (uiRes("m_sculptMeshCacheProperties.kInvert")) 
			-annotation (uiRes("m_sculptMeshCacheProperties.kInvertAnnotation"))
			-cc ( ("sculptMeshCacheCtx -e -inverted #1 " + $currContext) )
			sculptMeshInvert_CBG;

		checkBoxGrp -label1 (uiRes("m_sculptMeshCacheProperties.kTwist")) 
			-annotation (uiRes("m_sculptMeshCacheProperties.kTwistAnnotation"))
			-cc ( ("sculptMeshCacheCtx -e -grabTwist #1 " + $currContext) )
			sculptMeshTwist_CBG;

		optionMenuGrp -label (uiRes("m_sculptMeshCacheProperties.kPaintMethod")) 
				-annotation (uiRes("m_sculptMeshCacheProperties.kPaintMethodAnnotation"))
				-cc (("sculptMeshCacheSetPaintMethod(\"" + $currContext + "\");")) 
					sculptMeshPaintMethod_OMG;
		menuItem -label (uiRes("m_sculptMeshCacheProperties.kPMPaint"));
		menuItem -label (uiRes("m_sculptMeshCacheProperties.kPMPaintSmooth"));
		menuItem -label (uiRes("m_sculptMeshCacheProperties.kPMSmooth"));

		checkBoxGrp -label1 (uiRes("m_sculptMeshCacheProperties.kLockShellBorder")) 
			-cc ( ("sculptMeshCacheCtx -e -lockShellBorder #1 " + $currContext) )
			sculptMeshLockShellBorder_CBG;

		//button -label _L10N( kFlood, "Flood") sculptMeshFlood_BTN;

		optionMenuGrp -label (uiRes("m_sculptMeshCacheProperties.kDirection")) 
				-cc (("sculptMeshCacheSetDirection(\"" + $currContext + "\");")) 
					sculptMeshDirection_OMG;
		menuItem -label (uiRes("m_sculptMeshCacheProperties.kNormal"));
		menuItem -label (uiRes("m_sculptMeshCacheProperties.kAvgNormal"));
		menuItem -label (uiRes("m_sculptMeshCacheProperties.kVNormal"));
		menuItem -label (uiRes("m_sculptMeshCacheProperties.kForward"));
		menuItem -label (uiRes("m_sculptMeshCacheProperties.kRight"));
		menuItem -label (uiRes("m_sculptMeshCacheProperties.kX"));
		menuItem -label (uiRes("m_sculptMeshCacheProperties.kY"));
		menuItem -label (uiRes("m_sculptMeshCacheProperties.kZ"));
		menuItem -label (uiRes("m_sculptMeshCacheProperties.kCamera"));

		// When in grab mode, the direction values take a different meaning.
		// So we will create a separate drop-down just for grab.
		optionMenuGrp -label (uiRes("m_sculptMeshCacheProperties.kGrabDirection")) 
				-cc (("sculptMeshCacheSetGrabDirection(\"" + $currContext + "\");")) 
					sculptMeshGrabDirection_OMG;
		menuItem -label (uiRes("m_sculptMeshCacheProperties.kGrabScreen"));
		menuItem -label (uiRes("m_sculptMeshCacheProperties.kGrabNormal"));
		menuItem -label (uiRes("m_sculptMeshCacheProperties.kGrabAvgNormal"));
		menuItem -label (uiRes("m_sculptMeshCacheProperties.kXY"));
		menuItem -label (uiRes("m_sculptMeshCacheProperties.kXZ"));
		menuItem -label (uiRes("m_sculptMeshCacheProperties.kYZ"));

		optionMenuGrp -label (uiRes("m_sculptMeshCacheProperties.kMirrorMode")) 
				-cc (("sculptMeshCacheSetMirrorMode(\"" + $currContext + "\");")) 
				sculptMeshMirrorMode_OMG;
			menuItem -label (uiRes("m_sculptMeshCacheProperties.kMirrorOff"));
			menuItem -label (uiRes("m_sculptMeshCacheProperties.kMirrorLX"));
			menuItem -label (uiRes("m_sculptMeshCacheProperties.kMirrorLY"));
			menuItem -label (uiRes("m_sculptMeshCacheProperties.kMirrorLZ"));
			menuItem -label (uiRes("m_sculptMeshCacheProperties.kMirrorX"));
			menuItem -label (uiRes("m_sculptMeshCacheProperties.kMirrorY"));
			menuItem -label (uiRes("m_sculptMeshCacheProperties.kMirrorZ"));
			//menuItem -label _L10N( kMirrorTangent, "Tangent");

		rowLayout -numberOfColumns 2 -columnWidth 1 132 -columnWidth 2 80 -rowAttach 2 "top" 0 unfreezeAll_ROW;
			text -label "";
			button -label (uiRes("m_sculptMeshCacheProperties.kUnfreezeAllButton"))
				-annotation (uiRes("m_sculptMeshCacheProperties.kUnfreezeAllButtonAnnotation"))
				-width 80
				-command ("SculptMeshUnfreezeAll") unfreezeAll_BTN;
		setParent ..;

		rowLayout -numberOfColumns 2 -columnWidth 1 132 -columnWidth 2 80 -rowAttach 2 "top" 0 invertFreeze_ROW;
			text -label "";
			button -label (uiRes("m_sculptMeshCacheProperties.kInvertFrozenButton"))
				-annotation (uiRes("m_sculptMeshCacheProperties.kInvertFrozenButtonAnnotation"))
				-width 80
				-command ("SculptMeshInvertFreeze") invertFreeze_BTN;
		setParent ..;

		separator grabSeparator;

		checkBoxGrp -label1 (uiRes("m_sculptMeshCacheProperties.kGrabSilhouette"))
			-cc ( ("sculptMeshCacheCtx -e -grabSilhouette #1 " + $currContext) )
			sculptMeshGrabSilhouette_CBG;

		checkBoxGrp -label1 (uiRes("m_sculptMeshCacheProperties.kFollowPath")) 
			-cc ( ("sculptMeshCacheCtx -e -grabFollowPath #1 " + $currContext) )
			sculptMeshFollowPath_CBG;

		checkBoxGrp -label1 (uiRes("m_sculptMeshCacheProperties.kConstrainToSurface")) 
			-cc ( ("sculptMeshCacheCtx -e -constrainToSurface #1 " + $currContext) )
			sculptMeshConstrainToSurface_CBG;

		separator steadyStrokeSeparator;

		checkBoxGrp -label1 (uiRes("m_sculptMeshCacheProperties.kUpdatePlane")) 
			-annotation (uiRes("m_sculptMeshCacheProperties.kUpdatePlaneAnnotation"))
			-cc ( ("sculptMeshCacheCtx -e -updatePlane #1 " + $currContext) )
			sculptMeshUpdatePlane_CBG;

		checkBoxGrp -label1 (uiRes("m_sculptMeshCacheProperties.kWholeStroke")) 
			-annotation (uiRes("m_sculptMeshCacheProperties.kWholeStrokeAnnotation"))
			-cc ( ("sculptMeshCacheCtx -e -wholeStroke #1 " + $currContext) )
			sculptMeshWholeStroke_CBG;

		checkBoxGrp -label1 (uiRes("m_sculptMeshCacheProperties.kUseStampDist")) 
			-annotation (uiRes("m_sculptMeshCacheProperties.kUseSpacingAnnotation"))
			-cc ( ("sculptMeshCacheSetUseStampSpacing (\"" + $currContext + "\", #1);") )
			sculptMeshUseStampSpacing_CBG;
		floatSliderGrp -field true -pre 3
			-min 0
			-max 100
			-fieldMaxValue 100
			-cc ( ("sculptMeshCacheCtx -e -stampDistance #1 " + $currContext) )
				sculptMeshStampDistance_FSG;

		floatSliderGrp -field true -pre 3
			-min 0
			-max 100
			-fieldMaxValue 100
			-label (uiRes("m_sculptMeshCacheProperties.kBuildUpRate"))  
			-annotation (uiRes("m_sculptMeshCacheProperties.kBuildUpRateAnnotation"))
			-cc ( ("sculptMeshCacheCtx -e -buildUpRate #1 " + $currContext) )
				sculptMeshBuildUp_FSG;

		checkBoxGrp -label1 (uiRes("m_sculptMeshCacheProperties.kSteadyStroke")) 
			-annotation (uiRes("m_sculptMeshCacheProperties.kSteadyStrokeAnnotation"))
			-cc ( ("sculptMeshCacheCtx -e -uss #1 " + $currContext) ) 
			useSteadyStroke_CBG;
		floatSliderGrp -field true -min 0 -max 100 -fieldMaxValue 100000 
			-label (uiRes("m_sculptMeshCacheProperties.kSteadyStrokeDistance")) 
			-cc ( ("sculptMeshCacheCtx -e -ssd #1 " + $currContext) ) 
			steadyStrokeDistance_ISG;

		frameLayout -label (uiRes("m_sculptMeshCacheProperties.kFalloffSection")) 
			-labelVisible true 
			-collapsable true 
			-collapse true;

			optionMenuGrp -label (uiRes("m_sculptMeshCacheProperties.kFalloffType")) 
					-cc (("sculptMeshCacheSetFalloffType(\"" + $currContext + "\");")) 
						sculptMeshFalloffType_OMG;
				menuItem -label (uiRes("m_sculptMeshCacheProperties.kFalloffHybrid"));
				menuItem -label (uiRes("m_sculptMeshCacheProperties.kFalloffSurface"));
				menuItem -label (uiRes("m_sculptMeshCacheProperties.kFalloffVolume"));

			rowLayout -nc 5 -columnWidth 3 140;
				text -label (uiRes("m_sculptMeshCacheProperties.kFalloffCurve"));
				falloffCurve 
					-w 150 -h 165
					-cc("curveChanged( \"" + $currCmd + "\",\"" + $currContext + "\", \"#1\")")
					sculptFalloffCurve;
				setUITemplate -popTemplate;	
				columnLayout;
					iconTextButton -width 23 -height 23 -image "makeBigger.png" -style "iconAndTextHorizontal" -command (("makeLargeCurveWidget(\"" + $currCmd + "\",\"" + $currContext + "\",\"" + $falloffName + "\");"));
					checkBoxGrp -label1 (uiRes("m_sculptMeshCacheProperties.kSnapToGrid")) 
						-cc (("snapToGridChanged(#1, \"" + $falloffName + "\")")) 
						useSnapToGrid_CBG;
					button -label (uiRes("m_sculptMeshCacheProperties.kResetCurveButton")) -width 130 -command (("resetCurve( \"" + $currCmd + "\",\"" + $currContext + "\")"));
					button -label (uiRes("m_sculptMeshCacheProperties.kSaveCurveButton")) -width 130 -command (("saveCustomCurve(\"" + $currCmd + "\")"));
				setParent ..;
				setUITemplate -pushTemplate OptionsTemplate;
			setParent ..;

			rowLayout -nc 2;
				int $presetCellSize1 = 23;
				text -label
					(uiRes("m_sculptMeshCacheProperties.kFalloffCurvePreset")) falloffPresetsText;

				int $sz = size($gCurvePresets);
				gridLayout -numberOfColumns $sz -cellWidthHeight $presetCellSize1 $presetCellSize1 falloffProfilePresetsGrid;					
					for($i = 0; $i < $sz; ++$i) 
					{
						formLayout;
						falloffCurve -backgroundColor 0.51 0.51 0.51 -h 20 -w 20 -asString $gCurvePresets[$i] -cc ( ("curveChanged( \"" + $currCmd + "\",\"" + $currContext + "\", \"#1\")") ) -readOnly true;
						setParent ..;
					}
				setParent ..;
			setParent ..;

			rowLayout -nc 2;
				text -label
					(uiRes("m_sculptMeshCacheProperties.kFalloffCurveCustom")) falloffCustomText;

				gridLayout -numberOfColumns $maxCustomCurveSize -cellWidthHeight $presetCellSize1 $presetCellSize1 falloffProfileCustomGrid;
					for($i = 0 ; $i<$maxCustomCurveSize; $i++)
					{
						string $falloffCurveName = "customCurve" + $i;
						formLayout;
							falloffCurve -backgroundColor 0.51 0.51 0.51 -h 20 -w 20 -asString "" -readOnly true -customCurveWidget true -cc ( ("customCurveOnClick( \"" + $currCmd + "\",\"" + $currContext + "\", \"#1\"," + $i + ")") ) $falloffCurveName;
						setParent ..;
					}
				setParent ..;
			setParent ..;

		setParent ..;

		frameLayout -label (uiRes("m_sculptMeshCacheProperties.kStylusSection")) 
			-labelVisible true 
			-collapsable true 
			-collapse true 
			stylusFrameLayout;

		floatSliderGrp -field true -pre 3
			-min 0
			-max 100
			-fieldMaxValue 100000
				-label (uiRes("m_sculptMeshCacheProperties.kMinSize"))  
			-cc ( ("sculptMeshCacheCtx -e -minSize #1 " + $currContext) )
				sculptMeshMinSize_FSG;

		floatSliderGrp -field true -pre 3
			-min 0
			-max 100
			-fieldMaxValue 100000
				-label (uiRes("m_sculptMeshCacheProperties.kMinStrength"))
			-cc ( ("sculptMeshCacheCtx -e -minStrength #1 " + $currContext) )
				sculptMeshMinStrength_FSG;

		setParent ..;
		
		frameLayout -label (uiRes("m_sculptMeshCacheProperties.kStampSection")) 
			-labelVisible true 
			-collapsable true 
			-collapse true 
			stampFrameLayout;

			checkBoxGrp -label1 (uiRes("m_sculptMeshCacheProperties.kUseStamp")) 
				-cc ( ("sculptMeshCacheSetUseStampImage (\"" + $currContext + "\", #1);") ) 
				sculptMeshUseStamp_CBG;

			rowLayout -numberOfColumns 3 -columnWidth 1 135 -rowAttach 2 "top" 0;
				text -label (uiRes("m_sculptMeshCacheProperties.kStampImage"));
				iconTextButton -style "iconOnly" -width 96 -height 96 -useAlpha 0 
					-doubleClickCommand ("sculptMeshCachePickStamp") 
					stampFile_IMG;
				columnLayout;
					button -label (uiRes("m_sculptMeshCacheProperties.kImportButton"))
						-command ("sculptMeshCacheImportStamp") importStamp_BTN;
					button -label (uiRes("m_sculptMeshCacheProperties.kPickButton"))
						-command ("sculptMeshCachePickStamp") pickStamp_BTN;
				setParent ..;
			setParent ..;

			checkBoxGrp -label1 (uiRes("m_sculptMeshCacheProperties.kStampOrientToStroke")) 
				-cc ( ("sculptMeshCacheCtx -e -stampOrientToStroke #1 " + $currContext) )
				sculptMeshStampOrientToStroke_CBG;

			checkBoxGrp -label1 (uiRes("m_sculptMeshCacheProperties.kFlipHorizonatlly")) 
				-cc ( ("sculptMeshCacheCtx -e -stampFlipX #1 " + $currContext) ) 
				flipStampX_CBG;
			checkBoxGrp -label1 (uiRes("m_sculptMeshCacheProperties.kFlipVertically")) 
				-cc ( ("sculptMeshCacheCtx -e -stampFlipY #1 " + $currContext) ) 
				flipStampY_CBG;

			rowLayout -numberOfColumns 2 -columnWidth 1 132 -columnWidth 2 80 -rowAttach 2 "top" 0;
				text -label (uiRes("m_sculptMeshCacheProperties.kDummy"));
				button -label (uiRes("m_sculptMeshCacheProperties.kRotateStampButton")) -height 20 -width 80 
					-command ("sculptMeshCacheRotateStamp") rotateStamp_BTN;
			setParent ..;

			optionMenuGrp -label (uiRes("m_sculptMeshCacheProperties.kStampPlacement")) 
					-cc (("sculptMeshCacheSetStampPlacement(\"" + $currContext + "\");")) 
						sculptMeshStampPlacement_OMG;
			menuItem -label (uiRes("m_sculptMeshCacheProperties.kPlacementPath"));
			menuItem -label (uiRes("m_sculptMeshCacheProperties.kPlacementCenter"));
			menuItem -label (uiRes("m_sculptMeshCacheProperties.kPlacementSide"));

			frameLayout 
				-labelVisible false 
				-collapsable false;

				checkBoxGrp -label1 (uiRes("m_sculptMeshCacheProperties.kStampRandomization")) 
					-cc ( ("sculptMeshCacheCtx -e -stampRandomization #1 " + $currContext) ) 
					sculptMeshStampRandomization_CBG;
				floatSliderGrp -field true -pre 3 -min 0 -max 100 -fieldMaxValue 100000
					-label (uiRes("m_sculptMeshCacheProperties.kStampRandomizeRotation"))
					-cc ( ("sculptMeshCacheCtx -e -stampRandomizeRotation #1 " + $currContext) )
					sculptMeshStampRandomizeRotation_FSG;
				floatSliderGrp -field true -pre 3 -min 0 -max 100 -fieldMaxValue 100000
					-label (uiRes("m_sculptMeshCacheProperties.kStampRandomizeScale"))
					-cc ( ("sculptMeshCacheCtx -e -stampRandomizeScale #1 " + $currContext) )
					sculptMeshStampRandomizeScale_FSG;
				floatSliderGrp -field true -pre 3 -min 0 -max 100 -fieldMaxValue 100000
					-label (uiRes("m_sculptMeshCacheProperties.kStampRandomizePosX"))
					-cc ( ("sculptMeshCacheCtx -e -stampRandomizePosX #1 " + $currContext) )
					sculptMeshStampRandomizePosX_FSG;
				floatSliderGrp -field true -pre 3 -min 0 -max 100 -fieldMaxValue 100000
					-label (uiRes("m_sculptMeshCacheProperties.kStampRandomizePosY"))
					-cc ( ("sculptMeshCacheCtx -e -stampRandomizePosY #1 " + $currContext) )
					sculptMeshStampRandomizePosY_FSG;
				floatSliderGrp -field true -pre 3 -min 0 -max 100 -fieldMaxValue 100000
					-label (uiRes("m_sculptMeshCacheProperties.kStampRandomizeStrength"))
					-cc ( ("sculptMeshCacheCtx -e -stampRandomizeStrength #1 " + $currContext) )
					sculptMeshStampRandomizeStrength_FSG;
				checkBoxGrp -label1 (uiRes("m_sculptMeshCacheProperties.kStampRandomizeFlipX")) 
					-cc ( ("sculptMeshCacheCtx -e -stampRandomizeFlipX #1 " + $currContext) ) 
					sculptMeshStampRandomizeFlipX_CBG;
				checkBoxGrp -label1 (uiRes("m_sculptMeshCacheProperties.kStampRandomizeFlipY")) 
					-cc ( ("sculptMeshCacheCtx -e -stampRandomizeFlipY #1 " + $currContext) ) 
					sculptMeshStampRandomizeFlipY_CBG;
			setParent ..;

		setParent ..;

		frameLayout -label (uiRes("m_sculptMeshCacheProperties.kDisplaySection")) 
			-labelVisible true 
			-collapsable true 
			-collapse true;
			checkBoxGrp -label1 (uiRes("m_sculptMeshCacheProperties.kOrientBrush")) 
				-cc ( ("sculptMeshCacheCtx -e -orientToSurface #1 " + $currContext) )
				sculptMeshOrient_CBG;
			checkBoxGrp -label1 (uiRes("m_sculptMeshCacheProperties.kShowWireframe")) 
				-cc ( ("sculptMeshCacheCtx -e -displayWireframe #1 " + $currContext) )
				sculptMeshShowWireframe_CBG;
			checkBoxGrp -label1 (uiRes("m_sculptMeshCacheProperties.kShowFrozen")) 
				-cc ( ("sculptMeshCacheCtx -e -displayFrozen #1 " + $currContext) )
				sculptMeshShowFrozen_CBG;
		setParent ..;

	setParent ..;
	setUITemplate -popTemplate;	

	popupMenu -parent stampFile_IMG -button 3 stampImagePopupMenu;
	setParent -menu stampImagePopupMenu;
		menuItem 
			-label (uiRes("m_sculptMeshCacheProperties.kViewImage")) 
			-command ("sculptMeshCacheViewImage");
		menuItem 
			-label (uiRes("m_sculptMeshCacheProperties.kRefreshImage")) 
			-command ("sculptMeshCacheRefreshImage");
		menuItem
			-divider true;
		menuItem
			-label (uiRes("m_sculptMeshCacheProperties.kImportStamp")) 
			-command ("sculptMeshCacheImportStamp");
		menuItem
			-label (uiRes("m_sculptMeshCacheProperties.kPickStamp")) 
			-command ("sculptMeshCachePickStamp");
		menuItem
			-divider true;
		menuItem 
			-label (uiRes("m_sculptMeshCacheProperties.kClearStamp")) 
			-command ("sculptMeshCacheClearStamp");
	setParent ..;
}

global proc saveCustomCurve(string $currCmd)
{
	global int $currCustomIndex;
	int $customInsertSlot = findCustomInsertSlot($currCmd);

	string $ccName = "customCurve" + $customInsertSlot; 

	string $cFalloffCurve = `falloffCurve -q -asString sculptFalloffCurve`;
	updateCustomOptionVar($customInsertSlot,$cFalloffCurve);
	falloffCurve -e -asString `falloffCurve -q -asString sculptFalloffCurve` $ccName;

	$currCustomIndex = -1;
}
