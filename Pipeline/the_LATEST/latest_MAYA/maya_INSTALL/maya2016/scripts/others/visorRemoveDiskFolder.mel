// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//
//
//
//
//  Creation Date:  Date
//
// Description:
//
//		description
//												

global proc visorRemoveDiskFolder(
	string $visor,
	string $folder)
//
// Description:
//	This method is called when the user chooses "Remove this disk folder" from
//	the Visor RMB menu.
//	This method removes the folder and also removes it from the list of
//	directories for which folders should be opened every session.
//
{
	// Delete the folder and refresh the visor
	//
	int $errorOcurred;
	$errorOcurred = catch(`visor -deleteFolder $folder $visor`);
	visor -rebuild $visor;

	// Update the optionVar which lists the set of folders in Visor
	//
	if (!$errorOcurred)
	{
		// The folder was successfully deleted.
		//
		int 	$i;
		int 	$done = false;
		string 	$customFolderNameArray[];

		$customFolderNameArray = `optionVar -query visorCustomDiskFolders`;

		for ($i = 0; $i < size($customFolderNameArray) && !$done; $i++)
		{
			if ($customFolderNameArray[$i] == $folder)
			{
				optionVar -removeFromArray visorCustomDiskFolders $i;
				$done = true;
			}
		}
	}
}
