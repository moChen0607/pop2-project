// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//   Code adapted from the CgFX plugin by NVidia               //
// This script is run automatically when the GLSLShader plug-in is loaded.

{
    // Set default definitions for tool buttons in GLSLShader attribute editor.
    //   [0]:    for each of the 2 tool buttons, the assigned tool name (tab separated)
    //   [1..N]: any number of tool definitions consisting of tab-separated
    //             tool name, icon, description, and MEL command string 
    string $s = "AEGLSLShader_toolSymbolButtons";
    if ( !`about -batch` &&
         !`optionVar -exists $s` )
    {
		string $reloadTool = getPluginResource( "glslShader", "kReloadTool");
		string $reloadIcon = "refresh.png";
		string $reloadAnnotation = getPluginResource( "glslShader", "kReloadAnnotation");
		string $reloadCommand = "GLSLShader -r <node>;";

		string $editTool = getPluginResource( "glslShader", "kEditTool");
		string $editIcon = "fileTextureEdit.png";
		string $editAnnotation;
		string $editCommand;

        if ( `about -nt` ) {
			$editAnnotation = getPluginResource( "glslShader", "kEditAnnotationWIN");
			$editCommand = "system \"load <file>\";";
        }
        else if ( `about -macOS` ) {
			$editAnnotation = getPluginResource( "glslShader", "kEditAnnotationMAC");
			$editCommand = "open -a TextEdit <file>;";
        }
        else {
			$editAnnotation = getPluginResource( "glslShader", "kEditAnnotationLNX");
			$editCommand = getPluginResource( "glslShader", "kEditCommandLNX");
        }
		
		string $tools = $reloadTool + "\t" + $editTool;
		string $reloadArgs = $reloadTool + "\t" + $reloadIcon + "\t" + $reloadAnnotation + "\t" + $reloadCommand;
		string $editArgs = $editTool + "\t" + $editIcon + "\t" + $editAnnotation + "\t" + $editCommand;
		
		optionVar -sva $s ($tools)
				  -sva $s ($reloadArgs)
				  -sva $s ($editArgs)
				  ;
	}
}
