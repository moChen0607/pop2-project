// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//  Procedure Name:
//      polySelectEdgesEveryN
//
//  Description:
//      This procedure selects edge rings and loops
//		for selected edges and limits the selection to
//		every n'th edge.
//
//  Input Arguments:
//      $method: the flag from the polySelect MEL command to use
//				"edgeLoop", "edgeRing", "edgeBorder" or "edgeLoopOrBorder"
//		$n: how many edges to skip over.
//
//  Return Value:
//      None.

global proc polySelectEdgesEveryN(string $method, int $n)
{
	string $edges[] = `getEdges`;

	if (`size $edges`){
		string $buffer[];
		int $numTokens;
		$numTokens = `tokenize $edges[0] "[]" $buffer`;

		string $cmd = "polySelect -";
		$cmd += $method;
		$cmd += " ";
		$cmd += $buffer[1];

		if (`size $edges` > 1){
			int $i;
			for ($i = 1;$i < `size $edges`;$i++){
				$numTokens = `tokenize $edges[$i] "[]" $buffer`;

				$cmd += " -";
				$cmd += $method;
				$cmd += " ";
				$cmd += $buffer[1];
			}
		}

		$cmd += " ";
		$cmd += " -everyN ";
		$cmd += $n;
		$cmd += " ";

		eval($cmd);
	}
}
