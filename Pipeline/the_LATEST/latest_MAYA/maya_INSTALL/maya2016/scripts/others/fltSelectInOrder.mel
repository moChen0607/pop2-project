// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

// 
// 


//
//	Description:
//		If nodeName is already in the selection list, this returns the index
//		of nodeName in the ordered selection list.  Otherwise, if nodeName
//		was just selected and is not already in the ordered selection list, this
//		returns -1
//
proc int fltSelectionIndex( string $nodeName, string $componentName)
{
	global string $selectedLPs[];
	int $i;
	
	for ( $i = 0; $i < size($selectedLPs) ; $i += 2 ) {
		if ( ($selectedLPs[ $i ] == $nodeName) &&
			 ($selectedLPs[ $i + 1 ] == $componentName) )
			 return $i;
	}

	return -1;
}


//
//	Description:
//		Maintains a list of the selected light points in the order
//		in which they were selected.
//		
global proc fltSelectInOrder()
{
	global string $selectedLPs[] = {""};
	string $newSelectedLPs[];
	int $isStillSelected[];
	string $lpQuery[] = `fltLightPoints -q`;
	int $i;
	int $cursor = 0;
	int $foundIndex;

	for ( $i = size($lpQuery) - 2; $i >= 0; $i -= 2 ) {
		$foundIndex = fltSelectionIndex( $lpQuery[$i], $lpQuery[$i+1] );
		if ( $foundIndex == -1 ) {
			$newSelectedLPs[$cursor] = $lpQuery[$i];
			$newSelectedLPs[$cursor + 1] = $lpQuery[$i+1];
			$cursor += 2;
		} else {
			$isStillSelected[$foundIndex] = true;
		}
	}

	for ( $i = 0; $i < size($selectedLPs); $i += 2 ) {
		if ( $isStillSelected[$i] ) {
			$newSelectedLPs[$cursor] = $selectedLPs[$i];
			$newSelectedLPs[$cursor+1] = $selectedLPs[$i+1];
			$cursor += 2;
		}
	}
	
	$selectedLPs = $newSelectedLPs;	
}
