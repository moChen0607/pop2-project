// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//  Creation Date:  May 2014
//

//
//  Procedure Name:
//		toggleVisibilityAndKeepSelection
//
//  Description:
//		Toggles the visibility of the selected object(s).
//
global proc toggleVisibilityAndKeepSelection( int $behaviour )
{
	string $msgIvm;	
	string $selectionList[] = `ls -sl -tr -s`;
	
	if (size($selectionList) == 0) {
		$msgIvm = (uiRes("m_toggleVisibilityAndKeepSelection.kIvmInvalidSelected"));
		inViewMessage -amg $msgIvm -fade;
	}
	else
	{
		global string $gLastHiddenSelection[];
		clear($gLastHiddenSelection);

		int $counter=0;
		if ( $behaviour == 2 ) {
			$visibility = !getAttr($selectionList[0] + ".visibility");
			for ($selection in $selectionList) {
				setAttr($selection + ".visibility", $visibility );
				if (!$visibility) {
					$gLastHiddenSelection[$counter++] = $selection;
				}
			}
		} else {
			for ($selection in $selectionList) {
				$currVisibility = getAttr($selection + ".visibility");
				setAttr($selection + ".visibility", !$currVisibility );
				if ($currVisibility) {
					$gLastHiddenSelection[$counter++] = $selection;
				}
			}
		}
	}
}
