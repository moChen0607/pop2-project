// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  April 21 1997
//
//  Description:
//      Global function to ensure the options for bevel are set.
//
//  Input Arguments:
//      Force the factory setting or not.
//
//  Return Value:
//      None.
//

global proc bevelSetOptionVars( 
	int $forceFactorySettings )
//
//
//
{
	if ($forceFactorySettings || !`optionVar -exists bevelWidth`) {
        optionVar -floatValue bevelWidth 0.1 ;
    }

	if ($forceFactorySettings || !`optionVar -exists bevelDepth`) {
        optionVar -floatValue bevelDepth 0.1 ;
    }

	if ($forceFactorySettings || !`optionVar -exists bevelExtrudeHeight`) {
        optionVar -floatValue bevelExtrudeHeight 1.0 ;
    }

	// default is circular.
	//
    if ($forceFactorySettings || !`optionVar -exists bevelCorner`){
        optionVar -intValue bevelCorner 2;
    }

	// straight.
	//
    if ($forceFactorySettings || !`optionVar -exists bevelCapEdge`){
        optionVar -intValue bevelCapEdge 1;
    }

	// attach Surfaces.
	// attach is set to true.
	//
    if ($forceFactorySettings || !`optionVar -exists bevelAttachSurfaces`){
        optionVar -intValue bevelAttachSurfaces 1;
    }

	// Number of sides.
	// 1 - only extrude.
	// 2 - bevel top and extrude.
	// 3 - bevel bottom and extrude.
	// 4 - bevel both ends and extrude.
	//
    if ($forceFactorySettings || !`optionVar -exists bevelNSides`){
        optionVar -intValue bevelNSides 4;
    }

	// bevelCurveRangePartial (int) - either 0|1 for using the complete
    // curve or only a partial curve for the operation. 
    //
    if ($forceFactorySettings || !`optionVar -exists bevelCurveRangePartial`){
        optionVar -intValue bevelCurveRangePartial 0;
    }

	// bevelOutputPolygons (int) - 0|1 for polygon or Nurbs output
    //
    if ($forceFactorySettings || !`optionVar -exists bevelOutputPolygons`){
        optionVar -intValue bevelOutputPolygons 0;
   	}

	// Global or local tolerance:
	if( $forceFactorySettings || !`optionVar -exists bevelUseGlobalTol` ){
		optionVar -intValue bevelUseGlobalTol false;
	}
 
	// Tolerance for bevel
    if ($forceFactorySettings || !`optionVar -exists bevelTolerance`){
        optionVar -floatValue bevelTolerance 0.05;
    }
}

