// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

global proc float convertMeasurement(
	float  $value,
	string $fromUnits,
	string $toUnits)
//
//	Description:
//		Convert a value from one unit of measurement to another.
//
//	Arguments:
//		value - Value to convert.
//		fromUnits - Units value is currently in.
//		toUnits - Units to convert value to. 
//
//	Valid units are:
//		"inches",
//		"cm",
//		"mm",
//		"points",
//		"picas"
//
{
	float $result = $value;
	float $kInchesInOneCentimeter = 0.393700787;
	float $kInchesInOneMillimeter = 0.0393700787;
	float $kInchesInOnePoint = 0.0138888889;
	float $kInchesInOnePicas = 0.166666667;

	//	Nothing to do if units are the same.
	//
	if ($fromUnits == $toUnits) return $result;

	// First convert the value from its current units to inches.
	//
	float $valueInInches;
	switch ($fromUnits)
	{
		case "inches":
			$valueInInches = $value;
			break;
		case "cm":
			$valueInInches = $value * $kInchesInOneCentimeter;
			break;
		case "mm":
			$valueInInches = $value * $kInchesInOneMillimeter;
			break;
		case "points":
			$valueInInches = $value * $kInchesInOnePoint;
			break;
		case "picas":
			$valueInInches = $value * $kInchesInOnePicas;
			break;
		default:
			string $msg = (uiRes("m_convertMeasurement.kCannotConvertFrom"));
			error (`format -stringArg $fromUnits $msg`);
	}

	// Now convert the value in inches to the desired units 
	//
	switch ($toUnits)
	{
		case "inches":
			$result = $valueInInches;
			break;
		case "cm":
			$result = $valueInInches / $kInchesInOneCentimeter;
			break;
		case "mm":
			$result = $valueInInches / $kInchesInOneMillimeter;
			break;
		case "points":
			$result = $valueInInches / $kInchesInOnePoint;
			break;
		case "picas":
			$result = $valueInInches / $kInchesInOnePicas;
			break;
		default:
			string $msg = (uiRes("m_convertMeasurement.kCannotConvertTo"));
			error (`format -stringArg $toUnits $msg`);
	}
	return $result;
}
