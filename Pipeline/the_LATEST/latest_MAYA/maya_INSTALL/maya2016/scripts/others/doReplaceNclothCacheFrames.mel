// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//	Proceduce Name:
//		doReplaceNclothCacheFrames
//
//	Description:
//		Replace cache frames as specified by options
//
//	Input Arguments:
//		Lots
//
//	Return Value:
//		None
//
global proc doReplaceNclothCacheFrames(	int $timeMode,
										float $startTime,
										float $endTime,
										int $replaceFramesWithSimulation,
										int $interpType,
										float $interpStart,
										float $interpEnd,
										string $inTangent,
										string $outTangent,
										string $rename,
										float $simRate,
										int $sampleMult,
										int $noBackups )
{
	string $obj;
	string $cmd = "cacheFile -refresh -replaceCachedFrame";

	string $objects[];
	if( $replaceFramesWithSimulation ) {
		$objects = getNclothObjectsToCache(1);
		for( $obj in $objects ) {
			$cmd += (" -cacheableNode " + $obj);
		}
	} else {
		$objects = getGeometriesToCache();
		if( size($objects) == 0 ){
			error((uiRes("m_doReplaceNclothCacheFrames.kNoGeometryError")));
		}
		for( $obj in $objects ) {
			$cmd += (" -points " + $obj);
		}
	}
	
	if( $interpType != 1 ) {
		$cmd += (" -interpStartTime " + $interpStart );
		$cmd += (" -interpEndTime " + $interpEnd );
		$cmd += (" -inTangent " + $inTangent);
		$cmd += (" -outTangent " + $outTangent );
		if( $interpType == 3 ) {
			$cmd += (" -fileName \"" + $rename + "\"");
		}
	}
	
	if( $timeMode == 1 ) {
		$startTime = `currentTime -q`;
		$endTime = $startTime;
	}

	$cmd += (" -startTime " + $startTime );
	$cmd += (" -endTime " + $endTime ); 
	$cmd += (" -simulationRate " + $simRate );
	$cmd += (" -sampleMultiplier " + $sampleMult );

	if( $noBackups ) {
		$cmd += " -noBackup";
	}

 	string $cacheFiles[] = `ls -sl -type cacheFile`;
	if( size($cacheFiles) == 1 ) {
		$cmd += (" -cacheFileNode " + $cacheFiles[0] );
	}

	evalEcho($cmd);
}
