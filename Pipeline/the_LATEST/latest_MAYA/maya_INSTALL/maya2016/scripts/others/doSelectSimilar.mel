// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//  Procedure Name:
//		doSelectSimilar
//
//  Description:
//		Select objects similar to the current selection.
//
//  Input Arguments:
//		( $version == 1 ):
//			$args[0] = Similarity tolerance (as float)
//
global proc doSelectSimilar( int $version, string $args[] )
{
	if ( ( $version > 1 ) || ( size($args) > 1 ) )
	{
		error( (uiRes("m_doSelectSimilar.kBadArgsError")) );
		return;
	}

	if(`pluginInfo -q -loaded "modelingToolkit"`) {
		float $newSimilarityTolerance = $args[0];
		float $currentSimilarityTolerance = `nexOpt -q selSimTolerance`;

		nexOpt -e selSimTolerance $newSimilarityTolerance;
		dR_selectSimilar;
		nexOpt -e selSimTolerance $currentSimilarityTolerance;
	}
}
