// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  March 17th, 1998
//
//  Description:
//      addRecentFile, used currently used by Project Viewer.
//		adds filenames to the recent file list.
//



global proc addRecentFile ( string $theFile, string $theType )
{
	string $RecentFilesList[];
	int $i;
	int $nNum;
	int $maxNum;

	$maxNum = `optionVar -q "RecentFilesMaxSize"`;
	string $callbackWarn = (uiRes("m_addRecentFile.kMelCallbackAddRecentFile"));

	if (!`optionVar -exists "RecentFilesList"`)
	{
		if ( $maxNum > 0 ) {
			optionVar -sva "RecentFilesList" $theFile;
			optionVar -sva "RecentFilesTypeList" $theType;
		}
		if (catch(melCallbackAddRecentFile($theFile)))
			warning( $callbackWarn );
		return;
	}

	// get the list
	$RecentFilesList = `optionVar -q "RecentFilesList"`;
	$nNum = size($RecentFilesList);

	if ($nNum > 0 )
	{
		if ( !`optionVar -exists "RecentFilesTypeList"`)
		{
			initRecentFilesTypeList( $RecentFilesList );
		}

		// search for name in the list.
		for ($i = 0; $i < $nNum; $i++)
		{
			if ($RecentFilesList[$i] == $theFile)
			{
				// move it to the top.
				optionVar -rfa "RecentFilesList" $i;
				optionVar -rfa "RecentFilesTypeList" $i;
				optionVar -sva "RecentFilesList" $theFile;
				optionVar -sva "RecentFilesTypeList" $theType;
				if (catch(melCallbackAddRecentFile($theFile)))
					warning ( $callbackWarn );
				return;
			}
		}
	}

	// not found, append at the end.
	optionVar -sva "RecentFilesList" $theFile;
	optionVar -sva "RecentFilesTypeList" $theType;
	$nNum = `optionVar -arraySize "RecentFilesList"`;
	if ( $nNum > $maxNum )  // default maximum size
	{
		for ( $i = 0; $i < $nNum - $maxNum; $i++ )
		{
			// remove the oldest one.
			optionVar -rfa "RecentFilesList" 0;
			optionVar -rfa "RecentFilesTypeList" 0;
		}
	}
	if (catch(melCallbackAddRecentFile($theFile)))
		warning( $callbackWarn );
}
