// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

displayString -replace -value "Add alpha map" m_performSurfaceSampling.kAddAlphaMap;
displayString -replace -value "Add ambient occlusion map" m_performSurfaceSampling.kAddAmbientOcclusionMap;
displayString -replace -value "Add custom map" m_performSurfaceSampling.kAddCustomMap;
displayString -replace -value "Add diffuse map" m_performSurfaceSampling.kAddDiffuseMap;
displayString -replace -value "Add displacement map" m_performSurfaceSampling.kAddDisplacementMap;
displayString -replace -value "Add lit and shaded color map" m_performSurfaceSampling.kAddLitAndShadedColorMap;
displayString -replace -value "Add normal map" m_performSurfaceSampling.kAddNormalMap;
displayString -replace -value "Add Selected" m_performSurfaceSampling.kAddSelectedButton;
displayString -replace -value "Add Selected" m_performSurfaceSampling.kAddSelectedButtons;
displayString -replace -value "Add Unselected" m_performSurfaceSampling.kAddUnselectedButtons;
displayString -replace -value "Advanced Options" m_performSurfaceSampling.kAdvancedOptions;
displayString -replace -value "Alias PIX (pix)" m_performSurfaceSampling.kAliasPIX;
displayString -replace -value "All other meshes" m_performSurfaceSampling.kAllOtherSurfaces;
displayString -replace -value "Alpha map" m_performSurfaceSampling.kAlphaMap;
displayString -replace -value "Alpha" m_performSurfaceSampling.kAlphaOutput;
displayString -replace -value "Ambient occlusion map" m_performSurfaceSampling.kAmbientOcclusionMap;
displayString -replace -value "Ambient" m_performSurfaceSampling.kAmbientOcclusionOutput;
displayString -replace -value "BMP" m_performSurfaceSampling.kBMP;
displayString -replace -value "Bake" m_performSurfaceSampling.kBake;
displayString -replace -value "Bake and Close" m_performSurfaceSampling.kBakeandClose;
displayString -replace -value "Both" m_performSurfaceSampling.kBoth;
displayString -replace -value "Box" m_performSurfaceSampling.kBox;
displayString -replace -value "Camera" m_performSurfaceSampling.kCamera;
displayString -replace -value "Clear All" m_performSurfaceSampling.kClearAllButton;
displayString -replace -value "Clear All" m_performSurfaceSampling.kClearAllButtons;
displayString -replace -value "Closest to Envelope" m_performSurfaceSampling.kClosettoenvelope;
displayString -replace -value "Connect maps to:" m_performSurfaceSampling.kConnectMapsTo;
displayString -replace -value "Connect maps to shader" m_performSurfaceSampling.kConnectMapsToShader;
displayString -replace -value "Connect Output Maps" m_performSurfaceSampling.kConnectOutputMaps;
displayString -replace -value "Assigned shader" m_performSurfaceSampling.kConnectToAssignedShader;
displayString -replace -value "New shader" m_performSurfaceSampling.kConnectToNewShader;
displayString -replace -value "Create" m_performSurfaceSampling.kCreateCustomShader;
displayString -replace -value "Custom map" m_performSurfaceSampling.kCustomMap;
displayString -replace -value "Custom" m_performSurfaceSampling.kCustomOutput;
displayString -replace -value "Custom Shader:" m_performSurfaceSampling.kCustomShaderTextLabel;
displayString -replace -value "Delete envelopes on bake" m_performSurfaceSampling.kDeleteEnvelopesonBake;
displayString -replace -value "Diffuse color map" m_performSurfaceSampling.kDiffuseColorMap;
displayString -replace -value "Diffuse" m_performSurfaceSampling.kDiffuseOutput;
displayString -replace -value "Displacement map" m_performSurfaceSampling.kDisplacementMap;
displayString -replace -value "Displace" m_performSurfaceSampling.kDisplacementOutput;
displayString -replace -value "Display" m_performSurfaceSampling.kDisplay;
displayString -replace -value "EXR (exr)" m_performSurfaceSampling.kEXR;
displayString -replace -value "Edit" m_performSurfaceSampling.kEditCustomShader;
displayString -replace -value "Envelope" m_performSurfaceSampling.kEnvelope;
displayString -replace -value "Please select exactly one mesh to use as an envelope" m_performSurfaceSampling.kErrorSelectonemesh;
displayString -replace -value "Please setup at least one target surface" m_performSurfaceSampling.kErrorSetupAtLeastOneTarget;
displayString -replace -value "File format:" m_performSurfaceSampling.kFileformat;
displayString -replace -value "Fill texture seams:" m_performSurfaceSampling.kFillTextureSeams;
displayString -replace -value "Filter size:" m_performSurfaceSampling.kFilterSize;
displayString -replace -value "Filter type:" m_performSurfaceSampling.kFilterType;
displayString -replace -value "Flip U" m_performSurfaceSampling.kFlipU;
displayString -replace -value "Flip V" m_performSurfaceSampling.kFlipV;
displayString -replace -value "Gaussian" m_performSurfaceSampling.kGaussian;
displayString -replace -value "Geometry Normals" m_performSurfaceSampling.kGeometryNormals;
displayString -replace -value "HDR" m_performSurfaceSampling.kHDR;
displayString -replace -value "High (8x8)" m_performSurfaceSampling.kHigh;
displayString -replace -value "IFF" m_performSurfaceSampling.kIFF;
displayString -replace -value "Ignore Mirrored Faces" m_performSurfaceSampling.kIgnoreMirroredFaces;
displayString -replace -value "Include materials" m_performSurfaceSampling.kIncludeMaterials;
displayString -replace -value "Include shadows" m_performSurfaceSampling.kIncludeShadows;
displayString -replace -value "Inside Envelope Only" m_performSurfaceSampling.kInsideenvelopeonly;
displayString -replace -value "Inside Envelope then Outside Envelope" m_performSurfaceSampling.kInsideenvelopethenoutside;
displayString -replace -value "JPEG (jpeg)" m_performSurfaceSampling.kJPEG;
displayString -replace -value "JPG" m_performSurfaceSampling.kJPG;
displayString -replace -value "Keep aspect ratio " m_performSurfaceSampling.kKeepAspectRatio;
displayString -replace -value "Shaded" m_performSurfaceSampling.kLitAndShadedColorOutput;
displayString -replace -value "Lit and shaded color map" m_performSurfaceSampling.kLitandShadeColorMap;
displayString -replace -value "Low (2x2)" m_performSurfaceSampling.kLow;
displayString -replace -value "Map space:" m_performSurfaceSampling.kMapSapce;
displayString -replace -value "Map height:" m_performSurfaceSampling.kMapheight;
displayString -replace -value "Map width:" m_performSurfaceSampling.kMapwidth;
displayString -replace -value "Match using:" m_performSurfaceSampling.kMatchUsing;
displayString -replace -value "Max search depth (%)" m_performSurfaceSampling.kMaxSearchDepth;
displayString -replace -value "Maximum value:" m_performSurfaceSampling.kMaximumValue;
displayString -replace -value "Maya Common Output" m_performSurfaceSampling.kMayaCommonOutput;
displayString -replace -value "Maya Image (mi)" m_performSurfaceSampling.kMayaImage;
displayString -replace -value "Medium (4x4)" m_performSurfaceSampling.kMedium;
displayString -replace -value "mental ray Common Output" m_performSurfaceSampling.kMentalCommonOutput;
displayString -replace -value "Object Space" m_performSurfaceSampling.kMentalObjectSpace;
displayString -replace -value "Transfer in:" m_performSurfaceSampling.kMentalTransferIn;
displayString -replace -value "World Space" m_performSurfaceSampling.kMentalWorldSpace;
displayString -replace -value "Name" m_performSurfaceSampling.kName;
displayString -replace -value "Name" m_performSurfaceSampling.kNameSS;
displayString -replace -value "Normal map" m_performSurfaceSampling.kNormalMap;
displayString -replace -value "Normal" m_performSurfaceSampling.kNormalOutput;
displayString -replace -value "Number of samples:" m_performSurfaceSampling.kNumberOfSamples;
displayString -replace -value "Object Space" m_performSurfaceSampling.kObjectSpace;
displayString -replace -value "Object space" m_performSurfaceSampling.kObjectSpaceinMap;
displayString -replace -value "Occlusion Max Distance:" m_performSurfaceSampling.kOcclusionFalloff;
displayString -replace -value "Occlusion Rays:" m_performSurfaceSampling.kOcclusionRays;
displayString -replace -value "for multiple objects" m_performSurfaceSampling.kOptimMultipleObjects;
displayString -replace -value "for single object" m_performSurfaceSampling.kOptimSingleObjects;
displayString -replace -value "Optimization:" m_performSurfaceSampling.kOptimization;
displayString -replace -value "Output Maps" m_performSurfaceSampling.kOutputs;
displayString -replace -value "Photoshop (psd)" m_performSurfaceSampling.kPhotoshop;
displayString -replace -value "Preview (1x1)" m_performSurfaceSampling.kPreview;
displayString -replace -value "RGB" m_performSurfaceSampling.kRGB;
displayString -replace -value "RLA" m_performSurfaceSampling.kRLA;
displayString -replace -value "Remove" m_performSurfaceSampling.kRemove;
displayString -replace -value "Remove" m_performSurfaceSampling.kRemove1;
displayString -replace -value "Remove Map" m_performSurfaceSampling.kRemoveMapItem;
displayString -replace -value "Remove Selected" m_performSurfaceSampling.kRemoveSelectedButton;
displayString -replace -value "Remove Selected" m_performSurfaceSampling.kRemoveSelectedButtons;
displayString -replace -value "Sampling quality:" m_performSurfaceSampling.kSamplingQuality;
displayString -replace -value "Search envelope (%)" m_performSurfaceSampling.kSearchEnvelope;
displayString -replace -value "Search method:" m_performSurfaceSampling.kSearchMethod;
displayString -replace -value "Select" m_performSurfaceSampling.kSelect;
displayString -replace -value "Select" m_performSurfaceSampling.kSelect1;
displayString -replace -value "Select" m_performSurfaceSampling.kSelect2;
displayString -replace -value "Silicon Graphics (rgb)" m_performSurfaceSampling.kSiliconGraphics;
displayString -replace -value "Sony Playstation (tim)" m_performSurfaceSampling.kSonyPlaystation;
displayString -replace -value "Source Meshes" m_performSurfaceSampling.kSourceSurfaces;
displayString -replace -value "Transfer UV set" m_performSurfaceSampling.kSourceUVSpace;
displayString -replace -value "Mesh" m_performSurfaceSampling.kSurface;
displayString -replace -value "Surface Normals" m_performSurfaceSampling.kSurfaceNormals;
displayString -replace -value "TGA" m_performSurfaceSampling.kTGA;
displayString -replace -value "TIFF" m_performSurfaceSampling.kTIFF;
displayString -replace -value "Tangent space" m_performSurfaceSampling.kTangentSpaceinMap;
displayString -replace -value "Target Meshes" m_performSurfaceSampling.kTargetSurfaces;
displayString -replace -value "Output UV set" m_performSurfaceSampling.kTargetUVSet;
displayString -replace -value "Transfer UV set" m_performSurfaceSampling.kTargetUVSpace;
displayString -replace -value "Alpha mode:" m_performSurfaceSampling.kTextureAlphaMode;
displayString -replace -value "Coverage" m_performSurfaceSampling.kTextureAlphaModeCoverage;
displayString -replace -value "Luminance of surface color" m_performSurfaceSampling.kTextureAlphaModeLuminanceSurfaceColor;
displayString -replace -value "Pass through" m_performSurfaceSampling.kTextureAlphaModePassThrough;
displayString -replace -value "Surface transparency" m_performSurfaceSampling.kTextureAlphaModeSurfaceTransparency;
displayString -replace -value "Bake alpha" m_performSurfaceSampling.kTextureBakeAlpha;
displayString -replace -value "16 bits" m_performSurfaceSampling.kTextureBits16;
displayString -replace -value "32 bits" m_performSurfaceSampling.kTextureBits32;
displayString -replace -value "8 bits" m_performSurfaceSampling.kTextureBits8;
displayString -replace -value "Bits per channel:" m_performSurfaceSampling.kTextureBitsPerChannel;
displayString -replace -value "Fill texture seams:" m_performSurfaceSampling.kTextureFillTextureSeams;
displayString -replace -value "Final gather quality:" m_performSurfaceSampling.kTextureFinalGatherQuality;
displayString -replace -value "Final gather reflect:" m_performSurfaceSampling.kTextureFinalGatherReflect;
displayString -replace -value "Normal direction:" m_performSurfaceSampling.kTextureNormalDirection;
displayString -replace -value "Face camera" m_performSurfaceSampling.kTextureNormalDirectionFaceCamera;
displayString -replace -value "Surface back" m_performSurfaceSampling.kTextureNormalDirectionSurfaceBack;
displayString -replace -value "Surface front" m_performSurfaceSampling.kTextureNormalDirectionSurfaceFront;
displayString -replace -value "Orthogonal reflection" m_performSurfaceSampling.kTextureOrthogonalReflection;
displayString -replace -value "U max:" m_performSurfaceSampling.kTextureUMax;
displayString -replace -value "U min:" m_performSurfaceSampling.kTextureUMin;
displayString -replace -value "UV range:" m_performSurfaceSampling.kTextureUVRange;
displayString -replace -value "Entire range" m_performSurfaceSampling.kTextureUVRangeEntireRange;
displayString -replace -value "Normal (0 to 1)" m_performSurfaceSampling.kTextureUVRangeNormal;
displayString -replace -value "User specified" m_performSurfaceSampling.kTextureUVRangeUserSpecified;
displayString -replace -value "V max:" m_performSurfaceSampling.kTextureVMax;
displayString -replace -value "V min:" m_performSurfaceSampling.kTextureVMin;
displayString -replace -value "Transfer in:" m_performSurfaceSampling.kTransferIn;
displayString -replace -value "Transfer Maps" m_performSurfaceSampling.kTransferMaps;
displayString -replace -value "Triangular" m_performSurfaceSampling.kTriangular;
displayString -replace -value "UV Space" m_performSurfaceSampling.kUVSpace;
displayString -replace -value "Use Maya common settings" m_performSurfaceSampling.kUseMayaCommonSettings;
displayString -replace -value "Use mental ray common settings" m_performSurfaceSampling.kUseMentalCommonSettings;
displayString -replace -value "Use selection as envelope" m_performSurfaceSampling.kUseSelectionasEnvelope;
displayString -replace -value "World Space" m_performSurfaceSampling.kWorldSpace;
