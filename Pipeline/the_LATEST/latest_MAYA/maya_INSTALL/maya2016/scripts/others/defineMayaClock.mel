// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
// Creation Date:  15 jan 97
//
//
//  Procedure Name:
//      mayaClock
//
//  Description:
//      This procedure creates and defines a clock device
//      that shows up in the device Window.  
//
//  Input Arguments:
//      none.
//
//  Return Value:
//      None.
//

proc int server(string $dName, string $sName)
{
	return initDataServer($dName,$sName,"localhost", "", "",2);
}

 
global proc mayaClockRemove()
{
	defineDataServer -u -d "clock";
}

global proc string defineMayaClock()
{
	if (!`licenseCheck -m "edit" -typ "complete"`) {
		error((uiRes("m_defineMayaClock.kNoLicense")));
	}

	string $devList[] = `listInputDevices`;
	string $devName;
	int $found = 0;
				
	for ($devName in $devList) 
	{
		if ("clock" == $devName) 
		{
			$found = 1;
			break;
		}
	}

	if ($found == 1)
	{
		defineDataServer -u -d clock;
	}

	if (`exists deMangle`)
	{}
	else
	{
		filter -t filterEuler -n deMangle;
	}

	string $dName="clock";
	string $sName="mayaClockServer";
	if ( server($dName, $sName) != 0 ) {
		string $format = (uiRes("m_defineMayaClock.kCouldNotConnect"));
		string $errMsg = `format -stringArg $dName -stringArg $sName $format`;
		error $errMsg;

		$dName = "";
	}

	return $dName;
}

