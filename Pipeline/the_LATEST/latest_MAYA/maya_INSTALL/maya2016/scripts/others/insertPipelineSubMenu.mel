// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//  Description:
//      Insert a sub menu into Pipeline Cache menu.
//      This procedure ensures menu ordering.
//

global proc insertPipelineSubMenu(string $subMenu, string $label, string $postMenuCommand)
{
    global string $gMainWindow;  // defined by Maya

    // Check Pipeline Cache menu
    setParent $gMainWindow;
    if (!`menu -q -exists mainPipelineCacheMenu`) {
        // Pipeline Cache menu does not exist, create one
		// Update(July, 2014): Rename menu to "Cache"
        menu -label (uiRes("m_insertPipelineSubMenu.kMainCache")) -tearOff true mainPipelineCacheMenu;
    }

    // Check the sub menu
    setParent -menu mainPipelineCacheMenu;

    if (`menuItem -q -exists $subMenu`) {
        return;
    }
    else {
        string $existingMenuName[] = `menu -q -itemArray mainPipelineCacheMenu`;

        int $numItems = size($existingMenuName);
        if ($numItems == 0 || strcmp($existingMenuName[$numItems-1], $subMenu) < 0) {
            // Adding an item that should come last alphabetically,
            // so appending is sufficient

            // Create sub menu
            string $menu = `menuItem -label $label
                                     -tearOff true
                                     -subMenu true
                                     $subMenu`;
            menuItem -e -postMenuCommand ($postMenuCommand + " " + $menu)
                        -postMenuCommandOnce true
                        $menu;
            setParent -menu ..;
        }
        else {
            // Backup and delete all existing menus
            string $existingMenuLabel[];
            int    $existingMenuTearOff[];
            int    $existingMenuSubMenu[];
            string $existingMenuPostMenuCommand[];
            int    $existingMenuPostMenuCommandOnce[];
            
            int $i;
            for ($i = 0; $i < size($existingMenuName); $i++) {
                $existingMenuLabel[$i] = `menuItem -q -label $existingMenuName[$i]`;
                $existingMenuTearOff[$i] = `menuItem -q -tearOff $existingMenuName[$i]`;
                $existingMenuSubMenu[$i] = `menuItem -q -subMenu $existingMenuName[$i]`;
                $existingMenuPostMenuCommand[$i] = `menuItem -q -postMenuCommand $existingMenuName[$i]`;
                $existingMenuPostMenuCommandOnce[$i] = `menuItem -q -postMenuCommandOnce $existingMenuName[$i]`;
            }

            menu -e -deleteAllItems mainPipelineCacheMenu;

            // Restore the menus before sub menu
            for ($i = 0; $i < size($existingMenuName) && strcmp($existingMenuName[$i], $subMenu) < 0; $i++) {
                menuItem -label   $existingMenuLabel[$i]
                         -tearOff $existingMenuTearOff[$i]
                         -subMenu $existingMenuSubMenu[$i]
                         -postMenuCommand     $existingMenuPostMenuCommand[$i]
                         -postMenuCommandOnce $existingMenuPostMenuCommandOnce[$i]
                         $existingMenuName[$i];
                if ($existingMenuSubMenu[$i]) {
                    setParent -menu ..;
                }
            }

            // Create sub menu
            string $menu = `menuItem -label $label
                                     -tearOff true
                                     -subMenu true
                                     $subMenu`;
            menuItem -e -postMenuCommand ($postMenuCommand + " " + $menu)
                        -postMenuCommandOnce true
                        $menu;
            setParent -menu ..;

            // Restore the menus after sub menu
            for (; $i < size($existingMenuName); $i++) {
                menuItem -label   $existingMenuLabel[$i]
                         -tearOff $existingMenuTearOff[$i]
                         -subMenu $existingMenuSubMenu[$i]
                         -postMenuCommand     $existingMenuPostMenuCommand[$i]
                         -postMenuCommandOnce $existingMenuPostMenuCommandOnce[$i]
                         $existingMenuName[$i];
                if ($existingMenuSubMenu[$i]) {
                    setParent -menu ..;
                }
            }
        }
    }
}


//
//  Description:
//      Delete a sub menu from Pipeline Cache menu.
//

global proc deletePipelineSubMenu(string $subMenu)
{
    global string $gMainWindow;  // defined by Maya

    // Check Pipeline Cache menu
    setParent $gMainWindow;
    if (!`menu -q -exists mainPipelineCacheMenu`) {
        // Pipeline Cache menu does not exist
        return;
    }

    // Check the sub menu
    setParent -menu mainPipelineCacheMenu;
    if (`menuItem -q -exists $subMenu`) {
        // Delete the sub menu
        deleteUI -menuItem $subMenu;
    }

    // Delete Pipeline Cache menu if there are no sub menus
    if (`menu -q -numberOfItems mainPipelineCacheMenu` == 0) {
        deleteUI -menu mainPipelineCacheMenu;
    }
}
