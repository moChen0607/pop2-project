// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.


//<doc>
//<name makePassiveCollider>
//<owner "Autodesk">
//
//<synopsis>
//		makePassiveCollider
//
//<returns>
//		None.	
//
//<description>
//	This makes any selected mesh objects passive nDynamics colliders. It is
//  equivalent to calling the menu item "create passive collider".
//
//<flags>
//	None.
//
//<examples>
//	polyPlane;
//  makePassiveCollider;
//</doc>



global proc string[] makePassiveCollider()
//
//	Description:
//
//	Given a selected list of meshes, make them passive colliders.
//	We'd like to find one or more nucleus nodes to collide them with.
//	If there's one or more  nucleus nodes selected, they'll do.
//	If there's no nucleus nodes at all, create one.
//	If there's exactly one nucleus in existence, that's fine too.
//	If none of the above is true, but there is an nBase selected
//	use, its nucleus node.
//	Perhaps, if you're selected a mesh connected to an active nCloth
//	we'll find its nucleus and use that.
//
{
	// wrapper on makeCollideNCloth, which is now poorly named for its behavior
	return( makeCollideNCloth() );

}
