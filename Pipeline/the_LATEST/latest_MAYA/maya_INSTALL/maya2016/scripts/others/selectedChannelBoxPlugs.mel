// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//	Procedure Name:
//		selectedChannelBoxPlugs()
//
//	Description:
//		Returns the list of all plugs (node + attributes) that are
//		currently selected in the channel box.  If no
//		attributes are selected, the returned string[] is
//		empty.
//
//  Input Arguments:
//		None.
//
//  Return Value:
//      String array of object plugs
//

global proc string[] selectedChannelBoxPlugs()
{
	global 	string $gChannelBoxName; 

	string  $result[];

	if( `channelBox -q -exists $gChannelBoxName` ) {
		string 	$main[], $mainObjects[];
		string 	$shape[], $shapeObjects[];
		string 	$history[], $historyObjects[];
		string  $outputs[], $outputObjects[];
		
		$main = `channelBox -q -selectedMainAttributes $gChannelBoxName`;
		$shape = `channelBox -q -selectedShapeAttributes $gChannelBoxName`;
		$history = `channelBox -q -selectedHistoryAttributes $gChannelBoxName`;
		$outputs = `channelBox -q -selectedOutputAttributes $gChannelBoxName`;
		
		string  $attr;
		
		$main = `channelBox -q -selectedMainAttributes $gChannelBoxName`;
		$mainObjects = `channelBox -q -mainObjectList $gChannelBoxName`;

		$shape = `channelBox -q -selectedShapeAttributes $gChannelBoxName`;
		$shapeObjects = `channelBox -q -shapeObjectList $gChannelBoxName`;

		$history = `channelBox -q -selectedHistoryAttributes $gChannelBoxName`;
		$historyObjects = `channelBox -q -historyObjectList $gChannelBoxName`;

		$outputs = `channelBox -q -selectedOutputAttributes $gChannelBoxName`;
		$outputObjects = `channelBox -q -outputObjectList $gChannelBoxName`;
		
		if( size( $main ) > 0 ) {
			for( $object in $mainObjects ) {
				for ($mattr in $main) {
					$result[ size($result) ] = ($object+"."+$mattr);
				}
			}
		}

		if( size( $shape ) > 0 ) {
			for( $object in $shapeObjects ) {
				for ($mattr in $shape) {
					$result[ size($result) ] = ($object+"."+$mattr);
				}
			}
		}

		if( size( $history ) > 0 ) {
			for( $object in $historyObjects ) {
				for ($mattr in $history) {
					$result[ size($result) ] = ($object+"."+$mattr);
				}
			}
		}

		if( size( $outputs ) > 0 ) {
			for( $object in $outputObjects ) {
				for ($mattr in $outputs) {
					$result[ size($result) ] = ($object+"."+$mattr);
				}
			}
		}
	}
		
	return $result;
}
