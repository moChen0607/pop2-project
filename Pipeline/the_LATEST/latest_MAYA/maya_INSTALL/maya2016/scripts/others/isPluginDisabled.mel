// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.


proc string getPluginName( string $fileName )
//
//  Procedure Name:
//      getPluginName
//
//  Description:
//      returns the plugin name from the file name: File name up to and excluding the first period.
//      We can't use pluginInfo to compute the plug-in name, because the plug-in may be unloadable.
//
//  Return Value:
//      returns the plugin name without the extension.
//
{
    string $pluginName = match( "^[^.]*", $fileName );
    return $pluginName;
}

// Returns true if the plugin $fileName is disabled.
// The disabled plug-ins' initialization always returns false, and they are
// unloadable, so we want to filter them out from the plug-in manager.
global proc int isPluginDisabled(string $fileName)
{
    string $disabledPluginsList[];
    // Here, update $disabledPluginsList. The usage is generally to disable the plug-ins 
    // according to compile flags or to dynamic extension flags.
    // Example:
    // #ifdef MAYA_BOLT_VERSION
    // if ( !mayaEnableAnvilFeatures() )
    // {        
    //     $disabledPluginsList[size($disabledPluginsList)] = "matrixNodes";
    //     $disabledPluginsList[size($disabledPluginsList)] = "quatNodes";        
    // }
    // #endif // MAYA_BOLT_VERSION

    string $pluginName = getPluginName( $fileName );
    if ( stringArrayContains($pluginName, $disabledPluginsList) )
    {
        return 1;
    }
    return 0;
}
