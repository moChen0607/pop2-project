// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//  Description:
//      This procedure creates the DG traversal RMB stuff
//
proc fillOutSection(	string $chain[], string $itemsMenu[], int $maxItems )
{
	string $item, $each, $label;
	string $list[];
	int $n, $cntr, $lineCntr;

	int $moreSubs = 0;
	int $subs = 0;

	$cntr = size($itemsMenu);
	$lineCntr = $cntr;
	for( $item in $chain ) {
		if( $lineCntr > $maxItems){
			$moreSubs += 1;
			menuItem -label (uiRes("m_dgHistoryPopupFill.kMore")) 
			  -subMenu true
			  -to true
			  -aob true
			  ("SESMM" + string($moreSubs));
			$lineCntr = 0;
		}

		tokenize( $item, "|", $list );
		$n = size($list);
		if( 1 == $n ) {
			$label = $item;

			string $menu = `menuItem -subMenu true -aob true -label $label`;
			menu -e
				-pmc ("createTraversalMenuItems \"" + $menu + "\" " + $item )
				$menu;
			setParent -menu ..;

			$itemsMenu[$cntr] = $menu;
			$cntr += 1;
			$lineCntr += 1;
		}
		else if( $n > 0 ) {

			string $cbi = "select -add";
			string $lab = ($item + "...");
			string $cbo = ("showEditor " + $list[0] + ";");

			for( $each in $list ) {
				$cbi = $cbi + " " + $each;
			}

			$itemsMenu[$cntr] = `menuItem -c $cbi -label $lab`;
			menuItem -optionBox true -c $cbo;
			$cntr += 1;
			$lineCntr += 1;
		}
	}
	for( $i=0; $i<$moreSubs; $i+=1 ) {
		setParent -menu ..;
	}

}

global proc dgHistoryPopupFill( string $nameItem, int $future )
//
// Description:
//		Creates the DG Traversal history RMB popup based on selection
//
{
	int $maxItemsPerScreen = 25;

	string $chainFalse2[];
	string $chainTrue2[];
	string $itemsMenu[];
	string $transforms[];

	if( "" == $nameItem ) {
		menuItem -label (uiRes("m_dgHistoryPopupFill.kNoSelection"))  noSelectionItem;
	}
	else {

		$transforms = `ls -typ transform $nameItem`;
		if( size($transforms) > 0 ) {
			$chainFalse2 = `listHistory -lf false -bf -lv 1 -f $future -af $nameItem`;
		}

		$chainTrue2 = `listHistory -lf true -bf -lv 1 -f $future -af $nameItem`;

		// Remove duplicates
		//
		string $nameItems[] = { $nameItem };
		string $moreStuff[] = stringArrayRemove( $chainFalse2, $chainTrue2 );
		string $combined[] = stringArrayCatenate( $chainFalse2, $moreStuff );
		string $noDupes[] = stringArrayRemove( $nameItems, $combined );

		// Remove nodes in black box containers
		//
		// Add a dummy entry, since we have no original node that must be
		// included.
		//
		$noDupes[size($noDupes)] = "";
		string $final[] = filterBlackBoxNodes( $noDupes, false );
		if( size($final) > 0 ) {
			string $label;
			if( $future ){
				$label = (uiRes("m_dgHistoryPopupFill.kFutureNodes"));
			} else {
				$label = (uiRes("m_dgHistoryPopupFill.kHistoryNodes"));
			}
			menuItem -d true;
			menuItem -label $label;
			fillOutSection( $final, $itemsMenu, $maxItemsPerScreen );
		}
	}
}
