// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.


//
//	Procedure:
//		updateFileNodeSwatch
//
//	Description:
//		Cause swatch refresh on file nodes
//

global proc updateFileNodeSwatch(string $nodeName)
{
	string $nodeList[] = stringArrayCatenate(
		{$nodeName}, `hyperShade -listUpstreamNodes $nodeName`);
	
	// updateFileNodeSwatch is a bit misleading now since we can also force update
	// other swatches. However, to keep backward compability we leave this procedure name unchanged.
	renderThumbnailUpdate -forceUpdate $nodeName;
	for ($node in $nodeList)
	{
		string $type = `nodeType $node`;
		if ($type == "file" || $type == "psdFileTex")
		{
			// flag swatch as requiring regeneration
			setAttr ($node + ".forceSwatchGen") true;

			// force refresh of swatch up to material and shading engine, being
			// careful not clobber the file name pattern
			string $currName = `getAttr ($node + ".fileTextureName")`;
			string $currPattern = `getAttr ($node + ".fileTextureNamePattern")`;
			if ($currName == $currPattern || size($currPattern) == 0)
			{
				setAttr -type "string" ($node + ".fileTextureName") $currName;
			}
			else
			{
				setAttr -type "string" ($node + ".fileTextureNamePattern") $currPattern;
			}
		}
	}
}
