// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  2003
//
// Description: return list of follicle nodes that are selected directly or 
// indirectly through connected nurbsCurves.
//	
global proc string[] getSelectedHairCurves()
{
	string $out[] = `ls -sl -dag -type follicle`;
	int $len = size( $out ); 
	string $curves[] = `ls -sl -o -dag -type nurbsCurve`;
	int $numCurves = size( $curves );
	int $i, $j;
	for( $i = 0; $i < $numCurves; $i++ ){
		string $curve = $curves[$i];
		string $hairCurve = "";
		string $create[] = `listConnections -sh 1 ($curve + ".create")`;
		for( $j = 0; $j < size( $create); $j++ ){
			string $nType = `nodeType $create[$j]`;
			if( $nType == "follicle"){
				$hairCurve = $create[$j];
				break;
			}
		}
		if( $hairCurve == "" ){
			string $world[] = `listConnections -sh 1 ($curve + ".worldSpace[0]")`;
			for( $j = 0; $j < size( $world); $j++ ){
				string $nType = `nodeType $world[$j]`;
				if( $nType == "follicle"){
					$hairCurve = $world[$j];
					break;	
				}
			}
		}
		if( $hairCurve == "" ){
			string $local[] = `listConnections -sh 1 ($curve + ".local")`;
			for( $j = 0; $j < size( $local); $j++ ){
				string $nType = `nodeType $local[$j]`;
				if( $nType == "follicle"){
					$hairCurve = $local[$j];
					break;
				}
			}
		}
		if( $hairCurve != "" ){
			// add this to the list if it is not already included
			for( $j = 0; $j < $len; $j++ ){
				if( $hairCurve == $out[$j] ){
					$hairCurve = "";
					break;
				}
			}
			if( $hairCurve != "" ){
				$out[$len] = $hairCurve;
				$len++;
			}
		}
	}
	return $out;
}
