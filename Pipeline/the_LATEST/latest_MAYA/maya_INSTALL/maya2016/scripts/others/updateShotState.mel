// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//  Creation Date:  April 2009
//
//  Description:
//		This script updates the connections between a shot and its image plane.
//		editor.
//
//  Input Arguments:
//		None.
//
//  Return Value:
//		None.
//
//  Note:
//		None.
// 

global proc int updateShotState( string $shot )
{
	$camera = getShotsCamera($shot);

	if ($camera == "")
		return false;

	string $ip, $existingIP[] = getCamerasImagePlanes($camera);
	string $fp = getShotsClip( $shot );

	// Disconnect the image planes that aren't the shot's clip.
	int $alreadyConnected = false;
	for ($ip in $existingIP)
	{
		if ($ip == $fp)
			$alreadyConnected = true;
		else
			disconnectAttr -na ($ip + ".message ") ( $camera + ".imagePlane");
	}

	if ((!$alreadyConnected) && ($fp != ""))
		connectAttr -nextAvailable ($fp + ".message") ($camera + ".imagePlane");

	return true;
}
