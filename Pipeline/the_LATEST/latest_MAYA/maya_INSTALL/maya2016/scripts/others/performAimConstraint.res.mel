// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

displayString -replace -value "Add" m_performAimConstraint.kAddButton;
displayString -replace -value "Set layer to override:" m_performAimConstraint.kAimConstraintAnimLayerToOverride;
displayString -replace -value "Indicate whether you want an absolute effect (override) from the constraint or an additive one" m_performAimConstraint.kAimConstraintAnimLayerToOverrideAnnot;
displayString -replace -value "Aim Constraint Options" m_performAimConstraint.kAimConstraintOptions;
displayString -replace -value "Aim vector:" m_performAimConstraint.kAimVector;
displayString -replace -value "All" m_performAimConstraint.kAll;
displayString -replace -value "Animation Layer" m_performAimConstraint.kAnimLayer;
displayString -replace -value "Constraint axes:" m_performAimConstraint.kConstraintAxes;
displayString -replace -value "Maintain offset:" m_performAimConstraint.kMaintainOffset;
displayString -replace -value "Preserve the initial offset between the object and the target(s)" m_performAimConstraint.kMaintainOffsetAnnot;
displayString -replace -value "None" m_performAimConstraint.kNone;
displayString -replace -value "None" m_performAimConstraint.kNoneLayer;
displayString -replace -value "Object rotation up" m_performAimConstraint.kObjectRotationUp;
displayString -replace -value "Object up" m_performAimConstraint.kObjectUp;
displayString -replace -value "Offset:" m_performAimConstraint.kOffset;
displayString -replace -value "Scene up" m_performAimConstraint.kSceneUp;
displayString -replace -value "Up vector:" m_performAimConstraint.kUpVector;
displayString -replace -value "Vector" m_performAimConstraint.kVector;
displayString -replace -value "Weight:" m_performAimConstraint.kWeight;
displayString -replace -value "World up object:" m_performAimConstraint.kWorldUpObject;
displayString -replace -value "World up type:" m_performAimConstraint.kWorldUpType;
displayString -replace -value "World up vector:" m_performAimConstraint.kWorldUpVector;
displayString -replace -value "X" m_performAimConstraint.kX;
displayString -replace -value "Y" m_performAimConstraint.kY;
displayString -replace -value "Z" m_performAimConstraint.kZ;
