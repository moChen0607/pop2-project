// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
// Creation Date:  May 2000 
//
//
//
//  Procedure Name:
//     	artFluidAttrVerifyGrid
//
//  Description:
//		You can't paint a fluid property unless that
//		property is simulated using either a DynamicGrid
//		or a StaticGrid.  If the user tries to paint a non-
//		grid property, pop up a confirm box
//		
//		This script is tied to the paintFluids tool via:
//
//		artFluidAttrCtx -e -beforeStrokeCmd "artFluidAttrVerifyAttributeGrid"
//		
//		in artFluidAttrToolScript.mel, which creates the tool.
//		
//  Return Value:
//      None.
//
global proc artFluidAttrVerifyGrid( string $current) {
	string $create[];

	if( !`exists activeFluidsVerifyGrid` ) {
		source "fluidsVerifyGrid.mel";
	}

	if( `activeFluidsVerifyGrid $current $create` ) {
		return;
	}

	string $createDynamic = $create[0];
	string $createStatic = $create[1];

	// User is trying to paint an attribute that is NOT a grid-valued
	// attribute.  Pop up confirm box and give him the option to
	// change it...
	//
	string $gridTypes;
	string $buttons;

	// Only need "Yes" button, since there's no choice for
	// Static grids on these attributes...
	//
	string $setToDynamic = (uiRes("m_artFluidAttrVerifyGrid.kSettoDynamic"));
	string $cancel = (uiRes("m_artFluidAttrVerifyGrid.kCancel"));
	string $setToStatic = (uiRes("m_artFluidAttrVerifyGrid.kSettoStatic"));
	if( size( $createStatic ) == 0 ) {
		$gridTypes = (uiRes("m_artFluidAttrVerifyGrid.kDynamic"));
		$buttons = ( "-button \"" + $setToDynamic + "\" " +
					 "-button \"" + $cancel + "\" " +
					 "-cancelButton \"" + $cancel + "\" " +
					 "-defaultButton \"" + $setToDynamic + "\" " +
					 "-dismissString \"" + $cancel + "\" " );
	} else {
		$gridTypes = (uiRes("m_artFluidAttrVerifyGrid.kDynamicOrStatic"));
		$buttons = ( "-button \"" + $setToDynamic + "\" " +
					 "-button \"" + $setToStatic + "\" " +
					 "-button \"" + $cancel + "\" " +
					 "-cancelButton \"" + $cancel + "\" " +
					 "-defaultButton \"" + $setToDynamic + "\" " +
					 "-dismissString \"" + $cancel + "\" " );
	}
	
	string $currentUI = `substitute "and" $current " and "`;
	

	if( !`exists getActiveFluidShapes` ) {
		source "getFluidShape.mel";
	}

	string $selFluids[] = `getActiveFluidShapes`;
	string $title = (uiRes("m_artFluidAttrVerifyGrid.kCanNotPaint"));
	$title = `format -s $currentUI -s $selFluids[0] $title`;
	string $msg = (uiRes("m_artFluidAttrVerifyGrid.kPaintAttributeMsg"));
	$msg = `format -s $gridTypes $msg`;

	string $confirmCmd = ( "confirmDialog -title \""
						+ $title
						+ "\" -message \"" 
						+ $msg
						+ "\" "
						+ $buttons );		
 					  
	string $response = eval( $confirmCmd );
	
	if( $response == $setToDynamic ) {
		evalEcho( $createDynamic );
	} else if( $response == $setToStatic ) {
		evalEcho( $createStatic );
	}
}

