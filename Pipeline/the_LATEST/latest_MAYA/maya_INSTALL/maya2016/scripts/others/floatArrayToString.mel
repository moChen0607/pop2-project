// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//<doc>
//<name floatArrayToString>
//
//<synopsis>
//	string floatArrayToString( float $array[], string $separationString )
//
//<description>
//	Return a string that combines all the float elements of $array,
//	each separated by the separation string.
//
//<flags>
//  float  $array[]          The float array.
//  string $separationString Defines the characters to place between 
//                           each float element.
//
//<returns>
//  string : A string combining all the individual float elements.
//
//
//<examples>
//
//	floatArrayToString( { 1.0, 2.5, 3.2 }, "");
//	// Result: 12.53.2 //
//
//	floatArrayToString({ 1.0, 2.5, 3.2 }, ", ");
//	// Result: 1, 2.5, 3.2 //
//
//	floatArrayToString({ 1.0, 2.5, 3.2 }, "/");
//	// Result: 1/2.5/3.2 //
//
//</doc>
//
global proc string floatArrayToString(float $array[], string $separationString)
{
	string $output = "";

	int $count = size($array);
	if ($count)
	{
		int $index;
		$output = $array[0];
		for ($index = 1; $index < $count; $index++)
			$output += ($separationString + $array[$index]);
	}

	return $output;
}
