// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

global string $currentUVBrushMode = "";
global string $lastUVBrushMode = "";

global proc texSculptCacheContextOptionsPopup(string $editor, string $editorCmd)
{
	global string $lastUVBrushMode;
	string $updateEditor = ( "txtWndUpdateEditor(\"" + $editor + "\", \"" +
							 $editorCmd + "\", \"null\", 101);" );
	string $ml = $lastUVBrushMode;
	if( $lastUVBrushMode == "Freeze" )
		$ml = "Pin";
	string $lml = (uiRes("m_texSculptCacheContextOptionsPopup.kLastTool")) + $ml;

	menuItem -rp "N" -l (uiRes("m_texSculptCacheContextOptionsPopup.kInvertPin"))
 		-c ("TexSculptInvertPin")
		($editor+"Invert");
	
	menuItem -rp "NE" -l (uiRes("m_texSculptCacheContextOptionsPopup.kCutUVTool"))
 		-c ( "setToolTo texCutUVContext;" + "texCutContext -edit -mode Cut texCutUVContext;" +$updateEditor)
		($editor+"UVCutTool");
	
	menuItem -rp "E" -l $lml 
		-c(("setToolToLastTool( \"" + $editor + "\");" + $updateEditor))
		($editor+"LastTool");
	
	menuItem -rp "SE" -l (uiRes("m_texSculptCacheContextOptionsPopup.kGrabUVTool"))
 		-c ("texSculptCacheContext -e -m Grab texSculptCacheContextObj; " +  "setToolTo texSculptCacheContextObj;" + $updateEditor)
		($editor+"GrabUVTool");

	menuItem -rp "S" -l (uiRes("m_texSculptCacheContextOptionsPopup.kPinUVTool"))
 		-c ("texSculptCacheContext -e -m Freeze texSculptCacheContextObj; " + "setToolTo texSculptCacheContextObj;" + $updateEditor)
		($editor+"PinUVTool");

	menuItem -rp "W" -l (uiRes("m_texSculptCacheContextOptionsPopup.kFalloffType")) -subMenu 1
		($editor+"FalloffType");

		menuItem -rp "W" -l (uiRes("m_texSculptCacheContextOptionsPopup.kFalloffHybrid"))
	 		-c ("texSculptCacheContext -e -falloffType 0 `currentCtx`; ")
			($editor+"FalloffHybrid");
		menuItem -rp "SW" -l (uiRes("m_texSculptCacheContextOptionsPopup.kFalloffSurface"))
	 		-c ("texSculptCacheContext -e -falloffType 1 `currentCtx`; ")
			($editor+"FalloffSurface");
		menuItem -rp "S" -l (uiRes("m_texSculptCacheContextOptionsPopup.kFalloffVolume"))
	 		-c ("texSculptCacheContext -e -falloffType 2 `currentCtx`; ")
			($editor+"FalloffVolume");
}

global proc setToolToLastTool(string $editor)
{
	global string $lastUVBrushMode;
	string $tool = `currentCtx`;
	if($lastUVBrushMode == "Grab" || $lastUVBrushMode == "Freeze" || $lastUVBrushMode == "Pinch" || $lastUVBrushMode == "Smear" || $lastUVBrushMode == "Bulge")
	{
		setToolTo texSculptCacheContextObj;
		texSculptCacheContext -e -mode $lastUVBrushMode texSculptCacheContextObj; 
	}
	else if($lastUVBrushMode == "Cut" || $lastUVBrushMode == "Sew")
	{
		setToolTo texCutUVContext; 
		texCutContext -edit -mode $lastUVBrushMode texCutUVContext; 
	}
	else if($lastUVBrushMode == "Unfold")
	{
		setToolTo texUnfoldUVContext; 
		Unfold3DContext -e -unfold $tool;
	}
	else if($lastUVBrushMode == "Optimize")
	{
		setToolTo texUnfoldUVContext; 
		Unfold3DContext -e -optimize $tool; 
	}
}
