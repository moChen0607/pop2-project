// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Procedure Name:
//      characterFind
//
//  Description:
//	    Change the Trax display to show the character that contains whatever objects
//      in the scene are selected.
//
//  Input Arguments:
//		$listItem - current trax editor list item
//      $editor - trax editor window
//
//  Return Value:
//      None
//
global proc
characterFind(string $listItem, string $editor)
{
	string $sel[] = `ls -sl`;
	int $selNum = size($sel);

	// get the characters in the scene
	//
	string $chars[] =`ls -type character`;
	int $charNum = size($chars);

	if (0 == $selNum) {
		error (uiRes("m_characterFind.kSelectTheObject"));
	}
	if (0 == $charNum) {
		error (uiRes("m_characterFind.kThereAreNoChars"));
	}

	// search through the characters to see if the selected node is in there.
	//
	select -cl;
	ClearCurrentCharacterList;
	setCurrentCharacterList $editor 1;
	string $multChars[];
	for ($charac in $chars) {
		select -cl;
		selectNodesInCharacter($charac); //select the members of the character
		string $members[] = `ls -sl`; //array of the characters nodes
		int $numMembers=`size($members)`;

		int $y=0;
		int $foundIt = 0;
		for ($y=0; $y < $numMembers && !$foundIt ; $y++) {
			for ($z=0; $z < $selNum && !$foundIt ; $z++) {
				if ($members[$y] == $sel[$z]) {
					//select the character and only show it in trax.
					$multChars[size($multChars)] = $charac;
					$foundIt = 1;
				}
			}
		}
	}

	// restore the selection
	//
	select -r $sel;
	if (size($multChars)>0) { 
		setCurrentCharacters  $multChars ;
		toggleCurrentCharacterList $listItem $editor;
		setCurrentCharacterList $editor 1;
	}
	else {
		error (uiRes("m_characterFind.kTheSelectedObject"));
	}
}
