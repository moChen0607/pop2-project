// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//	dynIntMinMax.mel
//  This proc contains utility routines needed by various files.
//

//-----------------------  dynIntMinMax  ------------------------------
//
// Set the new control value in the context and adjust the intSliderGrp
// range if the user has gone  beyond the current slider min/mix.
//
global proc dynIntMinMax(string $toolName, 
						string $contextName,
						string $controlName, 
						string $flag,
						int $fieldMin, int $fieldMax)
{

	// If the user has typed in a number greater than the current
	// slider range, adjust the slider range to go from 0 to twice
	// the new value.
	//

	// Get the new value typed in, and the current max and min.
	//
	int $newValue = `intSliderGrp -q -v $controlName`;
	int $currMaxValue = `intSliderGrp -q -max $controlName`;
	int $currMinValue = `intSliderGrp -q -min $controlName`;

	// Set the new value in the context.
	//
	eval($contextName+" -e "+$flag+" "+$newValue+" "+$toolName);
	 

	if ($newValue < $currMinValue)
	{
		// If the new new value is less than the current minimum,
		// set the max value to 0, and the min value to newValue * 2
		//
		int $newMax = 0.0;
		int $newMin = $newValue * 2;
		intSliderGrp -e 
				-min $newMin -fmn $fieldMin
				-max $newMax -fmx $fieldMax 
				-step 1
				$controlName;
	}
	else if ($newValue > $currMaxValue)
	{
		// If the new new value is greater than the current maximum,
		// set the min value to 0 and the max value to newValue * 2
		//
		int $newMin = 0.0;
		int $newMax = $newValue * 2;
		intSliderGrp -e 
			-min $newMin -fmn $fieldMin
			-max $newMax -fmx $fieldMax 
			-step 1
			$controlName;
	}
}

