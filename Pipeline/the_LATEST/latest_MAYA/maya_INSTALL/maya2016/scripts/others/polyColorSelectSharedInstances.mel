// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
// This script helps to visualize the sharing of color sets on instances for
// per-instance color sets.
//
// Given a instance, it finds the current color set for that instance and 
// then selects all the instances that are also sharing that set.
//
//
global proc int polyColorSelectSharedInstances()
{
	int $rtn = 0;
	string $sel[] = `ls -sl`;
	if (size($sel) == 1) {
		select -r $sel[0];
		string $currSet[] = `polyColorSet -q -currentPerInstanceSet $sel[0]`;
		string $baseName[] = `polyColorSet -pi 1 -q -currentColorSet $sel[0]`;
		if (size($currSet) > 0) {
			if ($baseName[0] == $currSet[0]) {
				// this is not a per-instance set so they all share
				//
				string $rel[] = `listRelatives -pa -type mesh -ni`;
				select -add $rel;
			} else {
				string $members[] = `polyColorSet -colorSet $currSet[0] -q -shareInstances`;
				select -add $members;
			}
			$sel = `ls -sl`;
			string $resultFmt = (uiRes("m_polyColorSelectSharedInstances.kResult"));
			string $sizeStr = size($sel);
			string $resultString = `format -s $sizeStr $resultFmt`;
			print($resultString);
		} else {
			warning( (uiRes("m_polyColorSelectSharedInstances.kNoPerInstance")));
			select -d;
		}
	} else {
		if (size($sel) == 0) {
			error( (uiRes("m_polyColorSelectSharedInstances.kSelectOneInstance")));
		} else {
			error( (uiRes("m_polyColorSelectSharedInstances.kTooManyInstances")));
		}
	}
	return $rtn;
}
