// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
// Creation Date:  14 January 1999
//
//
//  Procedure Name:
//      untrimToolScript
//
//  Description:
//	create wrapper around the untrim command
//
//  Input Arguments:
//		0 ==> do the command.
//		1 ==> show the tool/action option box
//		2 ==> return the command
//		3 ==> show tool/action option box
//		4 ==> enter the tool
//
//  Return Value:
//      None.
//

global proc untrimToolSetup( int $forceFactorySettings, string $goToTool )
{
	if( $forceFactorySettings || !`optionVar -ex untrimEuc` ) {
		optionVar -iv untrimEuc 0;
	}
	if( $forceFactorySettings || !`optionVar -ex untrimLac` ) {
		optionVar -iv untrimLac 1;
	}
	if( "" != $goToTool ) {
		scriptCtx -e -euc `optionVar -q untrimEuc` $goToTool;
		scriptCtx -e -lac `optionVar -q untrimLac` $goToTool;
	}
}

global proc untrimValues ( string $toolName ) 
{
	performUntrim 3 $toolName;
	scriptCtxCommonValues( $toolName );
}

global proc untrimProperties()
{
	scriptCtxCommonProperties;
}

proc createUntrimContext( string $tool )
{
	if( ! `scriptCtx -exists $tool` ) {
		untrimToolSetup( 0, "" );
		scriptCtx -i1 "untrim.png"
		  -title (uiRes("m_untrimToolScript.kUntrimSurfacesTool"))
		  -bcn "untrim"

		  -exitUponCompletion `optionVar -q untrimEuc`
		  -totalSelectionSets 1
		  -expandSelectionList true
		  -fcs ("untrimToolScript 0")

		  -setNoSelectionPrompt ((uiRes("m_untrimToolScript.kSelectSurfaces")) )
		  -setSelectionPrompt ((uiRes("m_untrimToolScript.kSelectedMoreSurfaces")) )

		  -setAutoToggleSelection true
		  -setAutoComplete `optionVar -q untrimLac`
		  -showManipulators true

		  -setSelectionCount 0
		  -nurbsSurface true
		$tool;
	}
}

global proc string untrimToolScript( int $setToTool )
//
//	Description :
//		0 ==> do the command.
//		1 ==> show the action option box
//		2 ==> return the command
//		3 ==> show tool/action option box
//		4 ==> enter the tool/do the command
{
	string $tool = "";
	if( $setToTool > 2 ) {
		if( !`optionVar -q modelWithToolUntrim` ) {
			$setToTool = 4 - $setToTool;
		}
		else {
			$tool = "untrimContext";
			createUntrimContext $tool;
		}
	}
	return scriptToolScript( "performUntrim", $setToTool, $tool );
}
