// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//
//<doc>
//<name findAnimCurves>
//
//<synopsis>
//		findAnimCurves (string $selectionConnection)
//
//<returns>
//		string[] (array of animCurves)
//
//<description>
//  Given a selection connection, tells you which curves are selected.
//
//<examples>
//
//  // Get a list of the curves selected in the outliner of the graph editor
//  //
//  GraphEditor;
//  string $selConn = `editor -q -selectionConnection graphEditor1OutlineEd`;
//  findAnimCurves($selConn);
//
//</doc>
/////////////////////////////////////////////////////////////////////////
global proc string[]
findAnimCurves (string $selectionConnection)
{
	string $animCurves[];
	int $numCurves = 0;

	// Make sure we have a valid selection connection
	//
	if ($selectionConnection == "") {
		return ($animCurves);
	}
	if (!`selectionConnection -query -exists $selectionConnection`) {
		return ($animCurves);
	}

	// Get the list of objects within the selection connection
	//
	string $objectList[] = `selectionConnection -query -object $selectionConnection`;
	if (size ($objectList) == 0) {
		return ($animCurves);
	}

	// Find all the animCurves within the object list and curves
	// connected to the select objects
	//
	string $connectList[];
	if (!catch ($connectList = `findKeyframe -curve $objectList`)) {
		for ($connection in $connectList) {
			if (`isAnimCurve $connection` != 1) {
				continue;
			}
			$animCurves[$numCurves] = $connection;
			$numCurves++;
		}
	}

	return ($animCurves);
}
