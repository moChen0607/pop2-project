// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

global proc polySplit2ValuesSetColor(string $tool, string $flag, string $control)
{
	if (`colorSliderGrp -exists $control` &&
		`polySplitCtx2 -exists $tool`)
	{
		string $cmd = ("colorSliderGrp -q -rgb " + $control);

		float $color[] = eval($cmd);

		$cmd = ("polySplitCtx2 -edit -" + $flag);
		$cmd += (" " + $color[0]);
		$cmd += (" " + $color[1]);
		$cmd += (" " + $color[2]);
		$cmd += (" " + $tool);

		eval $cmd;
	}
}

global proc polySplit2Values( string $toolName )
{
	string $parent = (`toolPropertyWindow -q -location` + "|polySplit2");
	setParent $parent;

    checkBoxGrp -e
		-value1 `polySplitCtx2 -q -detachEdges $toolName`
        -onCommand1  ("polySplitCtx2 -e -detachEdges true  "+$toolName)
        -offCommand1 ("polySplitCtx2 -e -detachEdges false "+$toolName)
		PolySplit2DetachEdges;

    checkBoxGrp -e
		-value1 `polySplitCtx2 -q -constrainToEdges $toolName`
        -onCommand1  ("polySplitCtx2 -e -constrainToEdges true  "+$toolName)
        -offCommand1 ("polySplitCtx2 -e -constrainToEdges false "+$toolName)
		PolySplit2ConstrainToEdge;

	checkBoxGrp -e
		-value1 `polySplitCtx2 -q -insertWithEdgeFlow $toolName`
		-onCommand1  ("polySplitCtx2 -e -insertWithEdgeFlow true  "+$toolName)
		-offCommand1 ("polySplitCtx2 -e -insertWithEdgeFlow false "+$toolName)
		PolySplit2InsertWithEdgeFlow;

	floatSliderGrp -e
		-enable `polySplitCtx2 -q -insertWithEdgeFlow $toolName`
		-value `polySplitCtx2 -q -adjustEdgeFlow $toolName`
		-changeCommand ("polySplitCtx2 -e -adjustEdgeFlow #1 "+$toolName)
		PolySplit2AdjustEdgeFlow;

	intFieldGrp -e
		-v1 `polySplitCtx2 -q -edgeMagnets $toolName`
		-changeCommand ("polySplitCtx2 -e -edgeMagnets #1 "+$toolName)
		PolySplit2EdgeMagnets;

	floatSliderGrp -e
		-value `polySplitCtx2 -q -snappingTolerance $toolName`
		-changeCommand ("polySplitCtx2 -e -snappingTolerance #1 "+$toolName)
		PolySplit2SnapTolerance;

	string $cmd;
	float $color[] = `polySplitCtx2 -q -snappedToEdgeColor $toolName`;
	$cmd = ("polySplit2ValuesSetColor \"" + $toolName + "\" \"snappedToEdgeColor\" \"polySplit2EdgeColorSlider\"");
	colorSliderGrp -edit -rgbValue $color[0] $color[1] $color[2] 
			-changeCommand ($cmd)
			polySplit2EdgeColorSlider;

	$color = `polySplitCtx2 -q -snappedToFaceColor $toolName`;
	$cmd = ("polySplit2ValuesSetColor \"" + $toolName + "\" \"snappedToFaceColor\" \"polySplit2FaceColorSlider\"");
	colorSliderGrp -edit -rgbValue $color[0] $color[1] $color[2] 
			-changeCommand ($cmd)
			polySplit2FaceColorSlider;

	$color = `polySplitCtx2 -q -snappedToVertexColor $toolName`;
	$cmd = ("polySplit2ValuesSetColor \"" + $toolName + "\" \"snappedToVertexColor\" \"polySplit2VertexColorSlider\"");
	colorSliderGrp -edit -rgbValue $color[0] $color[1] $color[2] 
			-changeCommand ($cmd)
			polySplit2VertexColorSlider;

	$color = `polySplitCtx2 -q -snappedToMagnetColor $toolName`;
	$cmd = ("polySplit2ValuesSetColor \"" + $toolName + "\" \"snappedToMagnetColor\" \"polySplit2MagnetColorSlider\"");
	colorSliderGrp -edit -rgbValue $color[0] $color[1] $color[2] 
			-changeCommand ($cmd)
			polySplit2MagnetColorSlider;

	$color = `polySplitCtx2 -q -highlightPointColor $toolName`;
	$cmd = ("polySplit2ValuesSetColor \"" + $toolName + "\" \"highlightPointColor\" \"polySplit2PSHColorSlider\"");
	colorSliderGrp -edit -rgbValue $color[0] $color[1] $color[2] 
			-changeCommand ($cmd)
			polySplit2PSHColorSlider;

	$color = `polySplitCtx2 -q -splitLineColor $toolName`;
	$cmd = ("polySplit2ValuesSetColor \"" + $toolName + "\" \"splitLineColor\" \"polySplit2LineColorSlider\"");
	colorSliderGrp -edit -rgbValue $color[0] $color[1] $color[2] 
			-changeCommand ($cmd)
			polySplit2LineColorSlider;

	string $icon = "polySplitFacet.png";
	string $helpTag = "PolySplitTool";
	toolPropertySetCommon $toolName $icon $helpTag;
	toolPropertySelect "polySplit2";
}
