// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//	Procedure Name:
//		doDisconnectJoint
//
//	Description:
//		Disconnects a joint from a skeleton hierarchy (the selected joint becomes
//  parented to the world), regardless of whether
//  the skeleton is currently bound to a skin or not.
//
//	Return Value:
//		none
//

global proc
doDisconnectJoint()
{
	string $sl[] = `ls -sl -type joint`;
	if (size($sl) == 0) {
		error( (uiRes("m_doDisconnectJoint.kSelectAJointToDisconnect")));
	}

	int $count = 0;
	for ($obj in $sl) {
	    string $newJointName = `disconnectJoint -deleteHandleMode $obj`;	    
	    string $bindPoses[] = `dagPose -q -name -bp $obj`;
		if(size($bindPoses)>0) 
		{	
		    for($bindPose in $bindPoses) {	    
		        dagPose -worldParent $obj $bindPose;
		        select -r $newJointName;
		        dagPose -bp -addToPose -name $bindPose;		        
		    }
		}
	}
	select -cl;
	for ($obj in $sl) {
	  select -add $obj;
	}
	
	
}
