// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  May 16, 2003
//


source "removeDuplicateNetworksUtils.mel";


global proc removeDuplicateNetworks( string $importedNodes[] )
// 
// Description:
//	Compare each node in $importedNodes with every other node in the scene.
//	If the two nodes are found to be duplicates, any geometry connected to
//	the imported node's network will be assigned to the existing duplicate,
//	and the imported node's network will be deleted.
//
{
	if ( `optionVar -query removeDuplicateShadingNetworksOnImport` )
	{
		// shadingEngines are the root of shading networks
		string $rootType = "shadingEngine";
		// Store a list of all the imported shadingEngines
		string $importedEngines[] = `ls -type $rootType $importedNodes`;
		// Store a list of all existing shadingEngines
		string $existingEngines[] = findAllNodesOfType( $rootType, $importedNodes );

		// Actually remove the duplicate shading networks
		doRemoveDuplicateShadingNetworks( $importedEngines, $existingEngines );
	}
}
