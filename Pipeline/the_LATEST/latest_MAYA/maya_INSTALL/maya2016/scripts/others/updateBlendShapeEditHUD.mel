// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.


global proc updateBlendShapeEditHUD()
//
//  Description:
//		Update the blendshape target editing hud message. The 
//		blendShapeEditHUD optionVar controls the visibility of 
//		the HUD message
//		
//  Input Arguments:
//		None
//
//  Return Value:
//      None
//
{
	if( `optionVar -ex "blendShapeEditHUD"` == 0 )
		optionVar -iv "blendShapeEditHUD" 1;

	int $wantHUD = `optionVar -q "blendShapeEditHUD"`;
	string $tgtName = "";

	if( $wantHUD != 0 )
	{
		// find all blendshape nodes in the scene
		// determine if any are in edit mode
		string $bsn[] = `ls -type "blendShape"`;
		int $nbEdits = 0;

		for( $i = 0; $i < size($bsn) && $nbEdits < 2; $i++ )
		{
			string $attr = $bsn[$i] + ".inputTarget";
			int $tgts[] = `getAttr -multiIndices $attr`;
    
			for( $j = 0; $j < size( $tgts ); $j++ )
			{
				$attr = $bsn[$i] + ".inputTarget[" + $tgts[$j] + "].sculptTargetIndex";
				int $idx = `getAttr $attr`;
        
				if( $idx != -1 )
				{
					if( $nbEdits++ == 0 )
					{
						// first time we've seen a target in edit mode.
						$attr = $bsn[$i] + ".weight[" + $idx + "]";
						$tgtName = `aliasAttr -q $attr`;
					}
					else
					{
						$tgtName += ", ...";
						break;
					}
				}
			}
		}

		if( $nbEdits == 0 )
			$wantHUD = 0;
	}

	setHUDBlendShapeEdit( $wantHUD, $tgtName );
}

