// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

global proc bakeFluidAutoResize()
{
	int $start = `playbackOptions -q -minTime`;
	int $end = `playbackOptions -q -maxTime`;
	string $fluids[] = `ls -sl -dag -type fluidShape`;
	string $bake = ("bakeResults -t \""+$start+":"+$end+"\" -simulation true -sac true");
	int $hasFluid = false;
	string $fluid;
	for( $fluid in $fluids ){
		string $lf = ($fluid + ".lastResizeFrame");
		if( objExists( $lf )){
			$hasFluid = true;
			$bake += (" " + $fluid + ".resolutionW");
			$bake += (" " + $fluid + ".resolutionH");
			$bake += (" " + $fluid + ".resolutionD");
			$bake += (" " + $fluid + ".dimensions");
			string $tforms[] = listTransforms( $fluid );
			$bake += (" " + $tforms[0] + ".translate");
		}
	}
	if( $hasFluid ){
		eval $bake;
		source disableFluidAutoResize;
		for( $fluid in $fluids ){
			disableAutoResizeForFluid( $fluid );
		}
	} else {
		warning ( (uiRes("m_bakeFluidAutoResize.kNoResizeFluids")));
	}
}