// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
// Creation Date:  3 Februrary 2004
//
    
global proc doTruncateHairCache() {
	// Make sure that we have a fluid selected
	// or warn the user and fail

	string $selectedHairSystems[] = `getSelectedHairSystems`; 
	if( size( $selectedHairSystems ) == 0 )	{
		warning(uiRes("m_doDeleteHairPB.kNoHairSystemSelected"));
		return;
	}

	if( !`exists hairPlaybackCaches_disableUnselected` ) {
		source "hairPlaybackCaches.mel";
	}
	
	int $oldEnable = `getAttr globalCacheControl.writeEnable`;
	string $disabledCaches[] = `hairPlaybackCaches_disableUnselected`;
	setAttr globalCacheControl.writeEnable 1;


	for( $hairShape in $selectedHairSystems ) {
		if(`connectionInfo -id ($hairShape + ".diskCache")` > 0 ) {
		// FIX_LATER ?
		//
		//		if( !fluidDiskCacheHasLocalCopy() ) {
		//			return;
		//		}
		
			truncateHairCache $hairShape;
		}
	}

	setAttr globalCacheControl.writeEnable $oldEnable;
	hairPlaybackCaches_enable( $disabledCaches );
}
