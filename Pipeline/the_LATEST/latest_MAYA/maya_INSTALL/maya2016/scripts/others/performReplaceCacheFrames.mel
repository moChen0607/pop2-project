// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date: Nov 2014
//
//  Description:
//      This is a helper script to perform the replace cache frames depending 
//		on the object type.
//


//
//  Procedure Name:
//      performReplaceCacheFrames
//
//  Description:
//		Perform the command using the corresponding replace cache frames command 
//		depending on the selected object to cache type.  
//
//  Input Arguments:
//      0 - Execute the command.
//      1 - Show the option box dialog.
//      2 - Return the command.
//
//  Return Value:
//      None.
//
global proc string performReplaceCacheFrames(int $action)
{
	string $fluObjs[] = getFluidObjectsToCache(0); // Don't show error
	string $nClothObjs[] = getNclothObjectsToCache(0); // Don't show error

	if ((size($fluObjs) > 0) && (size($nClothObjs) == 0)){
		return performReplaceFluidCacheFrames($action);
	}

	if ((size($nClothObjs) > 0) && (size($fluObjs) == 0)){
		return performReplaceNclothCacheFrames($action);
	}

	if ($action == 1) {
		error((uiRes("m_performReplaceCacheFrames.kNeedObjectTypeForReplaceCacheFramesOptionError")));
	}
	else{
		error((uiRes("m_performReplaceCacheFrames.kSelectObjectToCacheError")));
	}
	return "";
}

