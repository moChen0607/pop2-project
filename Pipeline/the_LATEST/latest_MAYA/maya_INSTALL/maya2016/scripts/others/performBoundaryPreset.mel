// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  Mar 14, 1997
//
//  Description:
//      This script is doing the boundary work.
//


global proc performBoundaryPreset( int $doHistory, int $order,
								   int $insist, int $partial,
								   int $polys, int $useGlobal,
								   float $globalTol, float $localTol )
{
	// Get a list of each type of acceptable object type - 
	// s, and s-on-surface.
	//
	global int $gSelectIsoparmsBit;
	global int $gSelectNurbsCurvesBit;
	global int $gSelectSurfaceEdgeBit;
	global int $gSelectCurvesOnSurfacesBit;
	global int $gSelectMeshEdge;

	string $list[] = `filterExpand -ex true -sm $gSelectMeshEdge -sm $gSelectIsoparmsBit -sm $gSelectNurbsCurvesBit -sm $gSelectSurfaceEdgeBit -sm $gSelectCurvesOnSurfacesBit`;

	// Execute boundary on all active s.
	//
	$cmd = "boundary" + " -ch " + $doHistory + 
		   " -or " + $order +
		   " -ep " + $insist + 
		   " -rn " + $partial +
		   " -po " + $polys;

	if( $useGlobal ) {
		$cmd += " -ept " + $globalTol;
	}
	else {
		$cmd += " -ept " + $localTol;
	}

	int $i, $n = size($list);
	if( $n > 4 ) {
		string $msg = (uiRes("m_performBoundaryPreset.kTooManyCurves"));
		warning(`format -stringArg $n $msg`);
		$n = 4;
	}

	if( $n < 3 ) {
		string $msg = (uiRes("m_performBoundaryPreset.kNotEnoughCurves"));
		error(`format -stringArg $n $msg`);
		return;
	}

	for( $i=0; $i<$n; $i+=1 ) {
		$cmd = $cmd + " \"" + $list[$i] + "\"";
	}
	string $results[] = evalEcho($cmd);

	if( 0 == size($results) ) {
		string $msg = (uiRes("m_performBoundaryPreset.kOpFailed"));
		error($msg);
	}
	else {
		select -r $results[0];
	}
}

