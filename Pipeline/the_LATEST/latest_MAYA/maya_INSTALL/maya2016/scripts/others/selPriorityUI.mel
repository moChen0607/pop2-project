// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
global proc selPriorityUI( ) 
//
// Sets selection priority for object types in the
// scene
//
{

	if (`window -exists selPriorityWin`) 
	{
		showWindow selPriorityWin;
		return;
	}
	int $currentVal;
	string $command;
	string $selItems[] =  { "handle",
							"ikHandle",
							"ikEndEffector",
							"joint",
							"light",
							"camera",
							"lattice",
							"sculpt",
							"nurbsSurface",
							"polymesh",
							"curve",
							"nurbsCurve",
							"cos",
							"plane",
							"locator",
							"dimension",
							"particleShape",
							"emitter",
							"field",
							"spring",
							"rigidBody",
							"rigidConstraint",
							"texture",
							"surfaceEdge",
							"subdiv",
							"subdivMeshPoint",
							"subdivMeshEdge",
							"subdivMeshFace",
							"surfaceFace"
						};

				
	window -title (uiRes("m_selPriorityUI.kSelPriority")) selPriorityWin;

		columnLayout -adj true priorityContainer;

		int $i, $n;
		$n = size($selItems);
			for( $i=0; $i < $n; $i++)
			{
				$currentVal = `selectPriority -q ("-" + $selItems[$i])`;
				$command = ( "selectPriority -" + $selItems[$i] + 
							" `intSliderGrp -q -v " + $selItems[$i] + 
							"intSlider`" ); 
			
				intSliderGrp -f 
					-l $selItems[$i] 
					-minValue 0 -maxValue 50 
					-v $currentVal
					-dc $command
					( $selItems[$i] + "intSlider" );
			}

		setParent ..;

	showWindow selPriorityWin;
}
