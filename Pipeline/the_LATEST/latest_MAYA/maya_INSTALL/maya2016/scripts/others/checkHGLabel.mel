// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

// Description:  Check if the label of the hypergraph panel
//               reflects the given type of view shown in 
//               the hypergraph, so that it is easier for
//               a user to tell from the label which panel
//               is showing which type of view.
//
//               - For DAG view, we want the label to be
//                 "Hierarchy+number"; 
//               - for DG view, we want the label to be
//                 "InputOutput+number".
//
global proc checkHGLabel(string $editor)
{
    // Get the hypergraph editor's type.
    //
    string $type = `hyperGraph -query -graphType $editor`;
    if ($type != "DAG" && $type != "DG")
    {
        return;
    }

    // Get the panel name.
    // The editor name is the panel name + "HyperGraphEd".
    //
    int $numOfChars = size($editor);
    $numOfChars =  $numOfChars - size("HyperGraphEd");
    if ($numOfChars <= 0)
    {
        return;
    } 
    string $panelName = `substring $editor 1 $numOfChars`;

    string $label = `scriptedPanel -query -label $panelName`;

    // Check to see if the label is already corresponding to the
    // given type.
    //
    string $prefix = localizedPanelLabel( "Hypergraph Hierarchy" );
    $numOfChars = size($prefix);
    if(( $type == "DAG" )
    && ( size($label) >= $numOfChars )
	&& ( `substring $label 1 $numOfChars` == $prefix ))
    {
        // The label is OK.
        //
        return;
    }

    $prefix = localizedPanelLabel( "Hypergraph InputOutput" );
    $numOfChars = size($prefix);
    if(( $type == "DG" )
	&& ( size($label) >= $numOfChars ) 
	&& ( `substring $label 1 $numOfChars` == $prefix ))
    {
        // The label is OK.
        //
        return;
    }

    // The label does not reflect the given type.
    //
    $label = hyperGraphGenerateNewPanelLabel($type);

    // Change the label for the panel.
    //
    scriptedPanel -edit -label $label $panelName;

    // If the hypergrpah panel is already opened in a window,
    // change the window's title to the new label.
    //
    string $windowName = $panelName + "Window";
    if (`panel -q -to $panelName`) 
    {
        //
        // The window is already displayed, change the window's title
        // to the new label.  
        //
        window -edit -title $label $windowName;
    }
}
