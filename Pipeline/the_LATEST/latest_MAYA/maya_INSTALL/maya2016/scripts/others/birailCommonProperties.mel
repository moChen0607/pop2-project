// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  Oct 10 1996
//
//  Description:
//      These procs create the controls which are common for all
//		birail surface commands.
//      See also birailCommonValues.mel for procs that set the state of the
//      property sheet.
//
//  Input Arguments:
//      None.
//
//  Return Value:
//      None.
//

proc birailCommonSetCallbacks( string $parent, string $numberOfProfiles, string $ctxCmdName ) 
//
//  Description:
//      Set the callbacks for all of the controls in the dialog.
//      Modifying the context will force commonModellingValues() to
//      be called to update the state of the property sheet.
//
//-cc3 ($ctxCmdName + " -e -bp #1 `currentCtx`")
//
{
    setParent $parent;

    checkBoxGrp -e
        -cc1 ($ctxCmdName + " -e -br1 #1 `currentCtx`")
        -cc2 ($ctxCmdName + " -e -br2 #1 `currentCtx`") rebuildRailOptions ;

	if( $numberOfProfiles == "singleProfile") {
    	checkBoxGrp -e -cc1 ($ctxCmdName + " -e -bpf #1 `currentCtx`") rebuildProfileOptions;
	} else {
    	checkBoxGrp -e
    	   -cc1 ($ctxCmdName + " -e -bpf #1 `currentCtx`")
    	   -cc2 ($ctxCmdName + " -e -bpl #1 `currentCtx`") rebuildProfileOptions ;
	}
}

global proc birailCommonProperties(
	string $parent,
	string $numberOfProfiles,
	string $ctxCmdName)
//
//	Description :
//		Build property sheet for common controls on a birail tool.
//		state of the controls are set in birailCommonValues()
//
//		Common controls will look like :
//			[] rebuild rail 1
//			[] rebuild rail 2
//			[] rebuild profile 
//	
//
{
	setUITemplate -pushTemplate DefaultTemplate;
	setParent $parent;

    //
    // Common modelling options
    //
  	frameLayout -collapsable true -collapse true 
		-l "Rebuild Options" commonBirailFrame;

        columnLayout commonBirailLayout;


		if( $numberOfProfiles == "singleProfile" ) {
    		checkBoxGrp -ncb 1 -l (uiRes("m_birailCommonProperties.kProfileCurves"))  
       	 		-l1 (uiRes("m_birailCommonProperties.kFirstEdge")) rebuildProfileOptions;
		} else {
    		checkBoxGrp -ncb 2 -l (uiRes("m_birailCommonProperties.kProfileCurves2"))  
       	 		-l1 (uiRes("m_birailCommonProperties.kFirstEdge2")) 
			-l2 (uiRes("m_birailCommonProperties.kLastEdge")) rebuildProfileOptions;
		}

    	checkBoxGrp -ncb 2 -l (uiRes("m_birailCommonProperties.kRailCurves")) 
       	 	-l1 (uiRes("m_birailCommonProperties.kFirstEdge3"))
        	-l2 (uiRes("m_birailCommonProperties.kSecondEdge")) rebuildRailOptions;

		setParent .. ;
	setParent .. ;

	birailCommonSetCallbacks( $parent, $numberOfProfiles, $ctxCmdName ) ;
	setUITemplate -popTemplate;
}

