// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//  Procedure Name:
//
//		polyCleanup (command). 
//
//		Input Arguments:
//			0 / 1		: Do the cleanup on all selectable meshes
//			0 / 1		: Only select things that need to be cleaned up
//			0 / 1		: With or without construction history
//
//			0 / 1 		: Triangulate 4-sided faces
//			0 / 1		: Triangulate > 4-sided faces	
//			0 / 1		: Triangulate concave faces
//			0 / 1		: Triangulate holed faces	
//			0 / 1		: Triangulate non-planar faces
//
//			0 / 1		: Delete zero area faces
//			<float>		: Face tolerance
//			0 / 1		: Delete zero area edges
//			<float>		: Edge tolerance
//			0 / 1		: Delete faces with zero area map (uv area)
//			<float>	: Map tolerance
//		Returns:
//			string, of items affected. Empty if no items affected.
//
// Example:
//		// Select from all meshes, all of the criteria
//		//
//		polyCleanup 1 1 1  1 1 1 1 1  1 0.1 1 0.1 1 0.1;
//
//  Description:
//
//      Perform a 'cleanup' of various 'bad' polygon geometry
//		attributes. This includes:
//
//		Deletion of:
//		- zero area face 
//		- zero area edges 
//		- zero area mapped faces 
//
//		Triangulization of :
//		  - non-planar polygons
//		  - 4 to N sided polygons
//		  - concave polygons
//		  - polygons with holes.
//
//      Triangulization will occur first, before deletion.
// 
// 
//////////////////////////////////////////////////////////////////////

global proc string[]
polyCleanup(int $allMeshes, int $selectOnly, int $historyOn,
			int $quads, int $nsided, int $concave, int $holed,
			int $nonplanar, int $zeroGeom, float $zeroGeomTol,
			int $zeroEdge, float $zeroEdgeTol, int $zeroMap,
			float $zeroMapTol)
//
// Description:
//		Perform a cleanup on polygonal meshes (command)
// Arguments:
//		allMeshes : All selectable meshes
//		selectOnly : Only perform a selection
//		historyOn : keep construction history
//
//		quads : check for quads polys
//		nsided : check for n-sided polys
//		nonplanar : check fo non-planar polys
//		holed : check for holed polys
//		concave : check for concave polys
//
//		zeroGeom : check for 0 area faces
//		zeroGeomTol : tolerance for face areas
//		zeroEdge : check for 0 length edges
//		zeroEdgeTol : tolerance for edge length
//		zeroMap : check for 0 uv face area 
//		zeroMapTol : tolerance for uv face areas
//
// Returns:
//		list of items cleaned up. Empty if none
//
{
	string $args[] = {(string)
		$allMeshes,
		$selectOnly,
		$historyOn,
		$quads,
		$nsided,
		$concave,
		$holed,
		$nonplanar,
		$zeroGeom,
		$zeroGeomTol,
		$zeroEdge,
		$zeroEdgeTol,
		$zeroMap,
		$zeroMapTol
	};
	return (polyCleanupArgList ("1", $args));
}
