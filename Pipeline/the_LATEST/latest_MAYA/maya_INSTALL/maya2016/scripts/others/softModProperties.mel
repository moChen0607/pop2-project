// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  November 25, 1996
//
//  Description:
//      This script provides an option box dialog for the softMod tool.
//

//
//  Procedure Name:
//      softModProperties
//
//  Description:
//		Creates the UI for configuring the softMod tool.
//
//  Input Arguments:
//
//  Return Value:
//      None.
//

global proc softModProperties () {

	// Linux Motif2.1 shrinks the checkBox, if the string is ""
	// NT would tab over the blank (" ") string label.
	// So...
	string $emptyLabel = "";
	if (`about -linux`) {
		$emptyLabel = " ";
	}

	// Make sure we have our falloff method global variable setup
	//
	if( !`exists setSoftModOptionVars`)
	{
		source "performSoftMod.mel";
	}
	setSoftModOptionVars( false );

	string $parent = `toolPropertyWindow -q -location`;
	setParent $parent;

	setUITemplate -pushTemplate OptionsTemplate;

	columnLayout -adj true softMod;
		frameLayout -collapsable true -collapse false
			-label (uiRes("m_softModProperties.kSoftModificationSettings")) ;
			columnLayout softModCtrlOptions;

				floatSliderGrp -field true -pre 2
					-min 0
					-max 100
					-label (uiRes("m_softModProperties.kFalloffRadius"))  
					-value 5.0
					softModCtrlFloatRadius;

				rowLayout -nc 2;	
					text 
						(uiRes("m_softModProperties.kFalloffCurve"));	
					gradientControlNoAttr
						-h 90
						softModFalloffRamp;
				setParent ..;
								
				optionMenuGrp
					-label (uiRes("m_softModProperties.kFalloffMode"))
					softModCtrlFalloffMode;
				int $i;
				global string $gSoftModFalloffModes[];
				for( $i = 0; $i < size( $gSoftModFalloffModes ); $i++)
					menuItem -label $gSoftModFalloffModes[ $i];

				checkBoxGrp
					-label (uiRes("m_softModProperties.kColorFeedback"))
					-label1 $emptyLabel
					-numberOfCheckBoxes 1
					softModColorFeedback;

				checkBoxGrp
					-label (uiRes("m_softModProperties.kPreserveHistory")) 
					-label1 $emptyLabel
					-numberOfCheckBoxes 1
					softModCtrlPreserveHistory;

				checkBoxGrp
					-label (uiRes("m_softModProperties.kMaskUnselected")) 
					-label1 $emptyLabel
					-numberOfCheckBoxes 1
					softModCtrlFalloffMasking;

				checkBoxGrp
					-label (uiRes("m_softModProperties.kAroundSelection")) 
					-label1 $emptyLabel
					-numberOfCheckBoxes 1
					softModCtrlFalloffAroundSelection;
			
				checkBoxGrp
					-label (uiRes("m_softModProperties.kFalloffBasedOn")) 
					-label1 (uiRes("m_softModProperties.kX")) 
					-label2 (uiRes("m_softModProperties.kY")) 
					-label3 (uiRes("m_softModProperties.kZ")) 
					-numberOfCheckBoxes 3
					softModCtrlFalloffIn;			

			setParent ..;
		setParent ..;
	setParent ..;	

	setUITemplate -popTemplate;
}
