// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

// Description:  This procedure is called to stop the maya software 
//      renderer IPR session.
//
global proc mayaSoftwareStopIprRender()
{
    // Stop IPR if it is still running.
    //
	if (isIprFileLoaded()) {
	    // Delete the IPR engine
	    //
	    if (isIprFileLoaded()) {
	        iprEngine
	            -edit
	            -releaseIprImage
	            defaultIprEngine;
	
	        deleteUI defaultIprEngine;
	    }
	
	    // Delete the IPR default light, if there is one.  If there is indeed one,
	    // it will be the directional light with the dynamic attribute
	    // isIPRDefaultLight.
	    //
	
	    string $directionalLights[] = `ls -type directionalLight`;
	
	    string $light;
	
	    for ($light in $directionalLights)
	    {
	        if (`objExists ($light + ".isIPRDefaultLight")`)
	        {
	            // Delete the transform (i.e., parents[0]), not just the light,
	            // and make sure it doesn't go on undo queue.
	            //
	            string $parents[] = `listRelatives -parent $light`;
	            int $undoOn = `undoInfo -query -swf`;
	            if ($undoOn)
	                undoInfo -swf off;
	
	            delete $parents[0];
	            if ($undoOn)
	                undoInfo -swf on;
	
	            break;
	        }
	    }
	
	    // Update the memory estimate.
	    //
	    updateIPRMemoryEstimate();
	}
}
