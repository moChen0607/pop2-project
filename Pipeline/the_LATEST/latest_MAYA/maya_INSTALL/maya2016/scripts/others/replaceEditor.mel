// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//  Procedure Name:
//      replaceEditor
//
//  Description:
//		replace the editor under the pointer with the specified editor
//
//  Input Arguments:
//      string $replacementEditor: name of the new editor e.g. graphEditor1
//		string $windowCommand: command to open the new editor in a window e.g. GraphEditor
//
//  Return Value:
//      None.
//


global proc replaceEditor (string $replacementEditor, string $windowCommand)
{
	
	string $currentPanel = `getPanel -underPointer`;
	//check if in a window
	string $window = ($currentPanel + "Window");
	int $windowExists = `window -exists $window`;
	if ($windowExists){						
		int $tlc[] = `window -q -topLeftCorner $window`;
		int $w = `window -q -width $window`;
		int $h = `window -q -height $window`;
		
		// for Mac Qt 4.8+ Maya will crash on a corrupt changeGuard call
		// to prevent this we'll hide the current window before switching to the new one
		if ( `about -mac` )
		{
			window -e -vis 0 $window;
		}
		else
		{
			// For windows and linux,
			// If there is dpi scaling, querying the width and height will be multiplied
			// by dpi scaling value. So we need to divide the width and height by dpi 
			// scaling value to get the right size for creating new window.
			// IMPORTANT: In the future, if the behavior changes (if querying
			// width and height returns non-scaled value), then this script has
			// to be updated accordingly. 
			float $scaleValue = `mayaDpiSetting -q -realScaleValue`;
			if ($scaleValue != 1.0 && $scaleValue > 0.0)
			{
				$w = $w / $scaleValue;
				$h = $h / $scaleValue;
			}
		}

		string $newWindow = ($replacementEditor + "Window");
		eval $windowCommand;
		
		window -e -topLeftCorner $tlc[0] $tlc[1] $newWindow;
		window -e -width $w $newWindow;
		window -e -height $h $newWindow;
		
		deleteUI $window;
		
	} else {
		scriptedPanel -e -rp $currentPanel $replacementEditor;
	}
																
}
