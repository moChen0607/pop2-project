// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  17 June 1997
//
//
//  Description:
//      This implements the Fit Selected in All Panels with a
//      Marking menu.
//



global proc buildSelectAllMM()
//
// Creates a marking menu that allows the user
// to select All history/future. It reuses
// the name tempMM for the name of the menu, to
// ensure that there's only one of these at
// any one time.
{
    if( `popupMenu -exists tempMM` )
    {
        deleteUI tempMM;
    }

	global string $MMcmd;

	$MMcmd = "";

	
    popupMenu -mm 1 -b 1 -aob 1 -p `findPanelPopupParent` -pmc ("$MMcmd = \"Posted\"") tempMM;

	menuItem -radialPosition "W" -label (uiRes("m_buildSelectAllMM.kSelectAllInputs"))  
		-c "$MMcmd = \"selectHistory\"";
	menuItem -radialPosition "E" -label (uiRes("m_buildSelectAllMM.kSelectAllOutputs"))  
		-c "$MMcmd = \"selectFuture\"";

	menuItem -radialPosition "N" -label (uiRes("m_buildSelectAllMM.kEnableAllOutputs"))  
		-c "$MMcmd = \"enableFuture\"";
	menuItem -radialPosition "S" -label (uiRes("m_buildSelectAllMM.kDisableAllOutputs"))  
		-c "$MMcmd = \"disableFuture\"";

	menuItem -radialPosition "NW" -label (uiRes("m_buildSelectAllMM.kDeleteHistory"))  
		-c "$MMcmd = \"deleteHistory\"" -version "2015";
	menuItem -radialPosition "NE" -label (uiRes("m_buildSelectAllMM.kDeleteNonDeformerHistory"))  
		-c "$MMcmd = \"deleteNDHistory\"" -version "2015";

	setParent -m ..;
}


//
//  Perform the action on button release
//
global proc buildSelectAllMM_release()
{
	global string $MMcmd;

	if ($MMcmd != "") {
		//	Process Marking menu selection
		switch ($MMcmd) {
			case "selectHistory" :
				selectAllInputOutput false;
				break;
			case "selectFuture" :
				selectAllInputOutput true;
				break;
			case "enableFuture" :
				disableOfSelected 1 0;
				break;
			case "disableFuture" :
				disableOfSelected 1 1;
				break;
			case "deleteHistory" :
				DeleteHistory;
				break;
			case "deleteNDHistory" :
				BakeNonDefHistory;
				break;
		}
		$MMcmd = "Processed";
	} 
	
	if( `popupMenu -exists tempMM` ) {
		deleteUI tempMM;
	} 
	
	if ($MMcmd == "") {
		FrameAll;
	}
}
