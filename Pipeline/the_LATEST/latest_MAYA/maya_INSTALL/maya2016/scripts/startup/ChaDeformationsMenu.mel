// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  13 April 1997
//
//  Procedure Name:
//      ChaDeformationsMenu
//
//  Description:
//      Create the RIGGING->Deformations menu
//
//  Input Arguments:
//      parent to parent the menu to.
//
//  Return Value:
//      None.
//
proc makeMuscleMenu(string $parent)
{
	// The deform menu  available in both Modeling and Rigging menu sets

	// If the muscle plugin is not loaded, bail.
	int $isLoaded = `pluginInfo -q -loaded "MayaMuscle"`;
	if(!$isLoaded)
		return;

	// Determine the target parent to insert Muscle menu
	global string $gRigDeformationsMenu;
	global string $gMainDeformMenu;
	if($parent == "MayaWindow|mainRigDeformationsMenu")
	{
		if (!(`menuItem -q -exists cRigMuscleMenu`))
			buidMuscleMenu($parent, "cRigMuscleMenu");
	}
	else if($parent == "MayaWindow|mainDeformMenu")
	{
		if (!(`menuItem -q -exists cModMuscleMenu`))
			buidMuscleMenu($parent, "cModMuscleMenu");
	}
}

global proc ChaDeformationsMenu( string $parent )
{
	int $dimWhenNoSelect = 0;

	setParent -menu $parent;

	// Return if the menu is already build
	if( `menu -q -ni $parent` != 0 ) 
		return;

	menuItem -divider true -dividerLabel  (uiRes("m_ChaDeformationsMenu.kDeformCreate"));

		menuItem -label (uiRes("m_ChaDeformationsMenu.kCreateBlendShape")) 
			-image "blendShape.png"
			-annotation (uiRes("m_ChaDeformationsMenu.kCreateBlendShapeAnnot")) 
			-command "CreateBlendShape"
			blendShapeItem;
		menuItem -optionBox true 
			-annotation (uiRes("m_ChaDeformationsMenu.kBlendShapeOptionAnnot")) 
			-image "blendShape.png"
			-command "CreateBlendShapeOptions"
			blendShapeDialogItem;

		menuItem -label (uiRes("m_ChaDeformationsMenu.kCreateCluster"))  
			-annotation (uiRes("m_ChaDeformationsMenu.kCreateClusterAnnot"))
			-ltVersion 2016
			-image "cluster.png"
			-command "CreateCluster" clusterItem;
		menuItem -optionBox true 
			-annotation (uiRes("m_ChaDeformationsMenu.kClusterOptionAnnot")) 
			-image "cluster.png"
			-command "CreateClusterOptions" 
			clusterDialogItem;

		menuItem -label (uiRes("m_ChaDeformationsMenu.kDeltaMush")) 
			-annotation (uiRes("m_ChaDeformationsMenu.kDeltaMushAnnot"))
			-version 2016
			-command "DeltaMush";
		menuItem -optionBox true
			-annotation (uiRes("m_ChaDeformationsMenu.kDeltaMushOptionAnnot")) 
			-command "DeltaMushOptions";

		menuItem -label (uiRes("m_ChaDeformationsMenu.kCreateLattice")) 
			-image "lattice.png"
			-annotation (uiRes("m_ChaDeformationsMenu.kCreateLatticeAnnot")) 
			-command "CreateLattice" latticeItem;
		menuItem -optionBox true 
			-annotation (uiRes("m_ChaDeformationsMenu.kLatticeOptionAnnot")) 
			-image "lattice.png"
			-command "CreateLatticeOptions" 
			latticeDialogItem;


		menuItem -label (uiRes("m_ChaDeformationsMenu.kCreateWrap")) 
			-image "wrap.png"
			-annotation (uiRes("m_ChaDeformationsMenu.kCreateWrapAnnot")) 
			-command "CreateWrap";
		menuItem -optionBox true
			-image "wrap.png"
			-annotation (uiRes("m_ChaDeformationsMenu.kCreateWrapOptionAnnot")) 
			-command "CreateWrapOptions";

		menuItem -label (uiRes("m_ChaDeformationsMenu.kCreateShrinkWrap")) 
			-image "shrinkwrap.png"
			-annotation (uiRes("m_ChaDeformationsMenu.kCreateShrinkWrapAnnot")) 
			-version 2015
			-command "CreateShrinkWrap";
		menuItem -optionBox true
			-image "shrinkwrap.png"
			-annotation (uiRes("m_ChaDeformationsMenu.kCreateShrinkWrapOptionAnnot")) 
			-version 2015
			-command "CreateShrinkWrapOptions"
			createShrinkWrapOptionsItem;


		menuItem -label (uiRes("m_ChaDeformationsMenu.kWireTool"))
			-image "wire.png"
			-annotation (uiRes("m_ChaDeformationsMenu.kWireToolAnnot")) 
			-command "WireTool" wireCtxItem;
		menuItem -optionBox true -image "wire.png"
			-annotation (uiRes("m_ChaDeformationsMenu.kWireToolOptionAnnot")) 
			-command "WireToolOptions" 
			wireCtxDialogItem;
		
		menuItem -label (uiRes("m_ChaDeformationsMenu.kWrinkleTool"))
			-image "wrinkle.png"
			-annotation (uiRes("m_ChaDeformationsMenu.kWrinkleToolAnnot"))
			-command "WrinkleTool" 
			wrinkleCtxItem;
		menuItem -optionBox true  -image "wrinkle.png"
			-annotation (uiRes("m_ChaDeformationsMenu.kWrinkleToolOptionAnnot"))
			-command "WrinkleToolOptions"
			wrinkleCtxDialogItem;

		// Note: Muscle menu will be inserted here when the Muscle plugin loads. See cMuscle.mel for detail.
		//       That file defines a fixed anchor point based on the version of Maya. 
		//       Regular Maya uses wrinkleCtxDialogItem while BOLT uses createShrinkWrapOptionsItem.
		//
		// Please be careful if these menu items are changed, Muscle menu will be affected.
		// Deferring some menuItems in Edit menu for Fur plugin
		//
		makeMuscleMenu($parent);

		menuItem -divider true;

		menuItem -label (uiRes("m_ChaDeformationsMenu.kCreateNonlinear")) -aob true -subMenu true -tearOff true nonlinItem;

			menuItem -label (uiRes("m_ChaDeformationsMenu.kBend")) 
				-image "bendNLD.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kBendAnnot")) 
				-command "Bend";
			menuItem -optionBox true
				-image "bendNLD.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kBendOptionAnnot")) 
				-command "BendOptions";

			menuItem -label (uiRes("m_ChaDeformationsMenu.kFlare")) 
				-image "flareNLD.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kFlareAnnot")) 
				-command "Flare";
			menuItem -optionBox true
				-image "flareNLD.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kFlareOptionAnnot")) 
				-command "FlareOptions";

			menuItem -label (uiRes("m_ChaDeformationsMenu.kSine")) 
				-image "sineNLD.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kSineAnnot")) 
				-command "Sine";
			menuItem -optionBox true
				-image "sineNLD.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kSineOptionAnnot")) 
				-command "SineOptions";

			menuItem -label (uiRes("m_ChaDeformationsMenu.kSquash")) 
				-image "squashNLD.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kSquashAnnot")) 
				-command "Squash";
			menuItem -optionBox true
				-image "squashNLD.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kSquashOptionAnnot")) 
				-command "SquashOptions";

			menuItem -label (uiRes("m_ChaDeformationsMenu.kTwist")) 
				-image "twistNLD.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kTwistAnnot")) 
				-command "Twist";
			menuItem -optionBox true
				-image "twistNLD.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kTwistOptionAnnot")) 
				-command "TwistOptions";

			menuItem -label (uiRes("m_ChaDeformationsMenu.kWave")) 
				-image "waveNLD.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kWaveAnnot")) 
				-command "Wave";
			menuItem -optionBox true
				-image "waveNLD.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kWaveOptionAnnot")) 
				-command "WaveOptions";

		setParent -menu ..;

		menuItem -ltVersion 2016 -label (uiRes("m_ChaDeformationsMenu.kSoftModification")) 
			-image "softMod.png"
			-annotation (uiRes("m_ChaDeformationsMenu.kSoftModificationAnnot")) 
			-command "SoftModTool" softModItem;
		menuItem -optionBox true
			-annotation (uiRes("m_ChaDeformationsMenu.kSoftModificationOptionAnnot")) 
			-image "softMod.png"
			-command "SoftModToolOptions"
			softModDialogItem;

		menuItem -label (uiRes("m_ChaDeformationsMenu.kCreateSculptDeformer")) 
			-image "sculpt.png"
			-annotation (uiRes("m_ChaDeformationsMenu.kCreateSculptDeformerAnnot")) 
			-command "CreateSculptDeformer" sculptItem;
		menuItem -optionBox true 
			-annotation (uiRes("m_ChaDeformationsMenu.kCreateSculptDeformerOptionAnnot")) 
			-image "sculpt.png"
			-command "CreateSculptDeformerOptions" 
			sculptDialogItem;

		menuItem -label (uiRes("m_ChaDeformationsMenu.kCreateTextureDeformer")) 
			// MAYA-24629 TODO: -image "textureDeformer.png"
			-annotation (uiRes("m_ChaDeformationsMenu.kCreateTextureDeformerAnnot")) 
			-version 2015
			-image "textureDeformer.png"
			-command "CreateTextureDeformer" textureDeformerItem;
		menuItem -optionBox true 
			-annotation (uiRes("m_ChaDeformationsMenu.kCreateTextureDeformerOptionAnnot")) 
			-version 2015
			-image "textureDeformer.png"
			-command "CreateTextureDeformerOptions" 
			textureDeformerDialogItem;

		menuItem -l (uiRes("m_ChaDeformationsMenu.kCreateJiggle")) -sm true -to 1  ;

			menuItem -label (uiRes("m_ChaDeformationsMenu.kCreateJiggleDeformer"))  
				-annotation (uiRes("m_ChaDeformationsMenu.kCreateJiggleDeformerAnnot")) 
				-image "jiggleDeformer.png"
				-command "CreateJiggleDeformer" jiggleItem;
			menuItem -optionBox true 
				-annotation (uiRes("m_ChaDeformationsMenu.kCreateJiggleDeformerOptionAnnot")) 
				-image "jiggleDeformer.png"
				-command "CreateJiggleOptions"
				jiggleDialogItem;

			menuItem -label (uiRes("m_ChaDeformationsMenu.kCreateJiggleDiskCache")) 
				-annotation (uiRes("m_ChaDeformationsMenu.kCreateJiggleDiskCacheAnnot")) 
				-image "jiggleCache.png"
				-command "CreateDiskCache";
			menuItem -optionBox true
				-annotation (uiRes("m_ChaDeformationsMenu.kCreateJiggleDiskCacheOptionAnnot")) 
				-image "jiggleCache.png"
				-command "CreateDiskCacheOptions";

			menuItem -label (uiRes("m_ChaDeformationsMenu.kJiggleDiskCacheAttributes")) 
				-annotation (uiRes("m_ChaDeformationsMenu.kJiggleDiskCacheAttributesAnnot")) 
				-image "jiggleCacheAttr.png"
				-command "GlobalDiskCacheControl";

			setParent -m ..;

		menuItem -label (uiRes("m_ChaDeformationsMenu.kPointOnCurve"))  
			-annotation (uiRes("m_ChaDeformationsMenu.kPointOnCurveAnnot")) 
			-command "PointOnCurve" 
			-dmc "performPointCurveConstraint 2" 
			-image "ptPosCrvConstraint.png" pointCurveConstraintItem;
		menuItem -optionBox true 
			-annotation (uiRes("m_ChaDeformationsMenu.kPointOnCurveOptionAnnot")) 
			-image "ptPosCrvConstraint.png"
			-command "PointOnCurveOptions" pointCurveConstraintDialogItem;
		if ($dimWhenNoSelect)
			dimWhen -f "SomethingSelected" ($parent+"|pointCurveConstraintItem");

	menuItem -divider true -dividerLabel  (uiRes("m_ChaDeformationsMenu.kDeformEdit"));

		// Artisan Paint Blendshape tool
		menuItem -label (uiRes("m_ChaDeformationsMenu.kEditBlendShape"))  -aob true -subMenu true -tearOff true;

			menuItem -label (uiRes("m_ChaDeformationsMenu.kAdd")) 
				-image "blendShapePlus.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kAddAnnot")) 
				-command "AddBlendShape";
			menuItem -optionBox true 
				-annotation (uiRes("m_ChaDeformationsMenu.kAddOptionAnnot")) 
				-image "blendShapePlus.png"
				-command "AddBlendShapeOptions";
				
			menuItem -label (uiRes("m_ChaDeformationsMenu.kRemove")) 
				-annotation (uiRes("m_ChaDeformationsMenu.kRemoveAnnot")) 
				-image "removeBlendShape.png"
				-command "RemoveBlendShape";
			menuItem -optionBox true
				-annotation (uiRes("m_ChaDeformationsMenu.kRemoveOptionAnnot")) 
				-image "removeBlendShape.png"
				-command "RemoveBlendShapeOptions";
				
			menuItem -label (uiRes("m_ChaDeformationsMenu.kSwap")) 
				-annotation (uiRes("m_ChaDeformationsMenu.kSwapAnnot")) 
				-image "swapBlendShape.png"
				-command "SwapBlendShape";
			menuItem -optionBox true
				-annotation (uiRes("m_ChaDeformationsMenu.kSwapOptionAnnot")) 
				-image "swapBlendShape.png"
				-command "SwapBlendShapeOptions";
				
			menuItem -label (uiRes("m_ChaDeformationsMenu.kBakeTopologyToTargets")) 
				-annotation (uiRes("m_ChaDeformationsMenu.kBakeTopologyToTargetsAnnot")) 
				-image "bakeBlendShape.png"
				-command "BakeTopologyToTargets" bakeTopologyToTargetsItem;
				
			menuItem -label (uiRes("m_ChaDeformationsMenu.kEditNormalizationGroups")) 
				-annotation (uiRes("m_ChaDeformationsMenu.kEditNormalizationGroupsAnnot")) 
				-command "editNormalizationGroups" editNormalizationGroupsItem;

		setParent -m ..;

		menuItem -subMenu true -label (uiRes("m_ChaDeformationsMenu.kEditLattice"))  -to true;
			menuItem -label (uiRes("m_ChaDeformationsMenu.kRemoveLatticeTweaks"))
				-annotation (uiRes("m_ChaDeformationsMenu.kRemoveLatticeTweaksAnnot"))
				-image "removeTweaks.png"
				-command "RemoveLatticeTweaks" resetLatticeTweaksItem;
			if ($dimWhenNoSelect)
				dimWhen -f "SomethingSelected" resetLatticeTweaksItem;
				
			menuItem -label (uiRes("m_ChaDeformationsMenu.kResetLattice"))
				-annotation (uiRes("m_ChaDeformationsMenu.kResetLatticeAnnot"))
				-image "resetLattice.png"
				-command "ResetLattice" resetLatticeItem;
			if ($dimWhenNoSelect)
				dimWhen -f "SomethingSelected" resetLatticeItem;

		setParent -menu ..;


		menuItem -label (uiRes("m_ChaDeformationsMenu.kEditWrap"))  -aob true -subMenu true -tearOff true;

			menuItem -label (uiRes("m_ChaDeformationsMenu.kAddInfluence")) 
				-annotation (uiRes("m_ChaDeformationsMenu.kAddInfluenceAnnot")) 
				-image "addWrapInfluence.png"
				-command "AddWrapInfluence";

			menuItem -label (uiRes("m_ChaDeformationsMenu.kRemoveInfluence")) 
				-annotation (uiRes("m_ChaDeformationsMenu.kRemoveInfluenceAnnot")) 
				-image "removeWrapInfluence.png"
				-command "RemoveWrapInfluence";

		setParent -m ..;

		menuItem -label (uiRes("m_ChaDeformationsMenu.kEditShrinkWrap"))  -aob true -subMenu true -tearOff true -version 2015;

			menuItem -label (uiRes("m_ChaDeformationsMenu.kAddSurfaces")) 
				-annotation (uiRes("m_ChaDeformationsMenu.kAddSurfacesAnnot")) 
				-image "addShrinkWrapSurfaces.png"
				-command "AddShrinkWrapSurfaces";

			menuItem -label (uiRes("m_ChaDeformationsMenu.kRemoveInnerObject")) 
				-annotation (uiRes("m_ChaDeformationsMenu.kRemoveInnerObjectAnnot")) 
				-image "removeShrinkWrapInnerObject.png"
				-command "RemoveShrinkWrapInnerObject";

			menuItem -label (uiRes("m_ChaDeformationsMenu.kRemoveSurfaces")) 
				-annotation (uiRes("m_ChaDeformationsMenu.kRemoveSurfacesAnnot")) 
				-image "removeShrinkWrapSurfaces.png"
				-command "RemoveShrinkWrapSurfaces";

			menuItem -label (uiRes("m_ChaDeformationsMenu.kRemoveTarget")) 
				-annotation (uiRes("m_ChaDeformationsMenu.kRemoveTargetAnnot")) 
				-image "removeShrinkWrapTarget.png"
				-command "RemoveShrinkWrapTarget";

			menuItem -label (uiRes("m_ChaDeformationsMenu.kSetInnerObject")) 
				-annotation (uiRes("m_ChaDeformationsMenu.kSetInnerObjectAnnot")) 
				-image "setShrinkWrapInnerObject.png"
				-command "SetShrinkWrapInnerObject";

			menuItem -label (uiRes("m_ChaDeformationsMenu.kSetTarget")) 
				-annotation (uiRes("m_ChaDeformationsMenu.kSetTargetAnnot")) 
				-image "setShrinkWrapTarget.png"
				-command "SetShrinkWrapTarget";

		setParent -m ..;

		menuItem -label (uiRes("m_ChaDeformationsMenu.kEditWire"))  -aob true -subMenu true -tearOff true;

			menuItem -label (uiRes("m_ChaDeformationsMenu.kAddWire")) 
				-annotation (uiRes("m_ChaDeformationsMenu.kAddWireAnnot")) 
				-image "addWire.png"
				-command "AddWire";
			menuItem -optionBox true
				-annotation (uiRes("m_ChaDeformationsMenu.kAddWireOptionAnnot")) 
				-image "addWire.png"
				-command "AddWireOptions";

			menuItem -label (uiRes("m_ChaDeformationsMenu.kAddHolder")) 
				-annotation (uiRes("m_ChaDeformationsMenu.kAddHolderAnnot")) 
				-image "addWireHolder.png"
				-command "AddHolder";
			menuItem -optionBox true
				-annotation (uiRes("m_ChaDeformationsMenu.kAddHolderOptionAnnot")) 
				-image "addWireHolder.png"
				-command "AddHolderOptions";
			
			menuItem -label (uiRes("m_ChaDeformationsMenu.kParentBaseWire")) 
				-annotation (uiRes("m_ChaDeformationsMenu.kParentBaseWireAnnot")) 
				-image "parentBaseWire.png"
				-command "ParentBaseWire";
			menuItem -optionBox true
				-annotation (uiRes("m_ChaDeformationsMenu.kParentBaseWireOptionAnnot")) 
				-image "parentBaseWire.png"
				-command "ParentBaseWireOptions";

			menuItem -label (uiRes("m_ChaDeformationsMenu.kRemoveWire")) 
				-annotation (uiRes("m_ChaDeformationsMenu.kRemoveWireAnnot")) 
				-image "removeWire.png"
				-command "RemoveWire";
			menuItem -optionBox true
				-annotation (uiRes("m_ChaDeformationsMenu.kRemoveWireOptionAnnot")) 
				-image "removeWire.png"
				-command "RemoveWireOptions";

			menuItem -label (uiRes("m_ChaDeformationsMenu.kResetWire")) 
				-annotation (uiRes("m_ChaDeformationsMenu.kResetWireAnnot")) 
				-image "resetWire.png"
				-command "ResetWire";
			menuItem -optionBox true
				-annotation (uiRes("m_ChaDeformationsMenu.kResetWireOptionAnnot")) 
				-image "resetWire.png"
				-command "ResetWireOptions";

			menuItem -label (uiRes("m_ChaDeformationsMenu.kShowBaseWire")) 
				-annotation (uiRes("m_ChaDeformationsMenu.kShowBaseWireAnnot")) 
				-image "showBaseWire.png"
				-command "ShowBaseWire";

			menuItem -label (uiRes("m_ChaDeformationsMenu.kWireDropoffLocator")) 
				-image "wireDropoff.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kWireDropoffLocatorAnnot")) 
				-command "WireDropoffLocator"
				wireDropoffItem;
			menuItem -optionBox true -image "wireDropoff.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kWireDropoffLocatorOptionAnnot")) 
				-command "WireDropoffLocatorOptions"
				wireDropoffDialogItem;

		setParent -m ..;

		menuItem -divider true -ld false;

		menuItem -label (uiRes("m_ChaDeformationsMenu.kEditMembershipTool"))
			-command "EditMembershipTool"
			-image "setEdit.png"
			-annotation (uiRes("m_ChaDeformationsMenu.kEditMembershipToolAnnot"))
			setEditItem;
		menuItem -divider true -ld false;

		menuItem -ltVersion 2016 -label (uiRes("m_ChaDeformationsMenu.kPruneMembership"))  -sm true -to true pruneItem;
			menuItem -label (uiRes("m_ChaDeformationsMenu.kCluster"))  
				-ltVersion 2016
				-command "PruneCluster"
				-image "pruneCluster.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kClusterAnnot")) 
				pruneClusterItem;

			menuItem -ltVersion 2016 -label (uiRes("m_ChaDeformationsMenu.kLattice")) 
				-command "PruneLattice"
				-image "pruneLattice.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kLatticeAnnot")) 
				pruneLatticeItem;

			menuItem -label (uiRes("m_ChaDeformationsMenu.kSculpt")) 
				-command "PruneSculpt"
				-image "pruneSculpt.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kSculptAnnot")) 
				pruneSculptItem;
				
			menuItem -label (uiRes("m_ChaDeformationsMenu.kWire"))  
				-command "PruneWire"
				-image "pruneWire.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kWireAnnot")) 
				pruneWireItem;

			setParent -menu ..;

		// Mirror Deformer Weights command and option.
		menuItem -label (uiRes("m_ChaDeformationsMenu.kMirrorDeformerWeights")) 
			-annotation (uiRes("m_ChaDeformationsMenu.kMirrorDeformerWeightsAnnot"))
			-i "mirrorSkinWeight.png"
			-c "MirrorDeformerWeights" mirrorDeformerWeightsItem;
		menuItem -optionBox true
			-annotation (uiRes("m_ChaDeformationsMenu.kMirrorDeformerWeightsOptAnnot")) 
			-i "mirrorSkinWeight.png"
			-c "MirrorDeformerWeightsOptions" mirrorDeformerWeightsDialog;

		menuItem -divider true  -ld false;

		menuItem -label (uiRes("m_ChaDeformationsMenu.kDisplayIntermediateObjects")) 
			-annotation (uiRes("m_ChaDeformationsMenu.kDisplayIntermediateObjectsAnnot")) 
			-image "displayIntermObj.png"
			-command "DisplayIntermediateObjects" displayInterItem;
		if ($dimWhenNoSelect)
			dimWhen -f "SomethingSelected" displayInterItem;

		menuItem -label (uiRes("m_ChaDeformationsMenu.kHideIntermediateObjects")) 
			-annotation (uiRes("m_ChaDeformationsMenu.kHideIntermediateObjectsAnnot")) 
			-image "hideIntermObj.png"
			-command "HideIntermediateObjects" hideInterItem;
		if ($dimWhenNoSelect)
			dimWhen -f "SomethingSelected" hideInterItem;

		menuItem -divider true -dividerLabel  (uiRes("m_ChaDeformationsMenu.kDeformPaintWeights"));
			menuItem -label (uiRes("m_ChaDeformationsMenu.kPaintBlendShapeWeightsTool"))
				-image "paintBlendshape.png" 
				-annotation (uiRes("m_ChaDeformationsMenu.kPaintBlendShapeWeightsToolAnnot")) 
				-command "ArtPaintBlendShapeWeightsTool" blendShapeWeightPaintItem;
			menuItem -optionBox true 
				-image "paintBlendshape.png" 
				-annotation (uiRes("m_ChaDeformationsMenu.kPaintBlendShapeWeightsToolOptionAnnot")) 
				-command "ArtPaintBlendShapeWeightsToolOptions" 
				blendShapeWeightPaintDialogItem;

			// Artisan Paint Cluster tool.
			menuItem -label (uiRes("m_ChaDeformationsMenu.kPaintClusterWeightsTool"))  
				-image "paintCluster.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kPaintClusterWeightsToolAnnot")) 
				-ltVersion 2016
				-command "artAttrToolScript 4 \"cluster\"" wtPaintItem;
			menuItem -optionBox true 
				-image "paintCluster.png"
				-ltVersion 2016
				-annotation (uiRes("m_ChaDeformationsMenu.kPaintClusterWeightsToolOptionAnnot")) 
				-command "artAttrToolScript 3 \"cluster\"" wtPaintDialogItem;

			// Artisan DeltaMush tool.
			menuItem -label (uiRes("m_ChaDeformationsMenu.kPaintDeltaMushWeightsTool"))
				-annotation (uiRes("m_ChaDeformationsMenu.kPaintDeltaMushWeightsToolAnnot"))
				-version 2016
				-command "artAttrToolScript 4 \"deltaMush\"" deltaMushPaintItem;
			menuItem -optionBox true 
				-annotation (uiRes("m_ChaDeformationsMenu.kPaintDeltaMushWeightsToolOptionAnnot")) 
				-version 2016
				-command "artAttrToolScript 3 \"deltaMush\"" deltaMushPaintDialogItem;

			// Artisan Paint ShrinkWrap tool.
			menuItem -ltVersion 2016 -label (uiRes("m_ChaDeformationsMenu.kPaintShrinkWrapWeightsTool"))  
				-image "paintShrinkWrap.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kPaintShrinkWrapWeightsToolAnnot")) 
				-command "artAttrToolScript 4 \"shrinkWrap\"" shrinkWrapPaintItem;
			menuItem -optionBox true 
				-image "paintShrinkWrap.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kPaintShrinkWrapWeightsToolOptionAnnot")) 
				-command "artAttrToolScript 3 \"shrinkWrap\"" shrinkWrapPaintDialogItem;

			// Artisan Paint Wire tool
			menuItem -label (uiRes("m_ChaDeformationsMenu.kPaintWireWeightsTool"))  
				-image "paintWire.png" 
				-annotation (uiRes("m_ChaDeformationsMenu.kPaintWireWeightsToolAnnot")) 
				-command "artAttrToolScript 4 \"wire\"" wirePaintItem;
			menuItem -optionBox true 
				-image "paintWire.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kPaintWireWeightsToolOptionAnnot")) 
				-command "artAttrToolScript 3 \"wire\"" wirePaintDialogItem;

			menuItem -d true -ld false;

			// Artisan Paint Nonlinear tool.
			menuItem -label (uiRes("m_ChaDeformationsMenu.kPaintNonlinearWeightsTool"))
				-annotation (uiRes("m_ChaDeformationsMenu.kPaintNonlinearWeightsToolAnnot")) 
				-command "artAttrToolScript 4 \"nonLinear\"" nonlinearPaintItem;
			menuItem -optionBox true 
				-annotation (uiRes("m_ChaDeformationsMenu.kPaintNonlinearWeightsToolOptionAnnot")) 
				-command "artAttrToolScript 3 \"nonLinear\"" nonlinearPaintDialogItem;

			// Artisan Paint Jiggle tool.
			menuItem -label (uiRes("m_ChaDeformationsMenu.kPaintJiggleWeightsTool"))
				-image "paintJiggle.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kPaintJiggleWeightsToolAnnot")) 
				-command "artAttrToolScript 4 \"jiggle\"" jigglePaintItem;
			menuItem -optionBox true 
				-image "paintJiggle.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kPaintJiggleWeightsToolOptionAnnot")) 
				-command "artAttrToolScript 3 \"jiggle\"" jigglePaintDialogItem;
			// Artisan Paint Texture Deformer tool.
			menuItem -label (uiRes("m_ChaDeformationsMenu.kPaintTextureDeformerWeightsTool"))
				-image "paintTextureDeformer.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kPaintTextureDeformerWeightsToolAnnot")) 
				-version 2015
				-command "artAttrToolScript 4 \"textureDeformer\"" textureDeformerWeightPaintItem;
			menuItem -optionBox true 
				-image "paintTextureDeformer.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kPaintTextureDeformerWeightsToolOptionAnnot")) 
				-version 2015
				-command "artAttrToolScript 3 \"textureDeformer\"" textureDeformerWeightPaintDialogItem;

			menuItem -d true -ld false;

			// Paint Set Membership tool.
			menuItem -label (uiRes("m_ChaDeformationsMenu.kPaintSetMembershipTool"))  
				-image "paintSetMembership.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kPaintSetMembershipToolAnnot")) 
				-command "PaintSetMembershipTool" setMemPaintItem;
			menuItem -optionBox true 
				-image "paintSetMembership.png"
				-annotation (uiRes("m_ChaDeformationsMenu.kPaintSetMembershipToolOptionAnnot")) 
				-command "PaintSetMembershipToolOptions" 
				setMembPaintDialogItem;

			setParent -menu ..;

	menuItem -divider true -dividerLabel  (uiRes("m_ChaDeformationsMenu.kDeformWeightMaps"));
		menuItem -label (uiRes("m_ChaDeformationsMenu.kExportDeformWeight"))
			-image "paintSetMembership.png"  // TO DO  need icons
			-annotation (uiRes("m_ChaDeformationsMenu.kExportDeformWeightAnnot")) 
			-command "ExportDeformerWeightsOptions" 
			exportDefWeightItem;

		menuItem -label (uiRes("m_ChaDeformationsMenu.kImportDeformWeight"))
				-image "paintSetMembership.png"  // TO DO need icons
				-annotation (uiRes("m_ChaDeformationsMenu.kImportDeformWeightAnnot")) 
				-command "ImportDeformerWeightsOptions" 
				importDefWeightItem;


	setParent -m ..;
}
