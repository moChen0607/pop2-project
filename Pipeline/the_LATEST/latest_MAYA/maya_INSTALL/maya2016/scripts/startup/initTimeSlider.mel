// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  Aug 15 1996
//
//  Description:
//      This script initializes the Time slider.  Initialization involves
//		determining the initial Time slider preferences, creating the UI
//		and setting the initial visibility.
//
{
	// Declare referenced or returned globals.
	//
	global string $gPlayBackSlider;

	//  Create the time slider.
	//
	if( `exists timeSlider` ) { 
		eval "source timeSlider";
	}

	//////////////////////////////////////////////////////////
	// 
	// ANIMATION CONTROLS
	// 
	//////////////////////////////////////////////////////////

	// Height
	//
	timeControl -e -h `optionVar -q timeSliderHeight` $gPlayBackSlider;
	
	// Key Ticks
	//
	int $showKeysCombined = 0;
	string $showKeysVal = `optionVar -q timeSliderShowKeys`;
	if ($showKeysVal != "active" && $showKeysVal != "none") {
		// If optionVar contains name of the channel box, make sure
		// it is using the proper name for the channelbox.
		//
		$showKeysVal = "mainChannelBox";
		optionVar -sv timeSliderShowKeys "mainChannelBox";
		$showKeysCombined = `optionVar -q timeSliderShowKeysCombined`;
	}
    string $showFramesVal = `optionVar -q timeSliderShowFrames`;
	timeControl -e -showKeys $showKeysVal -showGreaseFrames $showFramesVal $gPlayBackSlider;
	timeControl -e -showKeysCombined $showKeysCombined $gPlayBackSlider;

	// Options: Tick size
	//
	timeControl -e -tickSize `optionVar -q timeSliderTickSize` $gPlayBackSlider;

	// Options: Timecode
	//
	animDisplay -tc `optionVar -q timeSliderTimeCode`;

	// Options: Snapping
	//
	timeControl -e -snap `optionVar -q timeSliderSnapping` $gPlayBackSlider;

	// Options: Tick span
	//
	timeControl -e -tickSpan `optionVar -q timeSliderTickSpan` $gPlayBackSlider;
	
	//////////////////////////////////////////////////////////
	// 
	// PLAYBACK
	// 
	//////////////////////////////////////////////////////////
 
	// Update View
	//
	playbackOptions -v `optionVar -q timeSliderPlayView`;

	// Looping
	//
	playbackOptions	-l `optionVar -q timeSliderPlayLoop`;

	// Playback Speed
	//
	playbackOptions	-playbackSpeed `optionVar -query timeSliderPlaySpeed`;

	// Max Playback Speed
	//
	playbackOptions	-maxPlaybackSpeed `optionVar -query timeSliderMaxPlaySpeed`;

	// Playback By
	//
	playbackOptions	-by `optionVar -q timeSliderPlayBy`;

	//////////////////////////////////////////////////////////
	// 
	// KEYS
	// 
	//////////////////////////////////////////////////////////

	// Auto Key
	//
	autoKeyframe -state `optionVar -q autoKeyframeState`;

	// Weighted Tangents
	//
	keyTangent -g -weightedTangents `optionVar -q weightedTangents`;

	// Default in tangent
	//
	keyTangent -g -inTangentType `optionVar -q inTangentType`;
	
	// Default out tangent
	//
	keyTangent -g -outTangentType `optionVar -q outTangentType`;
	
	//////////////////////////////////////////////////////////
	// 
	// SOUND
	// 
	//////////////////////////////////////////////////////////

	// Waveform Display
	//
	timeControl -e -waveform `optionVar -q timeSliderSoundDisplay` 
		$gPlayBackSlider;

	// Repeat on Hold
	//
	timeControl -e -roh `optionVar -q timeSliderRepeatOnHold` 
		$gPlayBackSlider;

	// Repeat Size
	//
	timeControl -e -rcs `optionVar -q timeSliderRepeatChunk` 
		$gPlayBackSlider;

	//////////////////////////////////////////////////////////
	// 
	// MISCELLANEOUS
	// 
	//////////////////////////////////////////////////////////

	// Bind the time slider's selection connection to the animation list
	//
	timeControl -e -mainListConnection animationList $gPlayBackSlider;

	// Create the time dragger 3D slider 	
	//
	timeDragger;

	//	Set the Time slider's initial visibility.
	//
	setTimeSliderVisible( `optionVar -query timeSliderVisible` );
}
