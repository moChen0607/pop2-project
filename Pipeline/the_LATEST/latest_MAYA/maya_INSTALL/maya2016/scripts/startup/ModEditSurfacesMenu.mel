// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
// Creation Date:  13 April 1997
//
//
//  Procedure Name:
//      ModEditSurfacesMenu
//
//  Description:
//		Create the MODELLING->EditSurfaces menu
//
//  Input Arguments:
//      parent to parent the menu to.
//
//  Return Value:
//      None.
//

proc modEditSurfacesMenuLabel( int $isAdvModel )
{
	if( `optionVar -q modelWithToolDuplicateSurface` ) {
		menuItem -e
		  -label (uiRes("m_ModEditSurfacesMenu.kDuplicateNurbsPatchesTool")) 
		  -annotation (uiRes("m_ModEditSurfacesMenu.kDuplicateNurbsPatchesToolAnnot")) 
		  duplSrfItem;
		menuItem -e
		  -annotation (uiRes("m_ModEditSurfacesMenu.kDuplicateNurbsPatchesToolOptionsAnnot"))
		  duplSrfDialog;
	}
	else {
		menuItem -e
		  -label (uiRes("m_ModEditSurfacesMenu.kDuplicateNurbsPatches")) 
		  -annotation (uiRes("m_ModEditSurfacesMenu.kDuplicateNurbsPatchesAnnot"))
		  duplSrfItem;
		menuItem -e
		  -annotation (uiRes("m_ModEditSurfacesMenu.kDuplicateNurbsPatchesOptionsAnnot"))
		  duplSrfDialog;
	}

	if( `optionVar -q modelWithToolAttachSurface` ) {
		menuItem -e
		  -label (uiRes("m_ModEditSurfacesMenu.kAttachSurfacesTool")) 
		  -annotation (uiRes("m_ModEditSurfacesMenu.kAttachSurfacesToolAnnot"))
		  attachSrfItem;
		menuItem -e
		  -annotation (uiRes("m_ModEditSurfacesMenu.kAttachSurfacesToolOptionsAnnot"))
		  attachSrfDialog;
	}
	else {
		menuItem -e
		  -label (uiRes("m_ModEditSurfacesMenu.kAttachSurfaces")) 
		  -annotation (uiRes("m_ModEditSurfacesMenu.kAttachSurfacesAnnot"))
		  attachSrfItem;
		menuItem -e
		  -annotation (uiRes("m_ModEditSurfacesMenu.kAttachSurfacesOptionsAnnot"))
		  attachSrfDialog;
	}

	if( `optionVar -q modelWithToolDetachSurface` ) {
		menuItem -e
		  -label (uiRes("m_ModEditSurfacesMenu.kDetachSurfacesTool")) 
		  -annotation (uiRes("m_ModEditSurfacesMenu.kDetachSurfacesToolAnnot"))
		  detachItem;
		menuItem -e
		  -annotation (uiRes("m_ModEditSurfacesMenu.kDetachSurfacesToolOptionsAnnot"))
		  detachDialog;
	}
	else {
		menuItem -e
		  -label (uiRes("m_ModEditSurfacesMenu.kDetachSurfaces")) 
		  -annotation (uiRes("m_ModEditSurfacesMenu.kDetachSurfacesAnnot"))
		  detachItem;
		menuItem -e
		  -annotation (uiRes("m_ModEditSurfacesMenu.kDetachSurfacesOptionsAnnot"))
		  detachDialog;
	}

	if( `optionVar -q modelWithToolAlignSurface` ) {
		menuItem -e
		  -label (uiRes("m_ModEditSurfacesMenu.kAlignSurfacesTool")) 
		  -annotation (uiRes("m_ModEditSurfacesMenu.kAlignSurfacesToolAnnot"))
		  alignItem;
		menuItem -e
		  -annotation (uiRes("m_ModEditSurfacesMenu.kAlignSurfacesToolOptionsAnnot"))
		  alignDialogItem;
	}
	else {
		menuItem -e
		  -label (uiRes("m_ModEditSurfacesMenu.kAlignSurfaces")) 
		  -annotation (uiRes("m_ModEditSurfacesMenu.kAlignSurfacesAnnot"))
		  alignItem;
		menuItem -e
		  -annotation (uiRes("m_ModEditSurfacesMenu.kAlignSurfacesOptionsAnnot"))
		  alignDialogItem;
	}

	if( `optionVar -q modelWithToolInsertSurface` ) {
		menuItem -e
		  -label (uiRes("m_ModEditSurfacesMenu.kInsertIsoparmsTool")) 
		  -annotation (uiRes("m_ModEditSurfacesMenu.kInsertIsoparmsToolAnnot"))
		  insertItem;
		menuItem -e
		  -annotation (uiRes("m_ModEditSurfacesMenu.kInsertIsoparmsToolOptionsAnnot"))
		  insertDialog;
	}
	else {
		menuItem -e
		  -label (uiRes("m_ModEditSurfacesMenu.kInsertIsoparms")) 
		  -annotation (uiRes("m_ModEditSurfacesMenu.kInsertIsoparmsAnnot"))
		  insertItem;
		menuItem -e
		  -annotation (uiRes("m_ModEditSurfacesMenu.kInsertIsoparmsOptionsAnnot"))
		  insertDialog;
	}

	if( $isAdvModel ) {
		if( `optionVar -q modelWithToolOffsetSurface` ) {
			menuItem -e
				-label (uiRes("m_ModEditSurfacesMenu.kOffsetSurfacesTool")) 
				-annotation (uiRes("m_ModEditSurfacesMenu.kOffsetSurfacesToolAnnot")) 
				surfOffsetItem;
			menuItem -e
				-annotation (uiRes("m_ModEditSurfacesMenu.kOffsetSurfacesToolOptionsAnnot")) 
				offsetSurfaceDialogItem;
		}
		else {
			menuItem -e
				-label (uiRes("m_ModEditSurfacesMenu.kOffsetSurfaces")) 
				-annotation (uiRes("m_ModEditSurfacesMenu.kOffsetSurfacesAnnot")) 
				surfOffsetItem;
			menuItem -e
				-annotation (uiRes("m_ModEditSurfacesMenu.kOffsetSurfacesOptionsAnnot")) 
				offsetSurfaceDialogItem;
		}

		if( `optionVar -q modelWithToolExtendSurface` ) {
			menuItem -e
				-label (uiRes("m_ModEditSurfacesMenu.kExtendSurfacesTool")) 
				-annotation (uiRes("m_ModEditSurfacesMenu.kExtendSurfacesToolAnnot")) 
				extendSrfItem;
			menuItem -e
				-annotation (uiRes("m_ModEditSurfacesMenu.kExtendSurfacesToolOptionsAnnot")) 
				extendSurfaceDialogItem;
		}
		else {
			menuItem -e
				-label (uiRes("m_ModEditSurfacesMenu.kExtendSurfaces")) 
				-annotation (uiRes("m_ModEditSurfacesMenu.kExtendSurfacesAnnot")) 
				extendSrfItem;
			menuItem -e
				-annotation (uiRes("m_ModEditSurfacesMenu.kExtendSurfacesOptionsAnnot")) 
				extendSurfaceDialogItem;
		}
	}

	if( `optionVar -q modelWithToolGlobalStitch` ) {
		menuItem -e
			-label (uiRes("m_ModEditSurfacesMenu.kGlobalStitchTool")) 
			-annotation (uiRes("m_ModEditSurfacesMenu.kGlobalStitchToolAnnot")) 
			globalStitchItem;
		menuItem -e
			-annotation (uiRes("m_ModEditSurfacesMenu.kGlobalStitchToolOptionsAnnot")) 
			globalStitchDialogItem;
	}
	else {
		menuItem -e
			-label (uiRes("m_ModEditSurfacesMenu.kGlobalStitch")) 
			-annotation (uiRes("m_ModEditSurfacesMenu.kGlobalStitchAnnot")) 
			globalStitchItem;
		menuItem -e
			-annotation (uiRes("m_ModEditSurfacesMenu.kGlobalStitchOptionsAnnot")) 
			globalStitchDialogItem;
	}

	if( `optionVar -q modelWithToolCircFillet` ) {
        menuItem -e
			-label (uiRes("m_ModEditSurfacesMenu.kCircularFilletTool")) 
            -annotation (uiRes("m_ModEditSurfacesMenu.kCircularFilletToolAnnot")) 
			circularFilletItem;
        menuItem -e
            -annotation (uiRes("m_ModEditSurfacesMenu.kCircularFilletToolOptionsAnnot")) 
            circularFilletDialogItem;
	}
	else {
        menuItem -e
			-label (uiRes("m_ModEditSurfacesMenu.kCircularFillet")) 
            -annotation (uiRes("m_ModEditSurfacesMenu.kCircularFilletAnnot")) 
			circularFilletItem;
        menuItem -e
            -annotation (uiRes("m_ModEditSurfacesMenu.kCircularFilletOptionsAnnot")) 
            circularFilletDialogItem;
	}

	if( `optionVar -q modelWithToolFreeFillet` ) {
        menuItem -e
			-label (uiRes("m_ModEditSurfacesMenu.kFreeformFilletTool")) 
            -annotation (uiRes("m_ModEditSurfacesMenu.kFreeformFilletToolAnnot"))
			freeFormFilletItem ;
        menuItem -e
            -annotation (uiRes("m_ModEditSurfacesMenu.kFreeformFilletToolOptionsAnnot")) 
            freeFormFilletDialogItem;
	}
	else {
        menuItem -e
			-label (uiRes("m_ModEditSurfacesMenu.kFreeformFillet")) 
            -annotation (uiRes("m_ModEditSurfacesMenu.kFreeformFilletAnnot"))
			freeFormFilletItem ;
        menuItem -e
            -annotation (uiRes("m_ModEditSurfacesMenu.kFreeformFilletOptionsAnnot")) 
            freeFormFilletDialogItem;
	}

	if( `optionVar -q modelWithToolProject` ) {
		menuItem -e
			-label (uiRes("m_ModEditSurfacesMenu.kProjectCurveOnSurfaceTool")) 
			-annotation (uiRes("m_ModEditSurfacesMenu.kProjectCurveOnSurfaceToolAnnot"))
			projectCurveItem;
        menuItem -e
            -annotation (uiRes("m_ModEditSurfacesMenu.kProjectCurveOnSurfaceToolOptionsAnnot")) 
            projectCurveDialogItem;
	}
	else {
		menuItem -e
			-label (uiRes("m_ModEditSurfacesMenu.kProjectCurveOnSurface")) 
			-annotation (uiRes("m_ModEditSurfacesMenu.kProjectCurveOnSurfaceAnnot"))
			projectCurveItem;
        menuItem -e
            -annotation (uiRes("m_ModEditSurfacesMenu.kProjectCurveOnSurfaceOptionsAnnot")) 
            projectCurveDialogItem;
	}

	if( `optionVar -q modelWithToolIntersect` ) {
		menuItem -e
			-label (uiRes("m_ModEditSurfacesMenu.kIntersectSurfacesTool")) 
			-annotation (uiRes("m_ModEditSurfacesMenu.kIntersectSurfacesToolAnnot"))
			intersectItem;
        menuItem -e
			-annotation (uiRes("m_ModEditSurfacesMenu.kIntersectSurfacesToolOptionsAnnot")) 
			intersectDialogItem;
	}
	else {
		menuItem -e
			-label (uiRes("m_ModEditSurfacesMenu.kIntersectSurfaces")) 
			-annotation (uiRes("m_ModEditSurfacesMenu.kIntersectSurfacesAnnot"))
			intersectItem;
        menuItem -e
			-annotation (uiRes("m_ModEditSurfacesMenu.kIntersectSurfacesOptionsAnnot")) 
			intersectDialogItem;
	}

	if( `optionVar -q modelWithToolCloseSurface` ) {
		menuItem -e
			-label (uiRes("m_ModEditSurfacesMenu.kOpenCloseSurfacesTool")) 
			-annotation (uiRes("m_ModEditSurfacesMenu.kOpenCloseSurfacesToolAnnot"))
			closeItem;
		menuItem -e
			-annotation (uiRes("m_ModEditSurfacesMenu.kOpenCloseSurfacesToolOptionsAnnot")) 
			closeDialogItem;
	}
	else {
		menuItem -e
			-label (uiRes("m_ModEditSurfacesMenu.kOpenCloseSurfaces")) 
			-annotation (uiRes("m_ModEditSurfacesMenu.kOpenCloseSurfacesAnnot"))
			closeItem;
		menuItem -e
			-annotation (uiRes("m_ModEditSurfacesMenu.kOpenCloseSurfacesOptionsAnnot")) 
			closeDialogItem;
	}

	if( `optionVar -q modelWithToolReverseSurface` ) {
		menuItem -e
			-label (uiRes("m_ModEditSurfacesMenu.kReverseSurfaceDirectionTool")) 
			-annotation (uiRes("m_ModEditSurfacesMenu.kReverseSurfaceDirectionToolAnnot"))
			reverseItem;
        menuItem -e
            -annotation (uiRes("m_ModEditSurfacesMenu.kReverseSurfacesToolOptionsAnnot")) 
            reverseDialogItem;
	}
	else {
		menuItem -e
			-label (uiRes("m_ModEditSurfacesMenu.kReverseSurfaceDirection")) 
			-annotation (uiRes("m_ModEditSurfacesMenu.kReverseSurfaceDirectionAnnot"))
			reverseItem;
        menuItem -e
            -annotation (uiRes("m_ModEditSurfacesMenu.kReverseSurfacesOptionsAnnot")) 
            reverseDialogItem;
	}

	if( `optionVar -q modelWithToolRebuildSurface` ) {
		menuItem -e
			-label (uiRes("m_ModEditSurfacesMenu.kRebuildSurfacesTool")) 
			-annotation (uiRes("m_ModEditSurfacesMenu.kRebuildSurfacesToolAnnot")) 
        	rebuildSrfItem;
		menuItem -e
			-annotation (uiRes("m_ModEditSurfacesMenu.kRebuildSurfacesToolOptionsAnnot")) 
			rebuildSurfaceDialogItem;
	}
	else {
		menuItem -e
			-label (uiRes("m_ModEditSurfacesMenu.kRebuildSurfaces")) 
			-annotation (uiRes("m_ModEditSurfacesMenu.kRebuildSurfacesAnnot")) 
        	rebuildSrfItem;
		menuItem -e
			-annotation (uiRes("m_ModEditSurfacesMenu.kRebuildSurfacesOptionsAnnot")) 
			rebuildSurfaceDialogItem;
	}

	if( `optionVar -q modelWithToolUntrim` ) {
		menuItem -e
			-label (uiRes("m_ModEditSurfacesMenu.kUntrimSurfacesTool")) 
			-annotation (uiRes("m_ModEditSurfacesMenu.kUntrimSurfacesToolAnnot")) 
			untrimItem;
		menuItem -e
			-annotation (uiRes("m_ModEditSurfacesMenu.kUntrimSurfacesToolOptionsAnnot")) 
			untrimDialogItem;
	}
	else {
		menuItem -e
			-label (uiRes("m_ModEditSurfacesMenu.kUntrimSurfaces")) 
			-annotation (uiRes("m_ModEditSurfacesMenu.kUntrimSurfacesAnnot")) 
			untrimItem;
		menuItem -e
			-annotation (uiRes("m_ModEditSurfacesMenu.kUntrimSurfacesOptionsAnnot")) 
			untrimDialogItem;
	}
}

global proc ModEditSurfacesMenu( string $parent )
{
	if( ! `isTrue "SurfaceUIExists"` ) return;

	// If this ever changes to true, we have to make sure
	// we don't dim the tools.  So, don't just change the
	// value.  Milan S.
	int $dimWhenNoSelect = 0;

	setParent -m $parent;
	int $isAdvModel = `licenseCheck -mode "edit" -type "model"`;
	if( `menu -q -ni $parent` != 0 ) {
		//
		//	Menu is built already - just relabel and return
		//
		modEditSurfacesMenuLabel( $isAdvModel );
		return;
	}

	menuItem
	  -c "DuplicateNURBSPatches"
	  -dmc "duplicateSurfaceToolScript 2"
	  -i "duplicateSurface.png"
	  duplSrfItem;
	menuItem -optionBox true -i "duplicateSurface.png"
		-c "DuplicateNURBSPatchesOptions"
	  duplSrfDialog;
	if( $dimWhenNoSelect )
		dimWhen -f "SomethingSelected" ($parent+"|attachSrfItem");

	menuItem -d true;

	// project + interesect + trim + untrim.
	//
	menuItem
        -c "ProjectCurveOnSurface"
        -dmc "projectToolScript 2"
        -i "projectCurve.png"
		projectCurveItem;
	menuItem -optionBox true
		-i "projectCurve.png"
		-c "ProjectCurveOnSurfaceOptions"
		projectCurveDialogItem;
    if( $dimWhenNoSelect )
        dimWhen -f "SomethingSelected" ($parent+"|projectCurveItem") ;

	menuItem
        -c "IntersectSurfaces"
		-dmc "intersectToolScript 2"
		-i "srfIntersect.png"
		intersectItem;
	menuItem -optionBox true 
		-i "srfIntersect.png"
		-c "IntersectSurfacesOptions"
		intersectDialogItem;
	if( $dimWhenNoSelect )
        dimWhen -f "SomethingSelected" ($parent+"|intersectItem") ;

	menuItem -label (uiRes("m_ModEditSurfacesMenu.kTrimTool"))  
		-annotation (uiRes("m_ModEditSurfacesMenu.kTrimToolAnnot")) 
		-image "trim.png"
		-c "TrimTool" trimSurfaceItem;
		menuItem -optionBox true -image "trim.png"
			-annotation (uiRes("m_ModEditSurfacesMenu.kTrimToolOptionsAnnot")) 
			-c "TrimToolOptions" trimDialogItem;

	menuItem
		-c "UntrimSurfaces"
		-dmc "untrimToolScript 2"
		-image "untrim.png"
		untrimItem;
	menuItem -optionBox true -image "untrim.png"
		-c "UntrimSurfacesOptions"
		untrimDialogItem;
	if( $dimWhenNoSelect )
		dimWhen -f "SomethingSelected" ($parent+"|untrimItem");

	menuItem -d true;

	// booleans.
	//
	if( $isAdvModel ) {
	  menuItem -label (uiRes("m_ModEditSurfacesMenu.kBooleans"))  -sm 1 -to 1 -aob true;	
		menuItem -label (uiRes("m_ModEditSurfacesMenu.kUnionTool")) 
		  -c "SurfaceBooleanUnionTool"
		  -dmc "nurbsBooleanToolScript 2 0"
		  -annotation (uiRes("m_ModEditSurfacesMenu.kUnionToolAnnot")) 
		  -image "nurbsShellUnion.png"
		  booleanUnionItem;
		menuItem -optionBox true -image "nurbsShellUnion.png"
		  -annotation (uiRes("m_ModEditSurfacesMenu.kUnionOptionsAnnot")) 
		  -c "SurfaceBooleanUnionToolOptions"
		  unionOptItem;

        menuItem -label (uiRes("m_ModEditSurfacesMenu.kDifferenceTool")) 
		  -c "SurfaceBooleanSubtractTool"
		  -dmc "nurbsBooleanToolScript 2 1"
		  -annotation (uiRes("m_ModEditSurfacesMenu.kDifferenceToolAnnot")) 
		  -image "nurbsShellSubtract.png"
		  booleanSubtractItem;
		menuItem -optionBox true -image "nurbsShellSubtract.png"
		  -annotation (uiRes("m_ModEditSurfacesMenu.kDifferenceOptionsAnnot")) 
		  -c "SurfaceBooleanSubtractToolOptions"
		  subtractOptItem;

        menuItem -label (uiRes("m_ModEditSurfacesMenu.kIntersectionTool")) 
		  -c "SurfaceBooleanIntersectTool"
		  -dmc "nurbsBooleanToolScript 2 2"
		  -annotation (uiRes("m_ModEditSurfacesMenu.kIntersectionToolAnnot")) 
		  -image "nurbsShellIntersect.png"
		  booleanIntersectItem;
		menuItem -optionBox true -image "nurbsShellIntersect.png"
		  -annotation (uiRes("m_ModEditSurfacesMenu.kIntersectionOptionsAnnot")) 
		  -c "SurfaceBooleanIntersectToolOptions"
		  intersectOptItem;
        setParent -m ..;
	  menuItem -d true;
	}

	// Attach + detach + Align + Open(close).
	//
	menuItem
	  -c "AttachSurfaces"
	  -dmc "attachSrfToolScript 2"
	  -i "align.png"
	  attachSrfItem;
	menuItem -optionBox true -i "align.png"
		-c "AttachSurfacesOptions"
	  attachSrfDialog;
	if( $dimWhenNoSelect )
		dimWhen -f "SomethingSelected" ($parent+"|attachSrfItem");

	// attach with gap fill
	//
	menuItem -label (uiRes("m_ModEditSurfacesMenu.kAttachWithoutMoving"))  
		-annotation (uiRes("m_ModEditSurfacesMenu.kAttachWithoutMovingAnnot")) 
		-i "attachWithoutMoving.png"
		-c "attachWithoutMoving" attachWithoutMovingItem;

	menuItem
        -c "DetachSurfaces"
        -dmc "detachSurfaceToolScript 2"
        -i "detach.png"
        detachItem;
    menuItem -optionBox true -i "detach.png"
        -c "DetachSurfacesOptions"
		detachDialog;
    if( $dimWhenNoSelect )
        dimWhen -f "SomethingSelected" ($parent+"|detachItem");

	menuItem
		-c "AlignSurfaces"
		-dmc "alignSurfaceToolScript 2"
		-i "alignSurface.png" 
		alignItem;
	menuItem -optionBox true -i "alignSurface.png" 
		-c "AlignSurfacesOptions"
		alignDialogItem;
	if( $dimWhenNoSelect )
		dimWhen -f "SomethingSelected" ($parent+"|alignItem");

	menuItem
		-c "OpenCloseSurfaces"
		-dmc "closeSurfaceToolScript 2"
		-i "openCloseSurface.png"
		closeItem;
	menuItem -optionBox true -i "openCloseSurface.png"
		-c "OpenCloseSurfacesOptions"
		closeDialogItem;
	if( $dimWhenNoSelect )
		dimWhen -f "SomethingSelected" ($parent+"|closeItem");


	// move seam mel script
	//
	menuItem -label (uiRes("m_ModEditSurfacesMenu.kMoveSeam"))  
		-annotation (uiRes("m_ModEditSurfacesMenu.kMoveSeamAnnot")) 
		-i "moveSeam.png"
		-c "moveNurbsSurfaceSeam" moveSurfaceSeamItem;

	menuItem -d true ;

	menuItem
		-c "InsertIsoparms"
		-dmc "insertSurfaceToolScript 2"
		-i "insert.png"
		insertItem;
	menuItem -optionBox true -i "insert.png"
		-c "InsertIsoparmsOptions"
		insertDialog;
	if( $dimWhenNoSelect )
		dimWhen -f "SomethingSelected" ($parent+"|insertItem");

	if( $isAdvModel ) {
		menuItem
			-c "ExtendSurfaces"
			-dmc "extendSurfaceToolScript 2"
			-i "extendSurface.png"
			extendSrfItem;
		menuItem -optionBox true -i "extendSurface.png"
			-c "ExtendSurfacesOptions"
			extendSurfaceDialogItem;
		if( $dimWhenNoSelect )
			dimWhen -f "SomethingSelected" ($parent+"|extendSrfItem");

		menuItem
			-c "OffsetSurfaces"
			-dmc "offsetSurfaceToolScript 2"
			-i "offsetSurface.png"
			surfOffsetItem;
		menuItem -optionBox true
			-i "offsetSurface.png"
			-c "OffsetSurfacesOptions"
			offsetSurfaceDialogItem;
	  if( $dimWhenNoSelect )
        dimWhen -f "SomethingSelected" ($parent+"|surfOffsetItem") ;
	}

    menuItem
        -c "ReverseSurfaceDirection"
        -dmc "reverseSurfaceToolScript 2"
        -i "reverseSurface.png"
        reverseItem;
	menuItem -optionBox true -i "reverseSurface.png"
		-c "ReverseSurfaceDirectionOptions"
		reverseDialogItem;
    if( $dimWhenNoSelect )
        dimWhen -f "SomethingSelected" ($parent+"|reverseItem");

	menuItem -d true ;

	// rebuild.
	//
    menuItem
		-c "RebuildSurfaces"
		-dmc "rebuildSurfaceToolScript 2"
		-i "rebuildSurface.png"
		rebuildSrfItem;
	menuItem -optionBox true -i "rebuildSurface.png"
		-c "RebuildSurfacesOptions"
		rebuildSurfaceDialogItem;
	if( $dimWhenNoSelect )
		dimWhen -f "SomethingSelected" ($parent+"|rebuildSrfItem");

	menuItem -d true;

	// round + surface fillet.
	//
	if( $isAdvModel ) {
		menuItem -label (uiRes("m_ModEditSurfacesMenu.kRoundTool")) 
			-annotation (uiRes("m_ModEditSurfacesMenu.kRoundToolAnnot")) 
			-image "roundSrf.png"
			-c "RoundTool" roundItem;
		menuItem -optionBox true -image "roundSrf.png"
			-annotation (uiRes("m_ModEditSurfacesMenu.kRountToolOptionsAnnot")) 
			-c "RoundToolOptions"
			roundOptionItem;
	}

	menuItem -label (uiRes("m_ModEditSurfacesMenu.kSurfaceFillet"))  -sm 1 -to 1 -aob true;
        menuItem
            -c "CircularFillet"
            -dmc "circFilletToolScript 2"
            -i "surfaceFillet.png"
			circularFilletItem;
        menuItem -optionBox true
            -i "surfaceFillet.png"
            -c "CircularFilletOptions"
            circularFilletDialogItem;
        if( $dimWhenNoSelect )
            dimWhen -f "SomethingSelected" ($parent+"|circularFilletItem") ;

        menuItem
            -c "FreeformFillet"
			-dmc "freeFilletToolScript 2"
            -i "filletFreeform_S.png"
			freeFormFilletItem ;
        menuItem -optionBox true
            -i "filletFreeform_S.png"
            -c "FreeformFilletOptions"
            freeFormFilletDialogItem;
        if( $dimWhenNoSelect )
            dimWhen -f "SomethingSelected" ($parent+"|freeFormFilletItem");

		menuItem -label (uiRes("m_ModEditSurfacesMenu.kFilletBlendTool")) 
       		-c "FilletBlendTool"
       		-dmc "blendToolScript 2"
       		-annotation (uiRes("m_ModEditSurfacesMenu.kFilletBlendToolAnnot"))
       		-image "blendSurface.png"
			blendItem;
        menuItem -optionBox true -image "blendSurface.png"
        	-annotation (uiRes("m_ModEditSurfacesMenu.kFilletBlendToolOptionsAnnot")) 
            -c "FilletBlendToolOptions"
            blendDialogItem;
	setParent -m .. ;
    menuItem -d true;
	

	// Stitch
	//

	menuItem -label (uiRes("m_ModEditSurfacesMenu.kStitch"))  -sm 1 -to 1 -aob true;

        menuItem -label (uiRes("m_ModEditSurfacesMenu.kStitchSurfacePoints")) 
            -c "StitchSurfacePoints"
        -dmc "performStitchSurfacePoints(2)"
        -annotation (uiRes("m_ModEditSurfacesMenu.kStitchSurfacePointsAnnot"))
        -i "stitchSurfacePoints.png"
        stitchSurfacePointsItem;
            menuItem -optionBox true
            -annotation (uiRes("m_ModEditSurfacesMenu.kStitchSurfacePointsOptionsAnnot")) 
            -i "stitchSurfacePoints.png"
            -c "StitchSurfacePointsOptions"
            stitchSurfacePointsDialogItem;
        if( $dimWhenNoSelect )
         dimWhen -f "SomethingSelected" ($parent+"|stitchSurfacePointsItem") ;

        menuItem -label (uiRes("m_ModEditSurfacesMenu.kStitchEdgesTool")) 
            -annotation (uiRes("m_ModEditSurfacesMenu.kStitchEdgesToolAnnot")) 
            -image "stitchSrf.png"
            -c "StitchEdgesTool" surfStitchItem;
        menuItem -optionBox true -image "stitchSrf.png"
            -annotation (uiRes("m_ModEditSurfacesMenu.kStitchToolOptionsAnnot")) 
            -c "StitchEdgesToolOptions" stitchSrfDialogItem;

		menuItem
			-c "GlobalStitch"
			-dmc "globalStitchToolScript 2"
			-image "globalStitch.png"
			globalStitchItem;
		menuItem -optionBox true
			-image "globalStitch.png"
			-c "GlobalStitchOptions"
			globalStitchDialogItem;
		if( $dimWhenNoSelect )
			dimWhen -f "SomethingSelected" ($parent+"|globalStitchItem") ;

    setParent -m .. ;

	if (`isTrue "NurbsExists"`) {
		menuItem -d true;

	    menuItem
		    -label (uiRes("m_ModEditSurfacesMenu.kSculptGeometryTool")) 
			-annotation (getRunTimeCommandAnnotation("SculptGeometryTool"))
		    -image "putty.png"
		    -command "SculptGeometryTool"
		    -dragDoubleClickCommand "SculptGeometryToolOptions"
		    ;
	  
		menuItem -optionBox true
			-annotation (getRunTimeCommandAnnotation("SculptGeometryToolOptions"))
			-image "putty.png"
			-command "SculptGeometryToolOptions"
			;

		menuItem -label (uiRes("m_ModEditSurfacesMenu.kSurfaceEditing"))  -sm 1 -to 1 -aob true;

			menuItem -label (uiRes("m_ModEditSurfacesMenu.kSurfaceEditingTool")) 
				-annotation (uiRes("m_ModEditSurfacesMenu.kSurfaceEditingToolAnnot")) 
				-image "surfaceEditor.png"
				-c "SurfaceEditingTool"
				surfaceEditorItem;
			menuItem -optionBox true -image "surfaceEditor.png"
				-annotation (uiRes("m_ModEditSurfacesMenu.kSurfaceEditingToolOptionsAnnot")) 
				-c "SurfaceEditingToolOptions"
				surfaceEditorDialogItem;

			menuItem -label (uiRes("m_ModEditSurfacesMenu.kBreakTangent")) 
				-annotation (uiRes("m_ModEditSurfacesMenu.kBreakTangentAnnot"))
				-i "breakSrfTangent.png"
				-c "BreakTangent"
				breakTangentItem;

			menuItem -label (uiRes("m_ModEditSurfacesMenu.kSmoothTangent")) 
				-annotation (uiRes("m_ModEditSurfacesMenu.kSmoothTangentAnnot"))
				-i "smoothTangent.png"
				-c "SmoothTangent"
				smoothTangentItem;

		setParent -m ..;
	}

	menuItem -d true;

	menuItem -label (uiRes("m_ModEditSurfacesMenu.kSelection"))  -sm 1 -to 1 -aob true;

	menuItem -label (uiRes("m_ModEditSurfacesMenu.kGrowCVSelection")) 
		-annotation (uiRes("m_ModEditSurfacesMenu.kGrowCVSelectionAnnot")) 
		-i "growCVselect.png"
		-c "nurbsSelect -gs 1";

	menuItem -label (uiRes("m_ModEditSurfacesMenu.kShrinkCVSelection")) 
		-annotation (uiRes("m_ModEditSurfacesMenu.kShrinkCVSelectionAnnot")) 
		-i "shrinkCVselect.png"
		-c "nurbsSelect -ss 1";

	menuItem -label (uiRes("m_ModEditSurfacesMenu.kSelectCVSelectionBoundary")) 
		-annotation (uiRes("m_ModEditSurfacesMenu.kSelectCVSelectionBoundaryAnnot")) 
		-i "selectCVboundary.png"
		-c "nurbsSelect -bs";

	menuItem -label (uiRes("m_ModEditSurfacesMenu.kSelectSurfaceBorder")) 
		-annotation (uiRes("m_ModEditSurfacesMenu.kSelectSurfaceBorderAnnot")) 
		-i "selectSurfaceBorder.png"
		-c "performSelectNurbsBorder 0";
	menuItem  -optionBox true
		-annotation (uiRes("m_ModEditSurfacesMenu.kSelectSurfaceBorderOptionsAnnot"))  -ecr false 
		-i "selectSurfaceBorder.png"
		-c "performSelectNurbsBorder 1" ;

	setParent -m ..;

	modEditSurfacesMenuLabel( $isAdvModel );
}
