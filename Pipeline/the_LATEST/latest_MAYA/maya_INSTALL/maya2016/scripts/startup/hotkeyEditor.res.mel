// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

displayString -replace -value "Accept" m_hotkeyEditor.kAccept;
displayString -replace -value "The name must not be the same as the command." m_hotkeyEditor.kAcceptMsg;
displayString -replace -value "Add to recent command list" m_hotkeyEditor.kAddRecentCommandList;
displayString -replace -value "The name must begin with an alphabetic character or underscore.  The remaining\ncharacters must consist of alphanumeric characters or underscores." m_hotkeyEditor.kAlphabetErr;
displayString -replace -value "Alt" m_hotkeyEditor.kAlt;
displayString -replace -value "Alt+" m_hotkeyEditor.kAltKey;
displayString -replace -value "Assign" m_hotkeyEditor.kAssign;
displayString -replace -value "Assign" m_hotkeyEditor.kAssignBtn;
displayString -replace -value "That hotkey is assigned to ^1s.\nDo you want to override this with your new hotkey assignment?" m_hotkeyEditor.kAssignMsg;
displayString -replace -value "Assign New Hotkey" m_hotkeyEditor.kAssignNewHotkey;
displayString -replace -value "Cancel" m_hotkeyEditor.kCancel;
displayString -replace -value "Cancel" m_hotkeyEditor.kCancelBtn;
displayString -replace -value "Cancel" m_hotkeyEditor.kCancelDialog;
displayString -replace -value "Categories" m_hotkeyEditor.kCategories;
displayString -replace -value "Category:" m_hotkeyEditor.kCategory;
displayString -replace -value "Close" m_hotkeyEditor.kClose;
displayString -replace -value "Close" m_hotkeyEditor.kCloseAccept;
displayString -replace -value "Close" m_hotkeyEditor.kCloseMsg;
displayString -replace -value "Command+" m_hotkeyEditor.kCmdKey;
displayString -replace -value "command" m_hotkeyEditor.kCommand;
displayString -replace -value "Command:" m_hotkeyEditor.kCommandInfo;
displayString -replace -value "command+" m_hotkeyEditor.kCommandKey;
displayString -replace -value "Commands" m_hotkeyEditor.kCommands;
displayString -replace -value "Delete the ^1s command?" m_hotkeyEditor.kConfirmDelete;
displayString -replace -value "control" m_hotkeyEditor.kControl;
displayString -replace -value "control+" m_hotkeyEditor.kControlKey;
displayString -replace -value "Ctrl" m_hotkeyEditor.kCtrl;
displayString -replace -value "Ctrl+" m_hotkeyEditor.kCtrlKey;
displayString -replace -value "Current Hotkeys" m_hotkeyEditor.kCurrentHotkeys;
displayString -replace -value "Cancel" m_hotkeyEditor.kDefaultCancel;
displayString -replace -value "Yes" m_hotkeyEditor.kDefaultYes;
displayString -replace -value "Delete" m_hotkeyEditor.kDelete;
displayString -replace -value "Delete" m_hotkeyEditor.kDeleteDialog;
displayString -replace -value "Description:" m_hotkeyEditor.kDescription;
displayString -replace -value "Direction:" m_hotkeyEditor.kDirection;
displayString -replace -value "Edit" m_hotkeyEditor.kEdit;
displayString -replace -value "Select a category from the popup menu or enter a value that begins with a character\nand is followed by alphanumeric characters, underscores, or spaces." m_hotkeyEditor.kErrMsg;
displayString -replace -value "Find" m_hotkeyEditor.kFind;
displayString -replace -value "You must enter a valid key\nin the Key field above." m_hotkeyEditor.kFindLabel;
displayString -replace -value "\"^1s^2s^3s\" is assigned to:\nNothing" m_hotkeyEditor.kFindMsg;
displayString -replace -value "Help" m_hotkeyEditor.kHelp;
displayString -replace -value "Hotkey Editor" m_hotkeyEditor.kHotkeyEditor;
displayString -replace -value "A new hotkey assignment may not take effect until the next time Maya is launched, if the hotkey was already defined as a default hotkey for an already displayed menu item." m_hotkeyEditor.kHotkeyWarning;
displayString -replace -value "Key:" m_hotkeyEditor.kKey;
displayString -replace -value "You must enter a valid key\nin the Key field above." m_hotkeyEditor.kLabel;
displayString -replace -value "Language:" m_hotkeyEditor.kLanguageInfo;
displayString -replace -value "List All..." m_hotkeyEditor.kListAll;
displayString -replace -value "A MEL procedure with the name ^1s already exists in\n^2s.\nPlease enter another name." m_hotkeyEditor.kMELExist;
displayString -replace -value "A marking menu with this name already exists in the Hotkey Editor" m_hotkeyEditor.kMarkingMenuWarn;
displayString -replace -value "All user defined hotkey assignments will be irretrievably lost.\nContinue restoring default hotkey assignments?" m_hotkeyEditor.kMessage;
displayString -replace -value "Modifier:" m_hotkeyEditor.kModifier;
displayString -replace -value "Name:" m_hotkeyEditor.kName;
displayString -replace -value "A script with the name ^1s already exists in\n^2s.\nPlease enter another name." m_hotkeyEditor.kNameAlreadyExist;
displayString -replace -value "A command with the name ^1s already exists.\nPlease enter another name." m_hotkeyEditor.kNameExist;
displayString -replace -value "The name ^1s is not unique.\nPlease enter another name." m_hotkeyEditor.kNameIsNotUnique;
displayString -replace -value "The name ^1s is not unique.\nPlease enter another name." m_hotkeyEditor.kNameNotUnique;
displayString -replace -value "The name must begin with an alphabetic character or underscore.  The remaining\ncharacters must consist of alphanumeric characters or underscores." m_hotkeyEditor.kNameNotValid;
displayString -replace -value "New" m_hotkeyEditor.kNew;
displayString -replace -value "No" m_hotkeyEditor.kNo;
displayString -replace -value "Nothing" m_hotkeyEditor.kNothing;
displayString -replace -value "That hotkey is already assigned to ^1s." m_hotkeyEditor.kNothingToDoMsg;
displayString -replace -value "OK" m_hotkeyEditor.kOk;
displayString -replace -value "OK" m_hotkeyEditor.kOkButton;
displayString -replace -value "option" m_hotkeyEditor.kOption;
displayString -replace -value "option+" m_hotkeyEditor.kOptionKey;
displayString -replace -value "Press" m_hotkeyEditor.kPress;
displayString -replace -value "^1s (Press)" m_hotkeyEditor.kPressAnnot;
displayString -replace -value "Query" m_hotkeyEditor.kQuery;
displayString -replace -value "You must enter a valid key\nin the Key field above." m_hotkeyEditor.kQueryLabel;
displayString -replace -value "\"^1s^2s^3s\" is assigned to:\n^4s" m_hotkeyEditor.kQueryMsg4;
displayString -replace -value "\"^1s^2s^3s\" is assigned to:\n^4s from ^5s" m_hotkeyEditor.kQueryMsg5;
displayString -replace -value "Release" m_hotkeyEditor.kRelease;
displayString -replace -value "^1s (Release)" m_hotkeyEditor.kReleaseAnnot;
displayString -replace -value "Your marking menu will not work correctly unless you also attach the release hotkey.\nDo you want this to be set up for you?" m_hotkeyEditor.kReleaseAttachMsg;
displayString -replace -value " Release" m_hotkeyEditor.kReleaseKey;
displayString -replace -value "The hotkey also has a release command assigned to ^1s.\nThis assignment will be removed." m_hotkeyEditor.kReleaseMsg;
displayString -replace -value "Remove" m_hotkeyEditor.kRemove;
displayString -replace -value "Restore Defaults" m_hotkeyEditor.kRestoreDefaults;
displayString -replace -value "Save" m_hotkeyEditor.kSave;
displayString -replace -value "Search..." m_hotkeyEditor.kSearch;
displayString -replace -value "Select a category from the popup menu or enter a value that begins with a character\nand is followed by alphanumeric characters, underscores, or spaces." m_hotkeyEditor.kSelectMsg;
displayString -replace -value "Valid during manipulator drag" m_hotkeyEditor.kValidDuringManipulatorDrag;
displayString -replace -value "Warning" m_hotkeyEditor.kWarning;
displayString -replace -value "Warning" m_hotkeyEditor.kWarningCreateMenu;
displayString -replace -value "The changes will not take effect until the next time Hotkey Editor is reopened." m_hotkeyEditor.kWarningCreateMenuMsg;
displayString -replace -value "OK" m_hotkeyEditor.kWarningCreateMenuOK;
displayString -replace -value "Warning" m_hotkeyEditor.kWarningDelMenu;
displayString -replace -value "The changes will not take effect until the next time Hotkey Editor is reopened." m_hotkeyEditor.kWarningDelMenuMsg;
displayString -replace -value "OK" m_hotkeyEditor.kWarningDelMenuOK;
displayString -replace -value "OK" m_hotkeyEditor.kWarningOk;
displayString -replace -value "Warning" m_hotkeyEditor.kWarningRenameMenu;
displayString -replace -value "The changes will not take effect until the next time Hotkey Editor is reopened." m_hotkeyEditor.kWarningRenameMenuMsg;
displayString -replace -value "OK" m_hotkeyEditor.kWarningRenameMenuOK;
displayString -replace -value "Yes" m_hotkeyEditor.kYes;
