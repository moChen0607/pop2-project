// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
// Creation Date:  17 June 2014
//
//
//  Procedure Name:
//      ModelingCurvesMenu
//
//  Description:
//		Create the MODELING->Curves menu
//
//  Input Arguments:
//      Parent window that menu will be a part of.
//
//  Return Value:
//      None.
//

global proc ModelingCurvesMenu( string $parent )
//
// Description:
//		Modeling Curves menu
//
{
	int $hasSurfaces = `isTrue SurfaceUIExists`;

	setParent -m $parent;
	if( `menu -q -ni $parent` != 0 ) {
		//
		//	Menu is built already - just return
		//
		return;
	}

	menuItem -divider true -dividerLabel (uiRes("m_ModelingCurvesMenu.kModifyDivider"));

		menuItem -label (uiRes("m_ModelingCurvesMenu.kLockLength"))
			-annotation (getRunTimeCommandAnnotation ("LockCurveLength"))
			-image "lockLength.png"
			-command "LockCurveLength";

		menuItem -label (uiRes("m_ModelingCurvesMenu.kUnlockLength"))
			-annotation (getRunTimeCommandAnnotation ("UnlockCurveLength"))
			-image "unlockLength.png"
			-command "UnlockCurveLength";

		menuItem -d true -ld false;

		menuItem -label (uiRes("m_ModelingCurvesMenu.kBend"))
			-annotation (getRunTimeCommandAnnotation("BendCurves"))
			-image "modifyBend.png"
			-command "BendCurves"
			-dragMenuCommand "performBendCurves 2"
			-dragDoubleClickCommand "BendCurvesOptions";

		menuItem -optionBox true
			-annotation (getRunTimeCommandAnnotation("BendCurvesOptions"))
			-image "modifyBend.png"
			-command "BendCurvesOptions";

		menuItem -label (uiRes("m_ModelingCurvesMenu.kCurl"))
			-annotation (getRunTimeCommandAnnotation("CurlCurves"))
			-image "modifyCurl.png"
			-command "CurlCurves"
			-dragMenuCommand "performCurlCurves 2"
			-dragDoubleClickCommand "CurlCurvesOptions";

		menuItem -optionBox true
			-annotation (getRunTimeCommandAnnotation("CurlCurvesOptions"))
			-image "modifyCurl.png"
			-command "CurlCurvesOptions";

		menuItem -label (uiRes("m_ModelingCurvesMenu.kScaleCurvature"))
			-annotation (getRunTimeCommandAnnotation("ScaleCurvature"))
			-image "modifyScaleCurvature.png"
			-command "ScaleCurvature"
			-dragMenuCommand "performScaleCurvature 2"
			-dragDoubleClickCommand "ScaleCurvatureOptions";

		menuItem -optionBox true
			-annotation (getRunTimeCommandAnnotation("ScaleCurvatureOptions"))
			-image "modifyScaleCurvature.png"
			-command "ScaleCurvatureOptions";

		menuItem -label (uiRes("m_ModelingCurvesMenu.kSmooth"))
			-annotation (getRunTimeCommandAnnotation("SmoothHairCurves"))
			-image "modifySmooth.png"
			-command "SmoothHairCurves"
			-dragMenuCommand "performSmoothHairCurves 2"
			-dragDoubleClickCommand "SmoothHairCurvesOptions";

		menuItem -optionBox true
			-annotation (getRunTimeCommandAnnotation("SmoothHairCurvesOptions"))
			-image "modifySmooth.png"
			-command "SmoothHairCurvesOptions";

		menuItem -label (uiRes("m_ModelingCurvesMenu.kStraighten"))
			-annotation (getRunTimeCommandAnnotation("StraightenCurves"))
			-image "modifyStraighten.png"
			-command "StraightenCurves"
			-dragMenuCommand "performStraighten 2"
			-dragDoubleClickCommand "StraightenCurvesOptions";

		menuItem -optionBox true
			-annotation (getRunTimeCommandAnnotation("StraightenCurvesOptions"))
			-image "modifyStraighten.png"
			-command "StraightenCurvesOptions";

	menuItem -divider true -dividerLabel (uiRes("m_ModelingCurvesMenu.kEditDivider"));	

		if ($hasSurfaces) {
			menuItem
				-label (uiRes("m_ModelingCurvesMenu.kDupSurfCrvLabel")) 
				-annotation (uiRes("m_ModelingCurvesMenu.kDupSurfCrvAnnot"))
				-c "DuplicateCurve"
				-dmc "duplicateCurveToolScript 2"
				-i "duplicateCurve.png"
				duplicateCurveItem ;

			menuItem -optionBox true
				-label (uiRes("m_ModelingCurvesMenu.kDupSurfCurvDialogLabel"))
				-annotation (uiRes("m_ModelingCurvesMenu.kDupSurfCrvDialogAnnot"))
				-i "duplicateCurve.png"
				-c "DuplicateCurveOptions"
				duplicateCurveDialogItem;
		
			menuItem -d true -ld false;
		}

		menuItem -label (uiRes("m_ModelingCurvesMenu.kAlignCurvesLabel"))  
			-annotation (uiRes("m_ModelingCurvesMenu.kAlignCurvesAnnot"))
			-c "AlignCurve"
			-dmc "alignCurveToolScript 2"
			-i "alignCurve.png"
			alignItem;

		menuItem -optionBox true 
			-label (uiRes("m_ModelingCurvesMenu.kAlignCurvesDialogLabel")) 
			-annotation (uiRes("m_ModelingCurvesMenu.kAlignCurvesDialogAnnot")) 
			-i "alignCurve.png" 
			-c "AlignCurveOptions"
			alignDialogItem;
		
		menuItem -label (uiRes("m_ModelingCurvesMenu.kAddPointsLabel"))  
			-annotation (uiRes("m_ModelingCurvesMenu.kAddPointsAnnot")) 
			-image "curveAddPt.png"
			-c "AddPointsTool" 
			crvAppendItem;

		menuItem
			-label (uiRes("m_ModelingCurvesMenu.kAttachCrvLabel")) 
			-annotation (uiRes("m_ModelingCurvesMenu.kAttachCrvAnnot"))
			-c "AttachCurve"
			-dmc "attachCrvToolScript 2"
			-i "attachCurves.png"
			attachCrvItem;

		menuItem -optionBox true
			-label (uiRes("m_ModelingCurvesMenu.kAttachCrvDialogLabel"))
			-annotation (uiRes("m_ModelingCurvesMenu.kAttachCrvDialogAnnot"))
			-i "attachCurves.png"
			-c "AttachCurveOptions"
			attachCrvDialog;

		menuItem
			-label (uiRes("m_ModelingCurvesMenu.kDetachCrvLabel")) 
			-annotation (uiRes("m_ModelingCurvesMenu.kDetachCrvAnnot"))
			-c "DetachCurve"
			-dmc "detachCurveToolScript 2"
			-i "detachCurve.png"
			detachItem;

		menuItem -optionBox true -i "detachCurve.png"
			-label (uiRes("m_ModelingCurvesMenu.kDetachCrvDialogLabel"))
			-annotation (uiRes("m_ModelingCurvesMenu.kDetachCrvDialogAnnot"))
			-c "DetachCurveOptions"
			detachDialog;
			
		menuItem -label (uiRes("m_ModelingCurvesMenu.kCrvEditLabel")) 
			-annotation (uiRes("m_ModelingCurvesMenu.kCrvEditAnnot")) 
			-image "curveEditor.png"
			-c "CurveEditTool" 
			crvEditorItem;

		menuItem 
			-label (uiRes("m_ModelingCurvesMenu.kMoveSeamLabel"))  
			-annotation (uiRes("m_ModelingCurvesMenu.kMoveSeamAnnot")) 
			-image "newSeamLocation.png" 
			-c "moveNurbsCurveSeam"
			moveCurveSeamItem;

		menuItem 
			-label (uiRes("m_ModelingCurvesMenu.kOpenCloseCrvLabel")) 
			-annotation (uiRes("m_ModelingCurvesMenu.kCloseCrvAnnot")) 
			-c "OpenCloseCurve"
			-dmc "closeCurveToolScript 2"
			-i "closeGeom.png"
			closeItem;
		menuItem -optionBox true -i "closeGeom.png"
			-label (uiRes("m_ModelingCurvesMenu.kCloseCrvDialogLabel")) 
			-annotation (uiRes("m_ModelingCurvesMenu.kCloseCrvDialogAnnot")) 
			-c "OpenCloseCurveOptions"
			closeDialogItem;
		
		menuItem -d true -ld false;

		menuItem
			-label (uiRes("m_ModelingCurvesMenu.kFilletCrvLabel")) 
			-annotation (uiRes("m_ModelingCurvesMenu.kFilletCrvAnnot")) 
			-c "CurveFillet"
			-dmc "filletCurveToolScript 2"
			-i "fillet.png"
			crvFilletItem;

		menuItem -optionBox true  -i "fillet.png"
			-label (uiRes("m_ModelingCurvesMenu.kFilletCrvDialogLabel")) 
            -annotation (uiRes("m_ModelingCurvesMenu.kFilletCrvDialogAnnot")) 
			-c "CurveFilletOptions"
			crvFilletDialogItem;
	
		menuItem
			-label (uiRes("m_ModelingCurvesMenu.kCutCrvLabel")) 
			-annotation (uiRes("m_ModelingCurvesMenu.kCutCrvAnnot")) 
			-c "CutCurve"
			-dmc "cutCurveToolScript 2"
			-i "cutCurves.png"
			cutCurvesItem;

		menuItem -optionBox true -i "cutCurves.png"
			-label (uiRes("m_ModelingCurvesMenu.kCutCrvDialogLabel")) 
			-annotation (uiRes("m_ModelingCurvesMenu.kCutCrvDialogAnnot"))
			-c "CutCurveOptions"
			cutCurveDialogItem;

		menuItem
			-label (uiRes("m_ModelingCurvesMenu.kIntersectCrvLabel")) 
			-annotation (uiRes("m_ModelingCurvesMenu.kIntersectCrvAnnot"))
			-c "IntersectCurve"
			-dmc "intersectCurveToolScript 2"
			-i "intersectCurves.png"
			intersectCurvesItem;
		menuItem -optionBox true -i "intersectCurves.png"
			-label (uiRes("m_ModelingCurvesMenu.kIntersectCrvDialogLabel")) 
			-annotation (uiRes("m_ModelingCurvesMenu.kIntersectCrvDialogAnnot")) 
			-c "IntersectCurveOptions"
			intersectCurveDialogItem;

		menuItem -d true -ld false;

		if ($hasSurfaces){
			menuItem 
				-label (uiRes("m_ModelingCurvesMenu.kExtendCurvesLabel")) 
				-sm 1 -to 1 -aob true;
		}

			menuItem
				-label (uiRes("m_ModelingCurvesMenu.kExtendCrvLabel")) 
				-annotation (uiRes("m_ModelingCurvesMenu.kExtendCrvAnnot")) 
				-c "ExtendCurve"
				-dmc "extendCurveToolScript 2"
				-i "extend.png"
				extendCurveItem;

			menuItem -optionBox true -i "extend.png"
				-label (uiRes("m_ModelingCurvesMenu.kExtendCrvDialogLabel")) 
				-annotation (uiRes("m_ModelingCurvesMenu.kExtendCrvDialogAnnot")) 
				-c "ExtendCurveOptions"
				extendCurveDialogItem;
			
			if ($hasSurfaces){
				menuItem 
					-label (uiRes("m_ModelingCurvesMenu.kExtendCOSLabel")) 
					-annotation (uiRes("m_ModelingCurvesMenu.kExtendCOSAnnot"))
					-c "ExtendCurveOnSurface"
					-dmc "extendCosCurveToolScript 2"
					-i "extendCos.png"
					extendCosCurveItem;
				menuItem -optionBox true -i "extendCos.png"
					-label (uiRes("m_ModelingCurvesMenu.kExtendCOSDialogLabel")) 
					-annotation (uiRes("m_ModelingCurvesMenu.kExtendCOSDialogAnnot")) 
					-c "ExtendCurveOnSurfaceOptions"
					extendCosCurveDialogItem;
			
			setParent -m .. ;
			}

		menuItem
			-label (uiRes("m_ModelingCurvesMenu.kInsertKnotLabel")) 
			-annotation (uiRes("m_ModelingCurvesMenu.kInsertKnotAnnot"))
			-c "InsertKnot"
			-dmc "insertCurveToolScript 2"
			-i "insertKnot.png"
			insertItem;
		
		menuItem -optionBox true -i "insertKnot.png"
			-label (uiRes("m_ModelingCurvesMenu.kInsertKnotDialogLabel"))
			-annotation (uiRes("m_ModelingCurvesMenu.kInsertKnotDialogAnnot"))
			-c "InsertKnotOptions"
			insertDialog;

		if ($hasSurfaces){
			menuItem 
			  -label (uiRes("m_ModelingCurvesMenu.kOffsetCurveLabel"))  
			  -sm 1 -to 1 -aob true;
		}

			menuItem
				-label (uiRes("m_ModelingCurvesMenu.kOffsetCrvLabel")) 
				-annotation (uiRes("m_ModelingCurvesMenu.kOffsetCrvAnnot"))
				-c "OffsetCurve"
				-dmc "offsetCurveToolScript 2"
				-i "offsetCurve.png"
				offsetCrvItem;

			menuItem -optionBox true -i "offsetCurve.png"
				-label (uiRes("m_ModelingCurvesMenu.kOffsetCrvDialogLabel")) 
				-annotation (uiRes("m_ModelingCurvesMenu.kOffsetCrvDialogAnnot")) 
				-c "OffsetCurveOptions"
				offsetCurveDialogItem;
    		
			if ($hasSurfaces){
				menuItem
					-label (uiRes("m_ModelingCurvesMenu.kOffsetCOSLabel")) 
					-annotation (uiRes("m_ModelingCurvesMenu.kOffsetCOSAnnot"))
					-c "OffsetCurveOnSurface"
					-dmc "offsetCosToolScript 2"
					-i "offsetCos.png"
					offsetCosItem;

				menuItem -optionBox true -i "offsetCos.png"
					-label (uiRes("m_ModelingCurvesMenu.kOffsetCOSDialogLabel")) 
					-annotation (uiRes("m_ModelingCurvesMenu.kOffsetCOSDialogAnnot")) 
					-c "OffsetCurveOnSurfaceOptions"
					offsetCosDialogItem;

			setParent -m ..;
			}

		menuItem -d true -ld false;

		menuItem
			-label (uiRes("m_ModelingCurvesMenu.kCVHardnessLabel")) 
			-annotation (uiRes("m_ModelingCurvesMenu.kCVHardnessAnnot")) 
			-c "CVHardness"
			-dmc "cvHardnessToolScript 2"
			-i "cvHardness.png"
			hardenItem;

		menuItem -optionBox true
			-label (uiRes("m_ModelingCurvesMenu.kCVHardnessDialogLabel")) 
			-annotation (uiRes("m_ModelingCurvesMenu.kCVHardnessDialogAnnot")) 
			-c "CVHardnessOptions"
			-i "cvHardness.png"
			hardenDialogItem;

		menuItem
			-label (uiRes("m_ModelingCurvesMenu.kFitBsplineLabel")) 
			-annotation (uiRes("m_ModelingCurvesMenu.kFitBsplineAnnot"))
			-c "FitBSpline"
			-dmc "fitBsplineToolScript 2"
			-i "fitBSpline.png"
			fitBsplineItem;

		menuItem -optionBox true -i "fitBSpline.png"
			-label (uiRes("m_ModelingCurvesMenu.kFitBsplineDialogAnnot")) 
            -annotation (uiRes("m_ModelingCurvesMenu.kFitBsplineDialogLabel")) 
			-c "FitBSplineOptions"
			fitBsplineDialogItem;

		menuItem
			-label (uiRes("m_ModelingCurvesMenu.kProjTanLabel"))  
			-annotation (uiRes("m_ModelingCurvesMenu.kProjTanAnnot"))
			-c "ProjectTangent"
			-dmc "projectTangentToolScript 2" 
			-i "projectTangent.png"
			projectTangentItem;

		menuItem -optionBox true 
			-label (uiRes("m_ModelingCurvesMenu.kProjTanDialogLabel")) 
			-annotation (uiRes("m_ModelingCurvesMenu.kProjTanDialogAnnot")) 
			-i "projectTangent.png" 
			-c "ProjectTangentOptions" 
			projectTangentDialogItem;
		
		menuItem
			-label (uiRes("m_ModelingCurvesMenu.kSmoothCrvLabel")) 
			-annotation (uiRes("m_ModelingCurvesMenu.kSmoothCrvAnnot")) 
			-c "SmoothCurve"
			-dmc "smoothCurveToolScript 2"
			-i "smoothCurve.png"
			smoothItem;

		menuItem -optionBox true
			-label (uiRes("m_ModelingCurvesMenu.kSmoothCrvDialogLabel")) 
			-annotation (uiRes("m_ModelingCurvesMenu.kSmoothCrvDialogAnnot")) 
			-c "SmoothCurveOptions"
			-i "smoothCurve.png"
			smoothDialogItem;

		menuItem -d true -ld false;

		menuItem -label (uiRes("m_ModelingCurvesMenu.kBezierCrvLabel"))
			-sm 1 -to 1 -aob false;

			menuItem -label (uiRes("m_ModelingCurvesMenu.kBezierPresetsLabel"))
					-sm 1 -to 1 -aob false;

				string $cmdBez = "bezierAnchorPreset -p 0;";
				string $cmdBezCorner = "bezierAnchorPreset -p 1;";
				string $cmdCorner = "bezierAnchorPreset -p 2;";

				menuItem
					-label (uiRes("m_ModelingCurvesMenu.kBezierPresetBezier"))
					-command $cmdBez
					-enableCommandRepeat 1
					;

				menuItem
					-label (uiRes("m_ModelingCurvesMenu.kBezierPresetBezierCorner"))
					-command $cmdBezCorner
					-enableCommandRepeat 1
					;

				menuItem
					-label (uiRes("m_ModelingCurvesMenu.kBezierPresetCorner"))
					-command $cmdCorner
					-enableCommandRepeat 1
					;

			setParent -m ..;	// anchor presets

			menuItem -label (uiRes("m_ModelingCurvesMenu.kBezierTangentOptions"))
					-sm 1 -to 1 -aob false;

				string $cmdSmooth = "bezierAnchorState -sm 1";
				string $cmdBroken = "bezierAnchorState -sm 0";
				string $cmdEven = "bezierAnchorState -ev 1";
				string $cmdUneven = "bezierAnchorState -ev 0";

				menuItem
					-label (uiRes("m_ModelingCurvesMenu.kBezierSetAnchorSmooth"))
					-command $cmdSmooth
					-enableCommandRepeat 1
					;

				menuItem
					-label (uiRes("m_ModelingCurvesMenu.kBezierSetAnchorBroken"))
					-command $cmdBroken
					-enableCommandRepeat 1
					;

				menuItem
					-label (uiRes("m_ModelingCurvesMenu.kBezierSetAnchorEven"))
					-command $cmdEven
					-enableCommandRepeat 1
					;

				menuItem
					-label (uiRes("m_ModelingCurvesMenu.kBezierSetAnchorUneven"))
					-command $cmdUneven
					-enableCommandRepeat 1
					;

			setParent -m ..;	// tangent options
		setParent -m ..;	// bezier curves

		menuItem -d true -ld false;

		menuItem
			-label (uiRes("m_ModelingCurvesMenu.kRebuildCrvLabel")) 
			-annotation (uiRes("m_ModelingCurvesMenu.kRebuildCrvAnnot")) 
			-c "RebuildCurve"
			-dmc "rebuildCurveToolScript 2"
			-i "rebuildCurve.png"
			rebuildCrvItem;

		menuItem -optionBox true -i "rebuildCurve.png"
			-label (uiRes("m_ModelingCurvesMenu.kRebuildCrvDialogLabel")) 
			-annotation (uiRes("m_ModelingCurvesMenu.kRebuildCrvDialogAnnot")) 
			-c "RebuildCurveOptions"
			rebuildCurveDialogItem;
			
		menuItem
			-label (uiRes("m_ModelingCurvesMenu.kReverseCrvLabel")) 
			-annotation (uiRes("m_ModelingCurvesMenu.kReverseCrvAnnot")) 
			-c "ReverseCurve"
			-dmc "reverseCurveToolScript 2"
			-i "reverse.png"
			reverseItem;

		menuItem -optionBox true -i "reverse.png"
			-label (uiRes("m_ModelingCurvesMenu.kReverseCrvDialogLabel")) 
			-annotation (uiRes("m_ModelingCurvesMenu.kReverseCrvDialogAnnot")) 
			-c "ReverseCurveOptions"
			reverseDialogItem;

	setParent -m .. ;
}

