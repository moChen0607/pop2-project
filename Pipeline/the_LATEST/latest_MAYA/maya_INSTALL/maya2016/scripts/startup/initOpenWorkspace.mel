// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//  initOpenWorkspace
//
//	Description:
//     Procedure to validate and open a workspace during startup.
//     The workspace directory must exist and have appropriate permissions 
//     before we attempt to use it. 
//     This procedure is only intended for use during initial startup 
//     and deliberately does not contain any output or superfluous logic. 
//     

global proc int initOpenWorkspace(string $workspaceRoot, int $requireWorkspaceExists)
{

	// Check root is a directory and exists
	if ( !(`filetest -d $workspaceRoot`))
       return false;

	// Check root directory is readable
	if ( !(`filetest -r $workspaceRoot`))
       return false;

	// Directory permissions on linux & mac need execute as well 
	if (( `about -linux` || `about -mac`) && (!`filetest -x $workspaceRoot`))
       return false;

    // (Optional) Make sure there is an existing workspace.mel
    if ($requireWorkspaceExists) 
    {
        string $wsFile = $workspaceRoot + "/" + "workspace.mel";
        if (!`filetest -e $wsFile` ) 
            return false;
    }

    // Open the workspace 
	if (catch(`workspace -o $workspaceRoot`)) 
    {
        return false;
    }

    return true;
}
