// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
// Creation Date:  Oct 1999
//
//
//<doc>
//<name validateShelfName>
//
//<synopsis>
//		validateShelfName (string $newName)
//
//<returns>
//		int : 1 if the name is valid, 0 otherwise
//
//<description>
//		This script is called to make verify that a potential name
//		for a shelf tab is valid.
//
//<flags>
//		string $newName Potential shelf name to check.
//
//<examples>
//	validateShelfName "123isNotValid";
//
//</doc>

global proc int validateShelfName (string $newName)
{
	int $isOkay = true;

	string $regex = "[^0-9a-zA-Z_]";
	string $firstCharRegex = "[0-9]";
	string $match = match( $regex, $newName );
	
	int $fileExists = false;
	string $shelfDirs = `internalVar -userShelfDir`;
	string $shelfArray[];
	string $PATH_SEPARATOR = `about -win`? ";" : ":";
	tokenize($shelfDirs, $PATH_SEPARATOR, $shelfArray);
	for( $i = 0; $i < size($shelfArray); $i++ ) {
		string $fileName = ($shelfArray[$i] + "shelf_" + $newName + ".mel");
		if (`file -q -exists $fileName`) {
			$fileExists = true;
			break;
		}
	}

	//
	// test for zero length
	//
	string $confirmMsg = (uiRes("m_validateShelfName.kNameNotUnique"));
	string $title = (uiRes("m_validateShelfName.kAlert"));
	string $ok = (uiRes("m_validateShelfName.kOk"));
	if (size($newName) == 0) {
		confirmDialog -title $title 
			-button $ok -defaultButton $ok
			-message (uiRes("m_validateShelfName.kNameEmpty"));
		$isOkay = false;
	//
	// test for bad characters
	//
	} else if ($match != "") {
		confirmDialog -title $title 
			-button $ok -defaultButton $ok
			-message (uiRes("m_validateShelfName.kNameHasIllegalcharacters"));
		$isOkay = false;
	//
	// test for bad first character
	//
	} else if ("" != match($firstCharRegex, `substring $newName 1 1`)) {
		confirmDialog -title $title 
			-button $ok -defaultButton $ok
			-message (uiRes("m_validateShelfName.kNameCantBeginWithNumerals"));
		$isOkay = false;
	//
	// test for existing saved shelves
	//
	} else if ($fileExists) {
		confirmDialog -title $title 
			-button $ok -defaultButton $ok
			-message $confirmMsg;
		$isOkay = false;
	} else {
		//
		//  test for existing shelves in optionVars
		//
		string $shelfName;
		$nShelves = `optionVar -q numShelves`;
		for ($i = 1; $i <= $nShelves; $i++) {
			$varName = ("shelfName" + $i);
			$shelfName = `optionVar -q $varName`;
			if ($shelfName == $newName) {
				$isOkay = false;
				break;
			}
		}
		
		if (!$isOkay) {
			confirmDialog -title $title 
				-button $ok -defaultButton $ok
				-message $confirmMsg;
		}
	}
	
	return $isOkay;
}
