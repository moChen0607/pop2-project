// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//  Procedure Name:
//      updatePrefsMenu
//
//  Description:
//      Ensure that the check boxes that control the visibility of 
//		the main window UI components are in sync with the actual 
//		visibility of those components.
//
//  Input Arguments:
//      None
//
//  Return Value:
//      None.
//
global proc updatePrefsMenu()
{
	global string $gMainOptionsMenu;
	
	//	Only update the  menu if it exists
	if (`menu -exists $gMainOptionsMenu` &&
		`menu -query -numberOfItems $gMainOptionsMenu` > 0) {

		setParent -menu $gMainOptionsMenu;
	
		//	Query the visibility of the main window UI components.
		//
		int $visShelf          = isUIComponentVisible("Shelf");
		int $visStatusLine     = isUIComponentVisible("Status Line");
		int $visTimeSlider     = isUIComponentVisible("Time Slider");
		int $visPlaybackRange  = isUIComponentVisible("Range Slider");
		int $visCommandLine    = isUIComponentVisible("Command Line");
		int $visHelpLine       = isUIComponentVisible("Help Line");
		int $visToolbox        = isUIComponentVisible("Tool Box");
		int $visAttrEditor     = isUIComponentVisible("Attribute Editor");
		int $visToolSettings   = isUIComponentVisible("Tool Settings");
		int $visChannelsLayers = isUIComponentVisible("Channel Box / Layer Editor");
		int $visChannels = isUIComponentVisible("Channel Box");
		int $visLayers = isUIComponentVisible("Layer Editor");

		//	Now update the menu item check boxes.
		//
		menuItem -edit -checkBox $visStatusLine statusLineItem;
		menuItem -edit -checkBox $visShelf shelfItem;

		menuItem -edit -checkBox $visTimeSlider timelineItem;
		menuItem -edit -checkBox $visPlaybackRange playbackRangeItem;
		menuItem -edit -checkBox $visCommandLine commandLineItem;
		menuItem -edit -checkBox $visHelpLine helpLineItem;

		menuItem -edit -checkBox $visToolbox toolboxItem;
		menuItem -edit -checkBox $visAttrEditor attrEditorItem;
		menuItem -edit -checkBox $visToolSettings toolSettingsItem;
		menuItem -edit -checkBox $visLayers layersItem;
		menuItem -edit -checkBox $visChannels channelsItem;
		menuItem -edit -checkBox $visChannelsLayers channelsLayersItem;
		
		if( `optionVar -q channelsLayersSeparate` ) {
			menuItem -e -enable true channelsItem;
			menuItem -e -enable true layersItem;
			menuItem -e -enable false channelsLayersItem;
		} else {
			menuItem -e -enable false channelsItem;
			menuItem -e -enable false layersItem;
			menuItem -e -enable true channelsLayersItem;
		}
	}
}
