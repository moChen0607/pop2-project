// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  Nov 11, 1998
//
//
//
//  Description:
//      This implements the "Subdiv Surface" menu on the modeling menubar.
//


//////////////////////////////////////////////////////////////////////
global proc string SubdivSurfacesMenuItemToShelf (string $item)
{
    return $item;
}

global proc SubdivSurfacesMenu(string $parent)
//
// Description:
//		Subdiv Surfaces menu
//
{

	if (! `isTrue "SubdivUIExists"`) return;

	setParent -m $parent;

	if (`menu -q -ni $parent` == 0) {

		// Texture
		//
		string $textItem=`menuItem -label (uiRes("m_SubdivSurfacesMenu.kTexture"))  -sm 1 -to 1 -aob true subdTexturesItem`;
		SubdTextureMenu $textItem 0 "ls -sl";
		setParent -m ..;
		
		menuItem -divider true;
		// Crease mesh edge or mesh point
		//
		menuItem -label (uiRes("m_SubdivSurfacesMenu.kFullCrease"))  -ecr true 
			-annotation (uiRes("m_SubdivSurfacesMenu.kFullCreaseAnnot")) 
			-image subdivCrease.png
			-echoCommand true
			-c "FullCreaseSubdivSurface"
			subdivCreaseItem;

		menuItem -label (uiRes("m_SubdivSurfacesMenu.kPartialCrease"))  -ecr true 
			-annotation (uiRes("m_SubdivSurfacesMenu.kPartialCreaseAnnot")) 
			-image subdivPartialCrease.png
			-echoCommand true
			-c "PartialCreaseSubdivSurface"
			subdivCreaseSimpleItem;

		// UnCrease mesh edge or mesh point
		//
		menuItem -label (uiRes("m_SubdivSurfacesMenu.kUncrease"))  -ecr true 
			-annotation (uiRes("m_SubdivSurfacesMenu.kUncreaseAnnot")) 
			-image subdivUncrease.png
			-echoCommand true
			-c "UncreaseSubdivSurface"
			subdivUnCreaseItem;
		menuItem -divider true;
        
 	  menuItem -label (uiRes("m_SubdivSurfacesMenu.kMirror"))  -ecr true 
 		-annotation (uiRes("m_SubdivSurfacesMenu.kMirrorAnnot"))
		-image subdivMirror.png
 		-c "MirrorSubdivSurface"
 		subdivMirrorItem;
 	  menuItem -optionBox 1 
 		-label (uiRes("m_SubdivSurfacesMenu.kMirrorOption"))  -ecr false 
 		-annotation (uiRes("m_SubdivSurfacesMenu.kMirrorOptionAnnot"))  
		-image subdivMirror.png
 		-c "MirrorSubdivSurfaceOptions" 
		subdivMirrorOptionItem;

 	  menuItem -label (uiRes("m_SubdivSurfacesMenu.kAttach"))  -ecr true 
		  -annotation (uiRes("m_SubdivSurfacesMenu.kAttachAnnot"))
		-image subdivAttach.png
 		-c "AttachSubdivSurface"
 		subdivAttachItem;
 	  menuItem -optionBox 1 
 		-label (uiRes("m_SubdivSurfacesMenu.kAttachOption"))  -ecr false 
 		-annotation (uiRes("m_SubdivSurfacesMenu.kAttachOptionAnnot"))  
		-image subdivAttach.png
 		-c "AttachSubdivSurfaceOptions" 
		subdivAttachOptionItem;

		menuItem -divider true;
 
		menuItem -label (uiRes("m_SubdivSurfacesMenu.kMatch")) 
			-ecr true
			-annotation (uiRes("m_SubdivSurfacesMenu.kMatchAnnot")) 
			-image subdivMatchToplogy.png
			-c "SubdivSurfaceMatchTopology"
			subdivMatchTopoItem;

		menuItem -label (uiRes("m_SubdivSurfacesMenu.kClean")) 
			-ecr true
			-annotation (uiRes("m_SubdivSurfacesMenu.kCleanAnnot")) 
			-image subdivCleanToplogy.png
			-c "SubdivSurfaceCleanTopology"
			subdivCleanTopoItem;            

		menuItem -divider true;
        
 	  menuItem -label (uiRes("m_SubdivSurfacesMenu.kCollapse"))  -ecr true 
 		-annotation (uiRes("m_SubdivSurfacesMenu.kCollapseAnnot"))
		-image subdivCollapseHierearchy.png
 		-c "CollapseSubdivSurfaceHierarchy"
 		subdivCollapseItem;
 	  menuItem -optionBox 1 
 		-label (uiRes("m_SubdivSurfacesMenu.kCollapseOption"))  -ecr false 
 		-annotation (uiRes("m_SubdivSurfacesMenu.kCollapseOptionAnnot"))  
		-image subdivCollapseHierearchy.png
 		-c "CollapseSubdivSurfaceHierarchyOptions" 
		subdivCollapseOptionItem;

		menuItem -divider true;

		menuItem -label (uiRes("m_SubdivSurfacesMenu.kStandard")) 
			-ecr true
			-annotation (uiRes("m_SubdivSurfacesMenu.kStandardAnnot")) 
			-image subdivStandardMode.png
			-c "SubdivSurfaceHierarchyMode"
			subdivHierItem;

		menuItem -label (uiRes("m_SubdivSurfacesMenu.kProxy")) 
			-ecr true
			-annotation (uiRes("m_SubdivSurfacesMenu.kProxyAnnot")) 
			-image subdivPolyMode.png
			-c "SubdivSurfacePolygonProxyMode"
			subdivPolyItem;

	  menuItem -divider true;
	    // Artisan: Sculpt Geometry Tool.
	    menuItem
		    -label (uiRes("m_SubdivSurfacesMenu.kSculpt")) 
			-annotation (getRunTimeCommandAnnotation("SculptGeometryTool"))
		    -image "putty.png"
		    -command "SculptGeometryTool"
		    -dragDoubleClickCommand "SculptGeometryToolOptions"
		    ;
	  
		menuItem -optionBox true
			-annotation (getRunTimeCommandAnnotation("SculptGeometryToolOptions"))
			-image "putty.png"
			-command "SculptGeometryToolOptions"
			;

		menuItem -divider true;
	  
		// Subdiv Convert Selection  - use PolySelectConvert because
		// it does both poly and subd conversion
		//
		menuItem -label (uiRes("m_SubdivSurfacesMenu.kToFaces"))  -ecr false 
			-c ("PolySelectConvert 1")
			-echoCommand true
			-annotation (uiRes("m_SubdivSurfacesMenu.kToFacesAnnot"))  
			-image "polyConvertToFace.png"
			-dmc "SubdivSurfacesMenuItemToShelf \"PolySelectConvert 1\""	
			subdivConvertSelectionFacesItem;
		menuItem -label (uiRes("m_SubdivSurfacesMenu.kToEdges"))  -ecr false 
			-c ("PolySelectConvert 2")
			-echoCommand true
			-annotation (uiRes("m_SubdivSurfacesMenu.kToEdgesAnnot"))  
			-image "polyConvertToEdge.png"
			-dmc "SubdivSurfacesMenuItemToShelf \"PolySelectConvert 2\""	
			subdivConvertSelectionEdgesItem;
		menuItem -label (uiRes("m_SubdivSurfacesMenu.kToVerts"))  -ecr false 
			-c ("PolySelectConvert 3")
			-echoCommand true
			-image "polyConvertToVertices.png"
			-annotation (uiRes("m_SubdivSurfacesMenu.kToVertsAnnot"))  
			-dmc "SubdivSurfacesMenuItemToShelf \"PolySelectConvert 3\""	
			subdivConvertSelectionVertsItem;
		menuItem -label (uiRes("m_SubdivSurfacesMenu.kToUVs"))  -ecr false 
			-c ("PolySelectConvert 4")
			-echoCommand true
			-annotation (uiRes("m_SubdivSurfacesMenu.kToUVsAnnot"))  
			-image "polyConvertToUVs.png"
			-dmc "SubdivSurfacesMenuItemToShelf \"PolySelectConvert 4\""	
			subdivConvertSelectionUVsItem;
		// Subdiv refine 
		//
		menuItem -label (uiRes("m_SubdivSurfacesMenu.kRefine"))  -ecr true 
			-c ("RefineSelectedComponents")
			-echoCommand true
			-annotation (uiRes("m_SubdivSurfacesMenu.kRefineAnnot"))  
			-image subdivRefineRegion.png
			subdivCreateAndRefineRegionItem;

		// Subdiv coarsen 
		//
		menuItem -label (uiRes("m_SubdivSurfacesMenu.kCoarser"))  -ecr true 
			-c ("CoarsenSelectedComponents")
			-echoCommand true
			-annotation (uiRes("m_SubdivSurfacesMenu.kCoarserAnnot")) 
			-image subdivSelectCoarser.png
			subdivCoarsenRegionItem;

		// Subdiv Expand Region
		//
		menuItem -label (uiRes("m_SubdivSurfacesMenu.kExpand"))  -ecr true 
			-c ("ExpandSelectedComponents")
			-echoCommand true
			-annotation (uiRes("m_SubdivSurfacesMenu.kExpandAnnot"))  
			-image subdivExpandRegion.png
			subdivExpandRegionItem;

		menuItem -divider true;
		
		menuItem -label (uiRes("m_SubdivSurfacesMenu.kDispLevel"))  -sm 1 -to 1 -aob true;

		// Finer Mesh Display
		//
		menuItem -label (uiRes("m_SubdivSurfacesMenu.kFiner"))  -ecr true 
			-c "FineLevelComponentDisplay"
			-echoCommand true
			-annotation (uiRes("m_SubdivSurfacesMenu.kFinerAnnot"))  
			-image subdivFineMesh.png
			subdivFinerMeshItem;

		// Coarser Mesh Display
		//
		menuItem -label (uiRes("m_SubdivSurfacesMenu.kCoarserDisp"))  -ecr true 
			-c "CoarseLevelComponentDisplay"
			-echoCommand true
			-annotation (uiRes("m_SubdivSurfacesMenu.kCoarserDispAnnot"))  
			-image subdivCoarseMesh.png
			subdivCoaserMeshItem;

		// Base Mesh Display
		//
		menuItem -label (uiRes("m_SubdivSurfacesMenu.kBase"))  -ecr true 
			-c "BaseLevelComponentDisplay"
			-echoCommand true
			-annotation (uiRes("m_SubdivSurfacesMenu.kBaseAnnot"))  
			-image subdivBaseMesh.png
			subdivBaseMeshItem;

		setParent -m ..;

		menuItem -label (uiRes("m_SubdivSurfacesMenu.kCDF"))  -sm 1 -to 1 -aob true;

		// Show all at current level
		//
		menuItem -label (uiRes("m_SubdivSurfacesMenu.kAll"))  -ecr true 
			-c "ShowAllComponents"
			-annotation (uiRes("m_SubdivSurfacesMenu.kAllAnnot"))
			-image "subdivDisplayAll.png"
			-echoCommand true
			subdivShowAllCurrentLevelItem;

		// Show editted mesh points at current level
		//
		menuItem -label (uiRes("m_SubdivSurfacesMenu.kEdits"))  -ecr true 
			-c "ShowAllEditedComponents"
			-annotation (uiRes("m_SubdivSurfacesMenu.kEditsAnnot")) 
			-image "subdivDisplayEditsOnly.png"
			-echoCommand true
			subdivShowEditsCurrentLevelItem;
		setParent -m ..;
	}
}

