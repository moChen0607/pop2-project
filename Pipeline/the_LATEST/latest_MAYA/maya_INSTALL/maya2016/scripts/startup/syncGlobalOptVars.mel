// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date: Jan 2000
//
//  Description:
//      This script updates optionVar prefs before writing to disk.
//		This script will be called in batch mode. 
// 

global proc syncGlobalOptVars() 
{
	global string $gCommandLine;

	// Workspace
	string $curWS = `workspace -fn`;
	if ("" != $curWS) {
		optionVar -sv "lastLocalWS" $curWS;
	}

	// Command Line
	int $fieldDimensions[] = `paneLayout -q -ps $gCommandLine`;
	optionVar
		-iv commandLineInputFieldWidth $fieldDimensions[0]
		-iv commandLineNumHistoryLines `commandLine -q -numberOfHistoryLines $gCommandLine`;

	//	Hotbox
	optionVar
		-sv hotBoxDisplayStyle `hotBox -q -displayStyle`
		-iv hotBoxTransparencyLevel `hotBox -q -tr`;

	optionVar
		-intValue isHotBoxShowAll		 		 `hotBox -q -a`
		-intValue isHotBoxAnimationRowVisible    `hotBox -q -at`
		-intValue isHotBoxPolygonsRowVisible     `hotBox -q -plt`
		-intValue isHotBoxSurfacesRowVisible     `hotBox -q -st`
		-intValue isHotBoxDynamicsRowVisible     `hotBox -q -dt`
		-intValue isHotBoxRenderingRowVisible    `hotBox -q -rt`
		-intValue isHotBoxClothRowVisible		 `hotBox -q -clt`
		-intValue isHotBoxLiveRowVisible		 `hotBox -q -lt`
		-intValue isHotBoxCommonRowVisible       `hotBox -q -ct`
		-intValue isHotBoxPaneSpecificRowVisible `hotBox -q -pt`
		-intValue isHotBoxRmbPopupsOn            `hotBox -q -rmb`
		-intValue showCustomMenuSetsMenusInHotBox `hotBox -q -customMenuSetsToggleMenus`;

	//  MEL
	optionVar 
		-iv stackTraceIsOn `stackTrace -q -state`
		-iv showLineNumbersIsOn `commandEcho -q -lineNumbers`
		-iv melDuplicateVariableWarnings `melOptions -q -dvw`;

	// Display
	global int $gRefreshMode;
	optionVar -iv refreshMode $gRefreshMode;

	// Display Layers
	optionVar 
		-iv currentDisplayLayerActive `editDisplayLayerGlobals -q -uc`;
		
	// Shelves
	global string $gShelfTopLevel;
	if (`optionVar -q isShelfSave`) {
		if (`tabLayout -exists $gShelfTopLevel`) {
			saveAllShelves $gShelfTopLevel;		
		}
	}

	//Symmetric Modelling Settings
	optionVar -iv symmetricModellingOption `symmetricModelling -q -symmetry`;	
	optionVar -sv symmetricModellingSpaceOption `symmetricModelling -q -about`;
	optionVar -sv symmetricModellingAxisOption `symmetricModelling -q -axis`;	
	optionVar -fv symmetricModellingToleranceValue `symmetricModelling -q -tolerance`;
	optionVar -iv symmetricModellingSeamOption `symmetricModelling -q -preserveSeam`;
	optionVar -sv symmetricModellingSeamFalloffCurve `symmetricModelling -q -seamFalloffCurve`;
	optionVar -fv symmetricModellingSeamTolerance `symmetricModelling -q -seamTolerance`;
	optionVar -iv symmetricModellingAllowPartial `symmetricModelling -q -allowPartial`;

    // ADSK_CLR_MGT_BEGIN
    colorManagementFileRules -save;
    // ADSK_CLR_MGT_END

	optionVar -iv trsManipsPreserveUvs `manipMoveContext -q -preserveUV Move`;
	optionVar -iv trsManipsPinPivot `manipMoveContext -q -pinPivot Move`;
	optionVar -sv trsManipsXformConstraint `manipMoveContext -q -xformConstraint Move`;
	optionVar -iv trsManipsSnapPivotPos `manipMoveContext -q -snapPivotPos Move`;
	optionVar -iv trsManipsSnapPivotOri `manipMoveContext -q -snapPivotOri Move`;
	optionVar -iv trsManipsPreserveChildPosition `manipMoveContext -q -preserveChildPosition Move`;
	optionVar -iv trsManipsTweakMode `manipMoveContext -q -tweakMode Move`;

	int $manipOpt[] = `manipOptions -q -showExtrudeSliders`;
	optionVar -iv ShowExtrudeAttributeViewportSliders $manipOpt[0];

	optionVar -iv TrackSelectionOrder `selectPref -q -trackSelectionOrder`;

	setMeshSculptToolOptVars( "sculptMeshCacheContext", true );
	setUVSculptToolOptVars( "texSculptCacheContextObj", true );

	// Hotkey Set
	optionVar -sv currentHotkeySet `hotkeySet -q -current`;
}
