// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  11 June 2014
//
//  Description:
//      This implements the "Visualize" menu on the Animation Menu Set.
//



//  Procedure Name:
//		AniKeyMenu
//
//  Description:
//      Create the ANIMATION->Visualize menu
//
//  Input Arguments:
//      The parent control for the menu.
//
//  Return Value:
//      None.
//
global proc AniVisualizeMenu ( string $parent ) {
	setParent -menu $parent;

	if( `menu -q -ni $parent` != 0 ) {
		//
		//	Menu is built already - just return
		//
		return;
	}
	
	// Editors
	menuItem -divider true -dividerLabel (uiRes("m_AniVisualizeMenu.kTimeEditors"));
	
	$cmd = "CreateMotionTrail" ;
	menuItem -label (uiRes("m_AniVisualizeMenu.kCreateEditableMotionTrail")) 
		-command $cmd
		-annotation (getRunTimeCommandAnnotation($cmd))
		-image "motionTrail.png" 
		-dragMenuCommand("performMotionTrail 2")
		createMotionTrailItem;
		$cmd = "CreateMotionTrailOptions";
		menuItem -optionBox true
			-command $cmd
			-annotation (getRunTimeCommandAnnotation($cmd))
			-image "motionTrail.png" 		
			createMotionTrailOptionItem;
	
	menuItem -label (uiRes("m_AniVisualizeMenu.kCreateTurntable"))  
		-image "animTurntable.png"
		-annotation (getRunTimeCommandAnnotation("AnimationTurntable"))
		-command "AnimationTurntable"
		animTurntableItem;
		menuItem -optionBox true 
				-annotation (getRunTimeCommandAnnotation("AnimationTurntableOptions"))
				-command "AnimationTurntableOptions" animTurntableDialogItem;

	// Ghost
	menuItem -divider true -dividerLabel (uiRes("m_AniVisualizeMenu.kTimeGhost"));

	$cmd = "CreateGhost";
	menuItem -ltVersion "2016"
		-label (uiRes("m_AniVisualizeMenu.kGhostSelected")) 
		-command $cmd
		-annotation (getRunTimeCommandAnnotation($cmd))
		-image "ghost.png"
		-dragMenuCommand("performGhost 2")
		createGhostItem;
	$cmd = "CreateGhostOptions";
	menuItem -optionBox true
		-command $cmd
		-annotation (getRunTimeCommandAnnotation($cmd))
		-image "ghost.png" 		
		createGhostOptionItem;

	$cmd = "DoUnghost";
	menuItem -ltVersion "2016"
		 -label (uiRes("m_AniVisualizeMenu.kUnghostSelected")) 
		-command $cmd
		-annotation (getRunTimeCommandAnnotation($cmd))
		-image "ghostOff.png"
		-dragMenuCommand("performUnghost 2")
		UnghostItem;
	$cmd = "DoUnghostOptions";
	menuItem -optionBox true
		-command $cmd
		-annotation (getRunTimeCommandAnnotation($cmd))
		-image "ghostOff.png" 		
		unghostOptionItem;

	menuItem -ltVersion "2016"
		 -label (uiRes("m_AniVisualizeMenu.kGhostAll")) 
		-annotation (uiRes("m_AniVisualizeMenu.kGhostAllAnnot")) 
		-image "ghostOff.png" 		
		-command "unGhostAll"
		unghostAllItem;

	// Snapshot
	menuItem -divider true -dividerLabel (uiRes("m_AniVisualizeMenu.kTimeSnapshot"));
	
	$cmd = "AnimationSnapshot";
	menuItem -label (uiRes("m_AniVisualizeMenu.kCreateAnimationSnapshot")) 
		-image "animateSnapshot.png"
		-command $cmd
		-annotation (getRunTimeCommandAnnotation($cmd))
		-dragMenuCommand "performSnapshot 2"
		snapshotItem;
		$cmd = "AnimationSnapshotOptions";
		menuItem -optionBox true
			-image "animateSnapshot.png"
			-command $cmd
			-annotation (getRunTimeCommandAnnotation($cmd))
			snapshotDialogItem;

	menuItem -label (uiRes("m_AniVisualizeMenu.kUpdateSnapshot")) 
		-image "updateMotionTrail.png"
		-annotation (uiRes("m_AniVisualizeMenu.kUpdateSnapshotAnnot")) 
		-command "updateMotionTrail" 
		updateMotionTrailItem;

	$cmd = "AnimationSweep";
	menuItem -label (uiRes("m_AniVisualizeMenu.kCreateAnimatedSweep")) 
		-image "animateSweep.png"
		-command $cmd
		-annotation (getRunTimeCommandAnnotation($cmd))
		-dragMenuCommand "performAnimSweep 2"
		animsweepItem;
		$cmd = "AnimationSweepOptions";
		menuItem -optionBox true
			-image "animateSweep.png"
			-command $cmd
			-annotation (getRunTimeCommandAnnotation($cmd))
			animsweepDialogItem;
}