// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date: May 28 1999
//
//  Description:
//		This initializes the default set of nodes that will not appear in the 
//		UI (excluding 3D views).  These settings can be overridden by setting 
//		the minorNodeTypesDisplay optionVar.
//

{
	//
	//  Set default values if there are no existing preferences.
	//
	if (!`optionVar -exists "minorNodeTypesDisplay"`) {
		optionVar -iv "minorNodeTypesDisplay" false;
	}

	if (!`optionVar -exists "minorNodeTypes"`) {
		optionVar 
			-iva "minorNodeTypes" 0x534c4f50        // selectionListOperator
			-iva "minorNodeTypes" 0x4f464c54        // objectFilter
			-iva "minorNodeTypes" 0x4f52464c        // objectRenderFilter
			-iva "minorNodeTypes" 0x4f4e464c        // objectNameFilter
			-iva "minorNodeTypes" 0x4f4d464c        // objectMultiFilter
			-iva "minorNodeTypes" 0x4f464154        // objectAttrFilter
			-iva "minorNodeTypes" 0x4f54464c        // objectTypeFilter
			-iva "minorNodeTypes" 0x4f53464c        // objectScriptFilter
			-iva "minorNodeTypes" 0x47525050        // groupParts
			-iva "minorNodeTypes" 0x444d5449        // materialInfo
			-iva "minorNodeTypes" 0x4c4c5354        // lightList
			-iva "minorNodeTypes" 0x4e535348        // stitchAsNurbsShell
			-iva "minorNodeTypes" 0x4e455348        // explodeNurbsShell
			-iva "minorNodeTypes" 0x4d554c4c        // multiListerLight
			-iva "minorNodeTypes" 0x4445464c        // defaultLightList
			-iva "minorNodeTypes" 0x50505354        // postProcessList
			-iva "minorNodeTypes" 0x5244534c        // defaultShaderList
			-iva "minorNodeTypes" 0x4452554c        // defaultRenderUtilityList
			-iva "minorNodeTypes" 0x5244474c        // renderGlobalsList
			-iva "minorNodeTypes" 0x52474c42        // renderGlobals
			-iva "minorNodeTypes" 0x52515541        // renderQuality
			-iva "minorNodeTypes" 0x524c544e        // resolution
			-iva "minorNodeTypes" 0x44554e54        // unitConversion
			-iva "minorNodeTypes" 0x47504944        // groupId
			-iva "minorNodeTypes" 0x4859504c        // hyperLayout
			-iva "minorNodeTypes" 0x48595052        // hyperGraphInfo
			-iva "minorNodeTypes" 0x44485056        // hyperView
			-iva "minorNodeTypes" 0x4e474549        // nodeGraphEditorInfo
			-iva "minorNodeTypes" 0x4e474542        // nodeGraphEditorBookmarks
			-iva "minorNodeTypes" 0x4e454249        // nodeGraphEditorBookmarkInfo
			-iva "minorNodeTypes" 0x524e4c4d        // renderLayerManager
			-iva "minorNodeTypes" 0x44524e4c        // defaultRenderingList
			-iva "minorNodeTypes" 0x5244544C        // defaultTextureList
			-iva "minorNodeTypes" 0x44524E4C        // defaultRenderingList
			// ADSK_CLR_MGT_BEGIN
			-iva "minorNodeTypes" 0x434D4742        // defaultColorMgtGlobals      
			// ADSK_CLR_MGT_END
			;
	}

	int $display = `optionVar -q "minorNodeTypesDisplay"`;
	if ($display < 0 || $display > 1) {
		optionVar -iv "minorNodeTypesDisplay" false;
		$display = false;
	}

	//
	//  Apply the settings to the DG node types.
	//
	int $minorNodeTags[] = `optionVar -q "minorNodeTypes"`;
	int $nodeTag;

	for ($nodeTag in $minorNodeTags) {
		catch( `setNodeTypeFlag -display $display $nodeTag` );
	}
}

