// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  Apr 13 2007
// 
//  Description:
//		String Catalog entries for nice names of the "dynamic", or user-defined, 
//		attributes added on-the-fly during normal Maya use.  Attrs not listed 
//		here will not display with localized Nice Names.
//		
//		NOTE: Removing an entry from this list could have
//		file format implications.  For instance, if the
//		functionality that added a given attribute is
//		removed from Maya (meaning Maya no longer ever
//		creates that specific dynamic attr anymore) old
//		files written from versions of Maya will still depend
//		on the catalog entry here in order to display localized
//		nice names properly.
//		
//		Usage: setCustomAttrNiceNameResource( stringSet, longName, uiName );
//		
// 		
global proc initAddAttr() {
    string $t;

    // sculpt node
    //
    setCustomAttrNiceNameResource( "sculpt", "enableAdvanced", (uiRes("m_initAddAttr.kEnableAdvanced")) );
    setCustomAttrNiceNameResource( "sculpt", "texture", (uiRes("m_initAddAttr.kTexture")) );
    setCustomAttrNiceNameResource( "sculpt", "textureR", (uiRes("m_initAddAttr.kTextureR")) );
    setCustomAttrNiceNameResource( "sculpt", "textureG", (uiRes("m_initAddAttr.kTextureG")) );
    setCustomAttrNiceNameResource( "sculpt", "textureB", (uiRes("m_initAddAttr.kTextureB")) );
    setCustomAttrNiceNameResource( "sculpt", "textureMultiplier", (uiRes("m_initAddAttr.kTextureMultiplier")) );
    setCustomAttrNiceNameResource( "sculpt", "nonUniform", (uiRes("m_initAddAttr.kNonUniform")) );
    setCustomAttrNiceNameResource( "sculpt", "visSphere", (uiRes("m_initAddAttr.kVisSphere")) );

    // dagContainer node
    setCustomAttrNiceNameResource( "dagContainer", "attributeAliasList", (uiRes("m_initAddAttr.kAttributeAliasList")) );

    // dagPose node
    //
    setCustomAttrNiceNameResource( "dagPose", "currentRestPose", (uiRes("m_initAddAttr.kCurrentRestPose")) );
    setCustomAttrNiceNameResource( "dagPose", "hikPose", (uiRes("m_initAddAttr.kHikPose")) );

    // IKFK blending attr on other nodes
    //
    for( $t in { "transform", "joint" } ) {
        setCustomAttrNiceNameResource( $t, "ikBlend", (uiRes("m_initAddAttr.kIKBlend")) );
    }

    // makeRoll
    //
    setCustomAttrNiceNameResource( "transform", "startRotX", (uiRes("m_initAddAttr.kTransformStartRotX")) );
    setCustomAttrNiceNameResource( "transform", "startRotY", (uiRes("m_initAddAttr.kTransformStartRotY")) );
    setCustomAttrNiceNameResource( "transform", "startRotZ", (uiRes("m_initAddAttr.kTransformStartRotZ")) );
    setCustomAttrNiceNameResource( "transform", "lastX", (uiRes("m_initAddAttr.kLastX")) );
    setCustomAttrNiceNameResource( "transform", "lastZ", (uiRes("m_initAddAttr.kLastZ")) );
    setCustomAttrNiceNameResource( "transform", "dummy", (uiRes("m_initAddAttr.kDummy")) );

    // Non-Linear Deformers from doWrapArgList.mel
    //
    setCustomAttrNiceNameResource( "transform", "dropoff", (uiRes("m_initAddAttr.kDropoff")) );
    setCustomAttrNiceNameResource( "transform", "smoothness", (uiRes("m_initAddAttr.kSmoothness")) );
    setCustomAttrNiceNameResource( "transform", "inflType", (uiRes("m_initAddAttr.kInfluenceType")) );
    setCustomAttrNiceNameResource( "transform", "wrapSamples", (uiRes("m_initAddAttr.kWrapSamples")) );

    // These particle and nParticle attrs come from getAttrListDAA()
    //
    for( $t in { "particle", "nParticle" } ) {
		setCustomAttrNiceNameResource( $t, "angularVelocityPP", (uiRes("m_initAddAttr.kAngularVelocityPP")) );
		setCustomAttrNiceNameResource( $t, "angularVelocityPP0", (uiRes("m_initAddAttr.kAngularVelocityPP0")) );
        setCustomAttrNiceNameResource( $t, "attributeName", (uiRes("m_initAddAttr.kAttributeName")) );
        setCustomAttrNiceNameResource( $t, "betterIllumination", (uiRes("m_initAddAttr.kBetterIllumination")) );
        setCustomAttrNiceNameResource( $t, "birthPosition", (uiRes("m_initAddAttr.kBirthPosition")) );
        setCustomAttrNiceNameResource( $t, "birthWorldPosition", (uiRes("m_initAddAttr.kBirthWorldPosition")) );
        setCustomAttrNiceNameResource( $t, "bounceScalePP", (uiRes("m_initAddAttr.kNparticleBounceScalePP")) );
        setCustomAttrNiceNameResource( $t, "collideStrengthPP", (uiRes("m_initAddAttr.kNparticleCollideStrengthPP")) );
        setCustomAttrNiceNameResource( $t, "collisionActiveGeometryIndex", (uiRes("m_initAddAttr.kCollisionActiveGeometryIndex")) );
        setCustomAttrNiceNameResource( $t, "collisionComponentId", (uiRes("m_initAddAttr.kCollisionComponentID")) );
        setCustomAttrNiceNameResource( $t, "collisionForce", (uiRes("m_initAddAttr.kCollisionForce")) );
        setCustomAttrNiceNameResource( $t, "collisionGeometryIndex", (uiRes("m_initAddAttr.kCollisionGeometryIndex")) );
        setCustomAttrNiceNameResource( $t, "collisionIncomingVelocity", (uiRes("m_initAddAttr.kCollisionIncomingVelocity")) );
        setCustomAttrNiceNameResource( $t, "collisionNormal", (uiRes("m_initAddAttr.kCollisionNormal")) );
        setCustomAttrNiceNameResource( $t, "collisionOutgoingVelocity", (uiRes("m_initAddAttr.kCollisionOutgoingVelocity")) );
        setCustomAttrNiceNameResource( $t, "collisionPosition", (uiRes("m_initAddAttr.kCollisionPosition")) );
        setCustomAttrNiceNameResource( $t, "collisionSelfComponentId", (uiRes("m_initAddAttr.kCollisionSelfComponentID")) );
        setCustomAttrNiceNameResource( $t, "collisionTime", (uiRes("m_initAddAttr.kCollisionTime")) );
        setCustomAttrNiceNameResource( $t, "collisionU", (uiRes("m_initAddAttr.kCollisionU")) );
        setCustomAttrNiceNameResource( $t, "collisionV", (uiRes("m_initAddAttr.kCollisionV")) );
        setCustomAttrNiceNameResource( $t, "collisionWorldForce", (uiRes("m_initAddAttr.kCollisionWorldForce")) );
        setCustomAttrNiceNameResource( $t, "collisionWorldIncomingVelocity", (uiRes("m_initAddAttr.kCollisionWorldIncomingVelocity")) );
        setCustomAttrNiceNameResource( $t, "collisionWorldNormal", (uiRes("m_initAddAttr.kCollisionWorldNormal")) );
        setCustomAttrNiceNameResource( $t, "collisionWorldOutgoingVelocity", (uiRes("m_initAddAttr.kCollisionWorldOutgoingVelocity")) );
        setCustomAttrNiceNameResource( $t, "collisionWorldPosition", (uiRes("m_initAddAttr.kCollisionWorldPosition")) );
        setCustomAttrNiceNameResource( $t, "colorAccum", (uiRes("m_initAddAttr.kColorAccum")) );
        setCustomAttrNiceNameResource( $t, "frictionScalePP", (uiRes("m_initAddAttr.kNparticleFrictionScalePP")) );
        setCustomAttrNiceNameResource( $t, "goalOffset", (uiRes("m_initAddAttr.kGoalOffset")) );
        setCustomAttrNiceNameResource( $t, "goalU", (uiRes("m_initAddAttr.kGoalU")) );
        setCustomAttrNiceNameResource( $t, "goalV", (uiRes("m_initAddAttr.kGoalV")) );
        setCustomAttrNiceNameResource( $t, "goalWeight#PP", (uiRes("m_initAddAttr.kGoalWeightNumPP")) );
        setCustomAttrNiceNameResource( $t, "incandescence", (uiRes("m_initAddAttr.kIncandescence")) );
        setCustomAttrNiceNameResource( $t, "incandescencePP", (uiRes("m_initAddAttr.kIncandescencePP")) );
        setCustomAttrNiceNameResource( $t, "lineWidth", (uiRes("m_initAddAttr.kLineWidth")) );
        setCustomAttrNiceNameResource( $t, "multiCount", (uiRes("m_initAddAttr.kMultiCount")) );
        setCustomAttrNiceNameResource( $t, "multiRadius", (uiRes("m_initAddAttr.kMultiRadius")) );
        setCustomAttrNiceNameResource( $t, "normalDir", (uiRes("m_initAddAttr.kNormalDir")) );
        setCustomAttrNiceNameResource( $t, "parentId", (uiRes("m_initAddAttr.kParentID")) );
        setCustomAttrNiceNameResource( $t, "parentU", (uiRes("m_initAddAttr.kParentU")) );
        setCustomAttrNiceNameResource( $t, "parentV", (uiRes("m_initAddAttr.kParentV")) );
        setCustomAttrNiceNameResource( $t, "pointFieldScalePP", (uiRes("m_initAddAttr.kNparticlePointFieldScalePP")) );
        setCustomAttrNiceNameResource( $t, "pointSize", (uiRes("m_initAddAttr.kPointSize")) );
        setCustomAttrNiceNameResource( $t, "radius", (uiRes("m_initAddAttr.kRadius")) );
        setCustomAttrNiceNameResource( $t, "radius#", (uiRes("m_initAddAttr.kRadiusNum")) );
        setCustomAttrNiceNameResource( $t, "radiusPP", (uiRes("m_initAddAttr.kRadiusPP")) );
        setCustomAttrNiceNameResource( $t, "restDensityPP", (uiRes("m_initAddAttr.kNparticleRestDensityPP")) );
        setCustomAttrNiceNameResource( $t, "rotationPP", (uiRes("m_initAddAttr.kNparticleRotationPP")) );
        setCustomAttrNiceNameResource( $t, "rotationPP0", (uiRes("m_initAddAttr.kNparticleRotationPP0")) );
        setCustomAttrNiceNameResource( $t, "rotationDampPP", (uiRes("m_initAddAttr.kNparticleRotationDampPP")) );
        setCustomAttrNiceNameResource( $t, "rotationFrictionPP", (uiRes("m_initAddAttr.kNparticleRotationFrictionPP")) );
        setCustomAttrNiceNameResource( $t, "selectedOnly", (uiRes("m_initAddAttr.kSelectedOnly")) );
        setCustomAttrNiceNameResource( $t, "spriteNum", (uiRes("m_initAddAttr.kSpriteNum")) );
        setCustomAttrNiceNameResource( $t, "spriteNumPP", (uiRes("m_initAddAttr.kSpriteNumPP")) );
	setCustomAttrNiceNameResource( $t, "spriteNumPP0", (uiRes("m_initAddAttr.kSpriteNumPP0")) );
        setCustomAttrNiceNameResource( $t, "spriteNumRamp", (uiRes("m_initAddAttr.kSpriteNumRamp")) );
        setCustomAttrNiceNameResource( $t, "spriteNumRamp0", (uiRes("m_initAddAttr.kSpriteNumRamp0")) );
        setCustomAttrNiceNameResource( $t, "spriteNumRampU", (uiRes("m_initAddAttr.kSpriteNumRampU")) );
        setCustomAttrNiceNameResource( $t, "spriteNumRampU0", (uiRes("m_initAddAttr.kSpriteNumRampU0")) );
        setCustomAttrNiceNameResource( $t, "spriteScaleX", (uiRes("m_initAddAttr.kSpriteScaleX")) );
        setCustomAttrNiceNameResource( $t, "spriteScaleXPP", (uiRes("m_initAddAttr.kSpriteScaleXPP")) );
        setCustomAttrNiceNameResource( $t, "spriteScaleY", (uiRes("m_initAddAttr.kSpriteScaleY")) );
        setCustomAttrNiceNameResource( $t, "spriteScaleYPP", (uiRes("m_initAddAttr.kSpriteScaleYPP")) );
        setCustomAttrNiceNameResource( $t, "spriteTwist", (uiRes("m_initAddAttr.kSpriteTwist")) );
        setCustomAttrNiceNameResource( $t, "spriteTwistPP", (uiRes("m_initAddAttr.kSpriteTwistPP")) );

	setCustomAttrNiceNameResource( $t, "SpriteAnimation", (uiRes("m_initAddAttr.kSpriteAnimation")) );
	setCustomAttrEnumResource( $t, "SpriteAnimation", 0, (uiRes("m_initAddAttr.kOff")) );
	setCustomAttrEnumResource( $t, "SpriteAnimation", 1, (uiRes("m_initAddAttr.kOn")) );
	setCustomAttrNiceNameResource( $t, "SpriteCycleLength", (uiRes("m_initAddAttr.kSpriteCycleLength")) );

	setCustomAttrNiceNameResource( $t, "SpriteCyclePattern", (uiRes("m_initAddAttr.kSpriteCyclePattern")) );
	setCustomAttrEnumResource( $t, "SpriteCyclePattern", 0, (uiRes("m_initAddAttr.kLinearUp")) );
 	setCustomAttrEnumResource( $t, "SpriteCyclePattern", 1, (uiRes("m_initAddAttr.kEaseUp")) );
	setCustomAttrEnumResource( $t, "SpriteCyclePattern", 2, (uiRes("m_initAddAttr.kLinearUpDown")) );
	setCustomAttrEnumResource( $t, "SpriteCyclePattern", 3, (uiRes("m_initAddAttr.kEaseUpDown")) );
	setCustomAttrEnumResource( $t, "SpriteCyclePattern", 4, (uiRes("m_initAddAttr.kSpritePatternCustom")) );
	setCustomAttrEnumResource( $t, "SpriteCyclePattern", 5, (uiRes("m_initAddAttr.kSpritePatternRamp")) );
	setCustomAttrNiceNameResource( $t, "SpriteInvertCycle", (uiRes("m_initAddAttr.kSpriteInvertCycle")) );

	setCustomAttrNiceNameResource( $t, "SpriteStartOption", (uiRes("m_initAddAttr.kSpriteStartOption")) );
	setCustomAttrEnumResource( $t, "SpriteStartOption", 0, (uiRes("m_initAddAttr.kFirst")) );
	setCustomAttrEnumResource( $t, "SpriteStartOption", 1, (uiRes("m_initAddAttr.kParticleID")) );
	setCustomAttrEnumResource( $t, "SpriteStartOption", 2, (uiRes("m_initAddAttr.kRandom")) );
	setCustomAttrEnumResource( $t, "SpriteStartOption", 3, (uiRes("m_initAddAttr.kSpriteOptionCustom")) );
	setCustomAttrEnumResource( $t, "SpriteStartOption", 4, (uiRes("m_initAddAttr.kSpriteOptionRamp")) );

        setCustomAttrNiceNameResource( $t, "startIndexPP", (uiRes("m_initAddAttr.kStartIndexPP")) );
        setCustomAttrNiceNameResource( $t, "startIndexPP0", (uiRes("m_initAddAttr.kStartIndexPP0")) );
        setCustomAttrNiceNameResource( $t, "stickinessScalePP", (uiRes("m_initAddAttr.kNparticleStickinessScalePP")) );
        setCustomAttrNiceNameResource( $t, "surfaceShading", (uiRes("m_initAddAttr.kSurfaceShading")) );
        setCustomAttrNiceNameResource( $t, "surfaceTensionScalePP", (uiRes("m_initAddAttr.kNparticleSurfaceTensionScalePP")) );
        setCustomAttrNiceNameResource( $t, "tailFade", (uiRes("m_initAddAttr.kTailFade")) );
        setCustomAttrNiceNameResource( $t, "tailSize", (uiRes("m_initAddAttr.kTailSize")) );
        setCustomAttrNiceNameResource( $t, "threshold", (uiRes("m_initAddAttr.kThreshold")) );
        setCustomAttrNiceNameResource( $t, "traceDepthPP", (uiRes("m_initAddAttr.kTraceDepthPP")) );
        setCustomAttrNiceNameResource( $t, "useLighting", (uiRes("m_initAddAttr.kUseLighting")) );
        setCustomAttrNiceNameResource( $t, "userScalar#PP", (uiRes("m_initAddAttr.kUserScalarNumPP")) );
        setCustomAttrNiceNameResource( $t, "userVector#PP", (uiRes("m_initAddAttr.kUserVectorNumPP")) );
        setCustomAttrNiceNameResource( $t, "viscosityScalePP", (uiRes("m_initAddAttr.kNparticleViscosityScalePP")) );
        setCustomAttrNiceNameResource( $t, "flatShaded", (uiRes("m_initAddAttr.kFlatShaded")) );
    }

    // Dyn Attrs common to particle and nParticle (but not part of getAttrListDAA) go here...
    //
    for( $t in { "particle", "nParticle" } ) {
		setCustomAttrNiceNameResource( $t, "bounceScaleUPP", (uiRes("m_initAddAttr.kBounceScaleUPP")) );
		setCustomAttrNiceNameResource( $t, "bounceScaleVPP", (uiRes("m_initAddAttr.kBounceScaleVPP")) );
		setCustomAttrNiceNameResource( $t, "collideStrengthUPP", (uiRes("m_initAddAttr.kCollideStrengthUPP")) );
		setCustomAttrNiceNameResource( $t, "collideStrengthVPP", (uiRes("m_initAddAttr.kCollideStrengthVPP")) );
		setCustomAttrNiceNameResource( $t, "frictionScaleUPP", (uiRes("m_initAddAttr.kFrictionScaleUPP")) );
		setCustomAttrNiceNameResource( $t, "frictionScaleVPP", (uiRes("m_initAddAttr.kFrictionScaleVPP")) );
        setCustomAttrNiceNameResource( $t, "lifespan", (uiRes("m_initAddAttr.kLifespan")) );
        setCustomAttrNiceNameResource( $t, "lifespanPP", (uiRes("m_initAddAttr.kLifespanPP")) );
        setCustomAttrNiceNameResource( $t, "lifespanPP#", (uiRes("m_initAddAttr.kLifespanPPNum")) );
        setCustomAttrNiceNameResource( $t, "massU", (uiRes("m_initAddAttr.kMassU")) );
        setCustomAttrNiceNameResource( $t, "massV", (uiRes("m_initAddAttr.kMassV")) );
        setCustomAttrNiceNameResource( $t, "opacity", (uiRes("m_initAddAttr.kOpacity")) );
        setCustomAttrNiceNameResource( $t, "opacityPP", (uiRes("m_initAddAttr.kOpacityPP")) );
        setCustomAttrNiceNameResource( $t, "opacityPP0", (uiRes("m_initAddAttr.kOpacityPP0")) );
        setCustomAttrNiceNameResource( $t, "opacityUPP", (uiRes("m_initAddAttr.kOpacityUPP")) );
        setCustomAttrNiceNameResource( $t, "opacityVPP", (uiRes("m_initAddAttr.kOpacityVPP")) );
        setCustomAttrNiceNameResource( $t, "radiusUPP", (uiRes("m_initAddAttr.kNparticleRadiusUPP")) );
        setCustomAttrNiceNameResource( $t, "radiusVPP", (uiRes("m_initAddAttr.kNparticleRadiusVPP")) );
        setCustomAttrNiceNameResource( $t, "rampAccelerationU", (uiRes("m_initAddAttr.kRampAccelerationU")) );
        setCustomAttrNiceNameResource( $t, "rampAccelerationV", (uiRes("m_initAddAttr.kRampAccelerationV")) );
        setCustomAttrNiceNameResource( $t, "rampPositionU", (uiRes("m_initAddAttr.kRampPositionU")) );
        setCustomAttrNiceNameResource( $t, "rampPositionV", (uiRes("m_initAddAttr.kRampPositionV")) );
        setCustomAttrNiceNameResource( $t, "rampVelocityU", (uiRes("m_initAddAttr.kRampVelocityU")) );
        setCustomAttrNiceNameResource( $t, "rampVelocityV", (uiRes("m_initAddAttr.kRampVelocityV")) );
        setCustomAttrNiceNameResource( $t, "rgbPP", (uiRes("m_initAddAttr.kNparticleRGBPP")) );
        setCustomAttrNiceNameResource( $t, "rgbPP0", (uiRes("m_initAddAttr.kRGBPP0")) );
        setCustomAttrNiceNameResource( $t, "rgbUPP", (uiRes("m_initAddAttr.kNparticleRGBUPP")) );
        setCustomAttrNiceNameResource( $t, "rgbVPP", (uiRes("m_initAddAttr.kNparticleRGBVPP")) );
		setCustomAttrNiceNameResource( $t, "stickinessScaleUPP", (uiRes("m_initAddAttr.kStickinessScaleUPP")) );
		setCustomAttrNiceNameResource( $t, "stickinessScaleVPP", (uiRes("m_initAddAttr.kStickinessScaleVPP")) );
        setCustomAttrNiceNameResource( $t, "worldVelocityInObjectSpaceU", (uiRes("m_initAddAttr.kWorldVelocityinObjectSpaceU")) );
        setCustomAttrNiceNameResource( $t, "worldVelocityInObjectSpaceV", (uiRes("m_initAddAttr.kWorldVelocityinObjectSpaceV")) );
    }

    // particles.  These attrs come mostly from the functionality in the Effects menu.
    //
    setCustomAttrNiceNameResource( "particle", "__ApplySprite__", (uiRes("m_initAddAttr.kApplySprite")) );
    setCustomAttrNiceNameResource( "particle", "__spriteHelpNode__", (uiRes("m_initAddAttr.kSpriteNodeHelp")) );
    setCustomAttrNiceNameResource( "particle", "_fireworksRocket", (uiRes("m_initAddAttr.kFireworksRocket")) );
    setCustomAttrNiceNameResource( "particle", "FireworksRocketsEmitterRatePP", (uiRes("m_initAddAttr.kFireworksRocketsEmitterRatePP")) );
    setCustomAttrNiceNameResource( "particle", "FireworksRocketsEmitterRatePP0", (uiRes("m_initAddAttr.kFireworksRocketsEmitterRatePP0")) );
    setCustomAttrNiceNameResource( "particle", "FireworksRocketsEmitterRemainderPP", (uiRes("m_initAddAttr.kFireworksRocketsEmitterRemainderPP")) );
    setCustomAttrNiceNameResource( "particle", "FireworksRocketsEmitterRemainderPP0", (uiRes("m_initAddAttr.kFireworksRocketsEmitterRemainderPP0")) );
    setCustomAttrNiceNameResource( "particle", "adjustedAgeNormalized#", (uiRes("m_initAddAttr.kAdjustedAgeNormalizedNum")) );
    setCustomAttrNiceNameResource( "particle", "ageNormalized", (uiRes("m_initAddAttr.kAgeNormalized")) );
    setCustomAttrNiceNameResource( "particle", "ageNormalized0", (uiRes("m_initAddAttr.kAgeNormalized0")) );
    setCustomAttrNiceNameResource( "particle", "burstColorIndex", (uiRes("m_initAddAttr.kBurstColorIndex")) );
    setCustomAttrNiceNameResource( "particle", "burstColorIndex0", (uiRes("m_initAddAttr.kBurstColorIndex0")) );
    setCustomAttrNiceNameResource( "particle", "burstFramePP", (uiRes("m_initAddAttr.kBurstFramePP"))  );
    setCustomAttrNiceNameResource( "particle", "burstFramePP0", (uiRes("m_initAddAttr.kBurstFramePP0")) );
    setCustomAttrNiceNameResource( "particle", "burstPositionManipMessage", (uiRes("m_initAddAttr.kBurstPositionManipMessage")) );
    setCustomAttrNiceNameResource( "particle", "burstPositionPP", (uiRes("m_initAddAttr.kBurstPositionPP")) );
    setCustomAttrNiceNameResource( "particle", "burstPositionPP0", (uiRes("m_initAddAttr.kBurstPositionPP0")) );
    setCustomAttrNiceNameResource( "particle", "colorBlue", (uiRes("m_initAddAttr.kColorBlue")) );
    setCustomAttrNiceNameResource( "particle", "colorGreen", (uiRes("m_initAddAttr.kColorGreen")) );
    setCustomAttrNiceNameResource( "particle", "colorPaletteProc", (uiRes("m_initAddAttr.kColorPaletteProc")) );
    setCustomAttrNiceNameResource( "particle", "colorRed", (uiRes("m_initAddAttr.kColorRed")) );
    setCustomAttrNiceNameResource( "particle", "curveOffset", (uiRes("m_initAddAttr.kCurveOffset")) );
    setCustomAttrNiceNameResource( "particle", "curveOffset0", (uiRes("m_initAddAttr.kCurveOffset0")) );
    setCustomAttrNiceNameResource( "particle", "cycleEnabled", (uiRes("m_initAddAttr.kCycleEnabled")) );
    setCustomAttrNiceNameResource( "particle", "displayGeometry", (uiRes("m_initAddAttr.kDisplayParticleGeometry")) );
    setCustomAttrNiceNameResource( "particle", "effectStrength#", (uiRes("m_initAddAttr.kEffectStrengthNum")) );
    setCustomAttrNiceNameResource( "particle", "event", (uiRes("m_initAddAttr.kEvent")) );
    setCustomAttrNiceNameResource( "particle", "event#", (uiRes("m_initAddAttr.kEventNum")) ); 
    setCustomAttrNiceNameResource( "particle", "eventCountCache", (uiRes("m_initAddAttr.kEventCountCache")) );
    setCustomAttrNiceNameResource( "particle", "fireDensity", (uiRes("m_initAddAttr.kFireDensity")) );
    setCustomAttrNiceNameResource( "particle", "fireDirectionX", (uiRes("m_initAddAttr.kFireDirectionX")) );
    setCustomAttrNiceNameResource( "particle", "fireDirectionY", (uiRes("m_initAddAttr.kFireDirectionY")) );
    setCustomAttrNiceNameResource( "particle", "fireDirectionZ", (uiRes("m_initAddAttr.kFireDirectionZ")) );
    setCustomAttrNiceNameResource( "particle", "fireIntensity", (uiRes("m_initAddAttr.kFireIntensity")) );
    setCustomAttrNiceNameResource( "particle", "fireLifespan", (uiRes("m_initAddAttr.kFireLifespan")) );
    setCustomAttrNiceNameResource( "particle", "fireScale", (uiRes("m_initAddAttr.kFireScale")) );
    setCustomAttrNiceNameResource( "particle", "fireSpeed", (uiRes("m_initAddAttr.kFireSpeed")) );
    setCustomAttrNiceNameResource( "particle", "fireSpread", (uiRes("m_initAddAttr.kFireSpread")) );
    setCustomAttrNiceNameResource( "particle", "fireTurbulence", (uiRes("m_initAddAttr.kFireTurbulence")) );
    setCustomAttrNiceNameResource( "particle", "fireworksColors", (uiRes("m_initAddAttr.kFireworksColors")) );
    setCustomAttrNiceNameResource( "particle", "fireworksShaders", (uiRes("m_initAddAttr.kFireworksShaders")) );
    setCustomAttrNiceNameResource( "particle", "flameEndRadius", (uiRes("m_initAddAttr.kFlameEndRadius")) );
    setCustomAttrNiceNameResource( "particle", "flameStartRadius", (uiRes("m_initAddAttr.kFlameStartRadius")) );
    setCustomAttrNiceNameResource( "particle", "goalOffset0", (uiRes("m_initAddAttr.kGoalOffset0")) );
    setCustomAttrNiceNameResource( "particle", "goalPP", (uiRes("m_initAddAttr.kGoalPP")) );
    setCustomAttrNiceNameResource( "particle", "goalPPCache", (uiRes("m_initAddAttr.kGoalPPCache")) );
    setCustomAttrNiceNameResource( "particle", "goalPP0", (uiRes("m_initAddAttr.kGoalPP0")) );
    setCustomAttrNiceNameResource( "particle", "goalWorldNormal#PP", (uiRes("m_initAddAttr.kGoalWorldNormalNumPP")) );
    setCustomAttrNiceNameResource( "particle", "goalWorldPosition#PP", (uiRes("m_initAddAttr.kGoalWorldPositionNumPP")) );
    setCustomAttrNiceNameResource( "particle", "goalWorldTangentU#PP", (uiRes("m_initAddAttr.kGoalWorldTangentUNumPP")) );
    setCustomAttrNiceNameResource( "particle", "goalWorldTangentV#PP", (uiRes("m_initAddAttr.kGoalWorldTangentVNumPP")) );
    setCustomAttrNiceNameResource( "particle", "hasBurst", (uiRes("m_initAddAttr.kHasBurst")) );
    setCustomAttrNiceNameResource( "particle", "initialVelocity", (uiRes("m_initAddAttr.kInitialVelocity")) );
    setCustomAttrNiceNameResource( "particle", "launchFramePP", (uiRes("m_initAddAttr.kLaunchFramePP")) );
    setCustomAttrNiceNameResource( "particle", "launchFramePP0", (uiRes("m_initAddAttr.kLaunchFramePP0")) );
    setCustomAttrNiceNameResource( "particle", "launchPositionManipMessage", (uiRes("m_initAddAttr.kLaunchPositionManipMessage")) );
    setCustomAttrNiceNameResource( "particle", "launchPositionPP", (uiRes("m_initAddAttr.kLaunchPositionPP")) );
    setCustomAttrNiceNameResource( "particle", "launchPositionPP0", (uiRes("m_initAddAttr.kLaunchPositionPP0")) );
    setCustomAttrNiceNameResource( "particle", "launched", (uiRes("m_initAddAttr.kLaunched")) );
    setCustomAttrNiceNameResource( "particle", "localGravX", (uiRes("m_initAddAttr.kLocalGravX")) );
    setCustomAttrNiceNameResource( "particle", "localGravY", (uiRes("m_initAddAttr.kLocalGravY")) );
    setCustomAttrNiceNameResource( "particle", "localGravZ", (uiRes("m_initAddAttr.kLocalGravZ")) );
    setCustomAttrNiceNameResource( "particle", "manip_#_Position", (uiRes("m_initAddAttr.kManipNumPosition")) );
    setCustomAttrNiceNameResource( "particle", "maxBurstSpeed", (uiRes("m_initAddAttr.kMaxBurstSpeed"))  );
    setCustomAttrNiceNameResource( "particle", "maxDistance", (uiRes("m_initAddAttr.kMaxDistance")) );
    setCustomAttrNiceNameResource( "particle", "maxDistance0", (uiRes("m_initAddAttr.kMaxDistance0")) );
    setCustomAttrNiceNameResource( "particle", "maxSparksCount", (uiRes("m_initAddAttr.kMaxSparksCount"))  );
    setCustomAttrNiceNameResource( "particle", "maxTailSize", (uiRes("m_initAddAttr.kMaxTailSize")) );
    setCustomAttrNiceNameResource( "particle", "minSparksCount", (uiRes("m_initAddAttr.kMinSparksCount"))  );
    setCustomAttrNiceNameResource( "particle", "minTailSize", (uiRes("m_initAddAttr.kMinTailSize")) );
    setCustomAttrNiceNameResource( "particle", "parentU0", (uiRes("m_initAddAttr.kParentU0")) );
    setCustomAttrNiceNameResource( "particle", "parentV0", (uiRes("m_initAddAttr.kParentV0")) );
    setCustomAttrNiceNameResource( "particle", "radiusPP0", (uiRes("m_initAddAttr.kRadiusPP0")) );
    setCustomAttrNiceNameResource( "particle", "radiusPPCache", (uiRes("m_initAddAttr.kRadiusPPCache")) );
    setCustomAttrNiceNameResource( "particle", "rampValues", (uiRes("m_initAddAttr.kRampValues")) );
    setCustomAttrNiceNameResource( "particle", "rampValues0", (uiRes("m_initAddAttr.kRampValues0")) );
    setCustomAttrNiceNameResource( "particle", "randomIndex", (uiRes("m_initAddAttr.kRandomIndex")) );
    setCustomAttrNiceNameResource( "particle", "randomMotionSpeed", (uiRes("m_initAddAttr.kRandomMotionSpeed")) );
    setCustomAttrNiceNameResource( "particle", "randomPosition", (uiRes("m_initAddAttr.kRandomPosition")) );
    setCustomAttrNiceNameResource( "particle", "randomPosition0", (uiRes("m_initAddAttr.kRandomPosition0")) );
    setCustomAttrNiceNameResource( "particle", "rocketGravity", (uiRes("m_initAddAttr.kRocketGravity")) );
    setCustomAttrNiceNameResource( "particle", "rocketTrailColors", (uiRes("m_initAddAttr.kRocketTrailColors")) );
    setCustomAttrNiceNameResource( "particle", "rocketTrailShaders", (uiRes("m_initAddAttr.kRocketTrailShaders")) );
    setCustomAttrNiceNameResource( "particle", "rocketsMessage", (uiRes("m_initAddAttr.kRocketsMessage")) );
    setCustomAttrNiceNameResource( "particle", "showAllBurstPositions", (uiRes("m_initAddAttr.kShowAllBurstPositions")) );
    setCustomAttrNiceNameResource( "particle", "showAllLaunchPositions", (uiRes("m_initAddAttr.kShowAllLaunchPositions")) );
    setCustomAttrNiceNameResource( "particle", "smokeOpacity", (uiRes("m_initAddAttr.kSmokeOpacity")) );
    setCustomAttrNiceNameResource( "particle", "smokeThreshold", (uiRes("m_initAddAttr.kSmokeThreshold")) );
    setCustomAttrNiceNameResource( "particle", "sparkColorIndex", (uiRes("m_initAddAttr.kSparkColorIndex")) );
    setCustomAttrNiceNameResource( "particle", "sparkColorIndex0", (uiRes("m_initAddAttr.kSparkColorIndex0")) );
    setCustomAttrNiceNameResource( "particle", "sparkScale", (uiRes("m_initAddAttr.kSparkScale")) );
    setCustomAttrNiceNameResource( "particle", "sparkScale0", (uiRes("m_initAddAttr.kSparkScale0")) );
    setCustomAttrNiceNameResource( "particle", "sparksColorSpread", (uiRes("m_initAddAttr.kSparksColorSpread"))  );
    setCustomAttrNiceNameResource( "particle", "spinSpeed", (uiRes("m_initAddAttr.kSpinSpeed")) );
    setCustomAttrNiceNameResource( "particle", "spinSpread", (uiRes("m_initAddAttr.kSpinSpread")) );
    setCustomAttrNiceNameResource( "particle", "trailSparkScale", (uiRes("m_initAddAttr.kTrailSparkScale")) );
    setCustomAttrNiceNameResource( "particle", "trailSparkScale0", (uiRes("m_initAddAttr.kTrailSparkScale0")) );

    // uniformField -- from createMotionFieldExpression.mel
    //
    setCustomAttrNiceNameResource( "uniformField", "pushIntensity", (uiRes("m_initAddAttr.kPushIntensity")) );

    // particle attrs on transforms (Effects)
    //
    setCustomAttrNiceNameResource( "transform", "_lightningGroupObject", (uiRes("m_initAddAttr.kLightningGroupObject")) );
    setCustomAttrNiceNameResource( "transform", "_normalSurfaceManip_", (uiRes("m_initAddAttr.kNormalSurfaceManip")) );
    setCustomAttrNiceNameResource( "transform", "_surfaceFlowObject", (uiRes("m_initAddAttr.kSurfaceFlowObject")) );
    setCustomAttrNiceNameResource( "transform", "actualFlowSurface", (uiRes("m_initAddAttr.kActualFlowSurface")) );
    setCustomAttrNiceNameResource( "transform", "adjustedAgeNormalizedAttribute", (uiRes("m_initAddAttr.kAdjustedAgeNormalizedAttribute")) );
    setCustomAttrNiceNameResource( "transform", "colorB", (uiRes("m_initAddAttr.kColorB")) );
    setCustomAttrNiceNameResource( "transform", "colorG", (uiRes("m_initAddAttr.kColorG")) );
    setCustomAttrNiceNameResource( "transform", "colorR", (uiRes("m_initAddAttr.kColorR")) );
    setCustomAttrNiceNameResource( "transform", "curveMax", (uiRes("m_initAddAttr.kCurveMax")) );
    setCustomAttrNiceNameResource( "transform", "curveMin", (uiRes("m_initAddAttr.kCurveMin")) );
    setCustomAttrNiceNameResource( "transform", "displayAllCircles", (uiRes("m_initAddAttr.kDisplayAllCircles")) );
    setCustomAttrNiceNameResource( "transform", "displayEdgeLoft", (uiRes("m_initAddAttr.kDisplayEdgeLoft")) );
    setCustomAttrNiceNameResource( "transform", "displayGeometry", (uiRes("m_initAddAttr.kDisplayTransformGeometry")) );
    setCustomAttrNiceNameResource( "transform", "displayMaxLoft", (uiRes("m_initAddAttr.kDisplayMaxLoft")) );
    setCustomAttrNiceNameResource( "transform", "displayMinLoft", (uiRes("m_initAddAttr.kDisplayMinLoft")) );
    setCustomAttrNiceNameResource( "transform", "displaySubManips", (uiRes("m_initAddAttr.kDisplaySubManips")) );
    setCustomAttrNiceNameResource( "transform", "displaySubsegments", (uiRes("m_initAddAttr.kDisplaySubsegments")) );
    setCustomAttrNiceNameResource( "transform", "displayThickness", (uiRes("m_initAddAttr.kDisplayThickness")) );
    setCustomAttrNiceNameResource( "transform", "effectStrengthArrayMapper", (uiRes("m_initAddAttr.kEffectStrengthArrayMapper")) );
    setCustomAttrNiceNameResource( "transform", "effectStrengthAttribute", (uiRes("m_initAddAttr.kEffectStrengthAttribute")) );
    setCustomAttrNiceNameResource( "transform", "effectStrengthRamp", (uiRes("m_initAddAttr.kEffectStrengthRamp")) );
    setCustomAttrNiceNameResource( "transform", "emissionRate", (uiRes("m_initAddAttr.kEmissionRate")) );
    setCustomAttrNiceNameResource( "transform", "emitterRate", (uiRes("m_initAddAttr.kEmitterRate")) );
    setCustomAttrNiceNameResource( "transform", "flowingParticles", (uiRes("m_initAddAttr.kFlowingParticles")) );
    setCustomAttrNiceNameResource( "transform", "glowIntensity", (uiRes("m_initAddAttr.kGlowIntensity")) );
    setCustomAttrNiceNameResource( "transform", "goalWeight", (uiRes("m_initAddAttr.kGoalWeight")) );
    setCustomAttrNiceNameResource( "transform", "goalWeight#", (uiRes("m_initAddAttr.kGoalWeightNum")) );
    setCustomAttrNiceNameResource( "transform", "goalWeightAttribute", (uiRes("m_initAddAttr.kGoalWeightAttribute")) );
    setCustomAttrNiceNameResource( "transform", "goalWeight_#", (uiRes("m_initAddAttr.kGoalWeightUndNum")) );
    setCustomAttrNiceNameResource( "transform", "lifespan", (uiRes("m_initAddAttr.kTransformLifespan")) );
    setCustomAttrNiceNameResource( "transform", "lightIntensity", (uiRes("m_initAddAttr.kLightIntensity")) );
    setCustomAttrNiceNameResource( "transform", "lightningEnd", (uiRes("m_initAddAttr.kLightningEnd")) );
    setCustomAttrNiceNameResource( "transform", "lightningFromObject", (uiRes("m_initAddAttr.kLightningFromObject")) );
    setCustomAttrNiceNameResource( "transform", "lightningFromPosition", (uiRes("m_initAddAttr.kLightningFromPosition")) );
    setCustomAttrNiceNameResource( "transform", "lightningFromDirection", (uiRes("m_initAddAttr.kLightningFromDirection")) );
    setCustomAttrNiceNameResource( "transform", "lightningToObject", (uiRes("m_initAddAttr.kLightningToObject")) );
    setCustomAttrNiceNameResource( "transform", "lightningToPosition", (uiRes("m_initAddAttr.kLightningToPosition")) );
    setCustomAttrNiceNameResource( "transform", "lightningToDirection", (uiRes("m_initAddAttr.kLightningToDirection")) );
    setCustomAttrNiceNameResource( "transform", "lightningParticleObject", (uiRes("m_initAddAttr.kLightningParticleObject")) );
    setCustomAttrNiceNameResource( "transform", "lightningSurface", (uiRes("m_initAddAttr.kLightningSurface")) );
    setCustomAttrNiceNameResource( "transform", "lightningShader", (uiRes("m_initAddAttr.kLightningShader")) );
    setCustomAttrNiceNameResource( "transform", "lightningStart", (uiRes("m_initAddAttr.kLightningStart")) );
    setCustomAttrNiceNameResource( "transform", "locator_#_pos", (uiRes("m_initAddAttr.kLocatorNumPosition")) );
    setCustomAttrNiceNameResource( "transform", "manipPositionArrayMapper", (uiRes("m_initAddAttr.kManipPositionArrayMapper")) );
    setCustomAttrNiceNameResource( "transform", "manipPositionAttribute", (uiRes("m_initAddAttr.kManipPositionAttribute")) );
    setCustomAttrNiceNameResource( "transform", "maxAgeRatio_#", (uiRes("m_initAddAttr.kMaxAgeRatioNum")) );
    setCustomAttrNiceNameResource( "transform", "maxBurstSpeed", (uiRes("m_initAddAttr.kTransformMaxBurstSpeed")) );
    setCustomAttrNiceNameResource( "transform", "maxDistance#", (uiRes("m_initAddAttr.kMaxDistanceNum")) );
    setCustomAttrNiceNameResource( "transform", "maxSparksCount", (uiRes("m_initAddAttr.kTransformMaxSparksCount")) );
    setCustomAttrNiceNameResource( "transform", "maxSpread", (uiRes("m_initAddAttr.kMaxSpread")) );
    setCustomAttrNiceNameResource( "transform", "maxV#", (uiRes("m_initAddAttr.kMaxVNum")) );
    setCustomAttrNiceNameResource( "transform", "minAgeRatio_#", (uiRes("m_initAddAttr.kMinAgeRatioNum")) );
    setCustomAttrNiceNameResource( "transform", "minDistance#", (uiRes("m_initAddAttr.kMinDistanceNum")) );
    setCustomAttrNiceNameResource( "transform", "minSparksCount", (uiRes("m_initAddAttr.kTransformMinSparksCount")) );
    setCustomAttrNiceNameResource( "transform", "minV#", (uiRes("m_initAddAttr.kMinVNum")) );
    setCustomAttrNiceNameResource( "transform", "nodesToDelete", (uiRes("m_initAddAttr.kNodesToDelete")) );
    setCustomAttrNiceNameResource( "transform", "rampCount", (uiRes("m_initAddAttr.kRampCount")) );
    setCustomAttrNiceNameResource( "transform", "randomMotionSpeed", (uiRes("m_initAddAttr.kTransformRandomMotionSpeed")) );
    setCustomAttrNiceNameResource( "transform", "randomRadius", (uiRes("m_initAddAttr.kRandomRadius")) );
    setCustomAttrNiceNameResource( "transform", "randomSpeed", (uiRes("m_initAddAttr.kRandomSpeed")) );
    setCustomAttrNiceNameResource( "transform", "referenceFlowSurface", (uiRes("m_initAddAttr.kReferenceFlowSurface")) );
    setCustomAttrNiceNameResource( "transform", "rocketGravity", (uiRes("m_initAddAttr.kTransformRocketGravity")) );
    setCustomAttrNiceNameResource( "transform", "shatter", (uiRes("m_initAddAttr.kShatter")) );
    setCustomAttrNiceNameResource( "transform", "showAllBurstPositions", (uiRes("m_initAddAttr.kTransformShowAllBurstPositions")) );
    setCustomAttrNiceNameResource( "transform", "showAllLaunchPositions", (uiRes("m_initAddAttr.kTransformShowAllLaunchPositions")) );
    setCustomAttrNiceNameResource( "transform", "showTrueManipShape", (uiRes("m_initAddAttr.kShowTrueManipShape")) );
    setCustomAttrNiceNameResource( "transform", "smoothSubManips", (uiRes("m_initAddAttr.kSmoothSubManips")) );
    setCustomAttrNiceNameResource( "transform", "sparksColorSpread" ,(uiRes("m_initAddAttr.kTransformSparksColorSpread"))  );
    setCustomAttrNiceNameResource( "transform", "sparksGlow", (uiRes("m_initAddAttr.kSparksGlow")) );
    setCustomAttrNiceNameResource( "transform", "sparksIncandescence", (uiRes("m_initAddAttr.kSparksIncandescence")) );
    setCustomAttrNiceNameResource( "transform", "sparksMaxTailSize", (uiRes("m_initAddAttr.kSparksMaxTailSize")) );
    setCustomAttrNiceNameResource( "transform", "sparksMinTailSize", (uiRes("m_initAddAttr.kSparksMinTailSize")) );
    setCustomAttrNiceNameResource( "transform", "surfaceFlowEmitter", (uiRes("m_initAddAttr.kSurfaceFlowEmitter")) );
    setCustomAttrNiceNameResource( "transform", "surfaceFlowGoal", (uiRes("m_initAddAttr.kSurfaceFlowGoal")) );
    setCustomAttrNiceNameResource( "transform", "surfaceFlowMainEdgeCurves", (uiRes("m_initAddAttr.kSurfaceFlowMainEdgeCurves")) );
    setCustomAttrNiceNameResource( "transform", "surfaceFlowMainLofts", (uiRes("m_initAddAttr.kSurfaceFlowMainLofts")) );
    setCustomAttrNiceNameResource( "transform", "surfaceFlowMainManips", (uiRes("m_initAddAttr.kSurfaceFlowMainManips")) );
    setCustomAttrNiceNameResource( "transform", "surfaceFlowMainMaxCurves", (uiRes("m_initAddAttr.kSurfaceFlowMainMaxCurves")) );
    setCustomAttrNiceNameResource( "transform", "surfaceFlowMainMinCurves", (uiRes("m_initAddAttr.kSurfaceFlowMainMinCurves")) );
    setCustomAttrNiceNameResource( "transform", "surfaceFlowMainRamps", (uiRes("m_initAddAttr.kSurfaceFlowMainRamps")) );
    setCustomAttrNiceNameResource( "transform", "surfaceFlowMainResolutionPlanes", (uiRes("m_initAddAttr.kSurfaceFlowMainResolutionPlanes")) );
    setCustomAttrNiceNameResource( "transform", "surfaceFlowSubEdgeCurves", (uiRes("m_initAddAttr.kSurfaceFlowSubEdgeCurves")) );
    setCustomAttrNiceNameResource( "transform", "surfaceFlowSubLofts", (uiRes("m_initAddAttr.kSurfaceFlowSubLofts")) );
    setCustomAttrNiceNameResource( "transform", "surfaceFlowSubManips", (uiRes("m_initAddAttr.kSurfaceFlowSubManips")) );
    setCustomAttrNiceNameResource( "transform", "surfaceFlowSubMaxCurves", (uiRes("m_initAddAttr.kSurfaceFlowSubMaxCurves")) );
    setCustomAttrNiceNameResource( "transform", "surfaceFlowSubMinCurves", (uiRes("m_initAddAttr.kSurfaceFlowSubMinCurves")) );
    setCustomAttrNiceNameResource( "transform", "surfaceFlowSubRamps", (uiRes("m_initAddAttr.kSurfaceFlowSubRamps")) );
    setCustomAttrNiceNameResource( "transform", "surfaceFlowSubResolutionPlanes", (uiRes("m_initAddAttr.kSurfaceFlowSubResolutionPlanes")) );
    setCustomAttrNiceNameResource( "transform", "surfaceFlowTag", (uiRes("m_initAddAttr.kSurfaceFlowTag")) );
    setCustomAttrNiceNameResource( "transform", "thickness", (uiRes("m_initAddAttr.kThickness")) );
    setCustomAttrNiceNameResource( "transform", "trailEmitRate", (uiRes("m_initAddAttr.kTrailEmitRate")) );
    setCustomAttrNiceNameResource( "transform", "trailEmitSpeed", (uiRes("m_initAddAttr.kTrailEmitSpeed")) );
    setCustomAttrNiceNameResource( "transform", "trailEmitSpread", (uiRes("m_initAddAttr.kTrailEmitSpread")) );
    setCustomAttrNiceNameResource( "transform", "trailGlow", (uiRes("m_initAddAttr.kTrailGlow")) );
    setCustomAttrNiceNameResource( "transform", "trailIncandescence", (uiRes("m_initAddAttr.kTrailIncandescence")) );
    setCustomAttrNiceNameResource( "transform", "trailMaxTailSize", (uiRes("m_initAddAttr.kTrailMaxTailSize")) );
    setCustomAttrNiceNameResource( "transform", "trailMinTailSize", (uiRes("m_initAddAttr.kTrailMinTailSize")) );
    setCustomAttrNiceNameResource( "transform", "uLocation#", (uiRes("m_initAddAttr.kULocationNum")) );

    // muscle attributes on transform (MuscleSpline)
    //
    setCustomAttrNiceNameResource( "transform", "tangentLength", (uiRes("m_initAddAttr.kTangentLength")) );
    setCustomAttrNiceNameResource( "transform", "jiggle", (uiRes("m_initAddAttr.kJiggle")) );
    setCustomAttrNiceNameResource( "transform", "jiggleX", (uiRes("m_initAddAttr.kJiggleX")) );
    setCustomAttrNiceNameResource( "transform", "jiggleY", (uiRes("m_initAddAttr.kJiggleY")) );
    setCustomAttrNiceNameResource( "transform", "jiggleZ", (uiRes("m_initAddAttr.kJiggleZ")) );
    setCustomAttrNiceNameResource( "transform", "jiggleImpact", (uiRes("m_initAddAttr.kJiggleImpact")) );
    setCustomAttrNiceNameResource( "transform", "jiggleImpactStart", (uiRes("m_initAddAttr.kJiggleImpactStart")) );
    setCustomAttrNiceNameResource( "transform", "jiggleImpactStop", (uiRes("m_initAddAttr.kJiggleImpactStop")) );
    setCustomAttrNiceNameResource( "transform", "cycle", (uiRes("m_initAddAttr.kCycle")) );
    setCustomAttrNiceNameResource( "transform", "rest", (uiRes("m_initAddAttr.kRest")) );

    // particle attr on mesh and nurbsSurface
    //
    for( $t in { "mesh", "nurbsSurface" } ) {
        setCustomAttrNiceNameResource( $t, "emitter#RatePP", (uiRes("m_initAddAttr.kEmitterNumRatePP")));
    }

    // Fluid Caches
    //
    setCustomAttrNiceNameResource( "diskCache", "segmentStartFrame", (uiRes("m_initAddAttr.kCacheSegmentStartFrame")) );
    setCustomAttrNiceNameResource( "expression", "segmentStartFrame", (uiRes("m_initAddAttr.kExpSegmentStartFrame")) );

    // NOTE: .nts/notes attribute is not handled here. 

    // Ramps
    //
    setCustomAttrNiceNameResource( "ramp", "rampCenter", (uiRes("m_initAddAttr.kRampCenter")) );

    // Locator (Ocean...)
    //
    setCustomAttrNiceNameResource( "locator", "airDamping", (uiRes("m_initAddAttr.kAirDamping")) );
    setCustomAttrNiceNameResource( "locator", "boatLength", (uiRes("m_initAddAttr.kBoatLength")) );
    setCustomAttrNiceNameResource( "locator", "boatWidth", (uiRes("m_initAddAttr.kBoatWidth")) );
    setCustomAttrNiceNameResource( "locator", "buoyancy", (uiRes("m_initAddAttr.kBuoyancy")) );
    setCustomAttrNiceNameResource( "locator", "gravity", (uiRes("m_initAddAttr.kGravity")) );
    setCustomAttrNiceNameResource( "locator", "lastFrame", (uiRes("m_initAddAttr.kLastFrame")) );
    setCustomAttrNiceNameResource( "locator", "objectHeight", (uiRes("m_initAddAttr.kObjectHeight")) );
    setCustomAttrNiceNameResource( "locator", "pitch", (uiRes("m_initAddAttr.kPitch")) );
    setCustomAttrNiceNameResource( "locator", "rudder", (uiRes("m_initAddAttr.kRudder")) );
    setCustomAttrNiceNameResource( "locator", "roll", (uiRes("m_initAddAttr.kRoll")) );
    setCustomAttrNiceNameResource( "locator", "rotVelX", (uiRes("m_initAddAttr.kRotVelX")) );
    setCustomAttrNiceNameResource( "locator", "rotVelY", (uiRes("m_initAddAttr.kRotVelY")) );
    setCustomAttrNiceNameResource( "locator", "rotVelZ", (uiRes("m_initAddAttr.kRotVelZ")) );
    setCustomAttrNiceNameResource( "locator", "sceneScale", (uiRes("m_initAddAttr.kSceneScale")) );
    setCustomAttrNiceNameResource( "locator", "startFrame", (uiRes("m_initAddAttr.kStartFrame")) );
    setCustomAttrNiceNameResource( "locator", "startRotX", (uiRes("m_initAddAttr.kStartRotX")) );
    setCustomAttrNiceNameResource( "locator", "startRotY", (uiRes("m_initAddAttr.kStartRotY")) );
    setCustomAttrNiceNameResource( "locator", "startRotZ", (uiRes("m_initAddAttr.kStartRotZ")) );
    setCustomAttrNiceNameResource( "locator", "startX", (uiRes("m_initAddAttr.kStartX")) );
    setCustomAttrNiceNameResource( "locator", "startY", (uiRes("m_initAddAttr.kStartY")) );
    setCustomAttrNiceNameResource( "locator", "startZ", (uiRes("m_initAddAttr.kStartZ")) );
    setCustomAttrNiceNameResource( "locator", "throttle", (uiRes("m_initAddAttr.kThrottle")) );
    setCustomAttrNiceNameResource( "locator", "throttlePitch", (uiRes("m_initAddAttr.kThrottlePitch")) );
    setCustomAttrNiceNameResource( "locator", "turnRoll", (uiRes("m_initAddAttr.kTurnRoll")) );
    setCustomAttrNiceNameResource( "locator", "velocity", (uiRes("m_initAddAttr.kVelocity")) );
    setCustomAttrNiceNameResource( "locator", "velocityX", (uiRes("m_initAddAttr.kVelocityX")) );
    setCustomAttrNiceNameResource( "locator", "velocityZ", (uiRes("m_initAddAttr.kVelocityZ")) );
    setCustomAttrNiceNameResource( "locator", "waterDamping", (uiRes("m_initAddAttr.kWaterDamping")) );
    setCustomAttrNiceNameResource( "locator", "waterLevel", (uiRes("m_initAddAttr.kWaterLevel")) );

    // Nurbs Curves
    //
    setCustomAttrNiceNameResource( "nurbsCurve", "lockLength", (uiRes("m_initAddAttr.kLockLength")) );

    // Fur's light attrs
    //
    string $types[] = { "ambientLight", 
        "directionalLight", 
        "pointLight", 
        "spotLight", 
        "areaLight" };

    for( $t in $types ) {
        setCustomAttrNiceNameResource( $t, "furSelfShade", (uiRes("m_initAddAttr.kSelfShade")) );
        setCustomAttrNiceNameResource( $t, "furSelfShadeDarkness", (uiRes("m_initAddAttr.kSelfShadeDarkness")) );
        setCustomAttrNiceNameResource( $t, "furBackShadeFactor", (uiRes("m_initAddAttr.kBackShadeFactor")) );
        setCustomAttrNiceNameResource( $t, "furBackShadeDarkness", (uiRes("m_initAddAttr.kBackShadeDarkness")) );
        setCustomAttrNiceNameResource( $t, "furShadowThreshold", (uiRes("m_initAddAttr.kFurThreshold")) );
        setCustomAttrNiceNameResource( $t, "furAreaLightDensity", (uiRes("m_initAddAttr.kSublightDensity")) );
        setCustomAttrNiceNameResource( $t, "furShadingType", (uiRes("m_initAddAttr.kFurShadingType")) );
        setCustomAttrNiceNameResource( $t, "furLightMultiplier", (uiRes("m_initAddAttr.kFurLightMultiplier")) );
    }

    // Fur globals
    //
    setCustomAttrNiceNameResource( "FurGlobals", "referencedFurGlobals", (uiRes("m_initAddAttr.kReferencedFurGlobals")) );
    setCustomAttrNiceNameResource( "FurGlobals", "projectLocation", (uiRes("m_initAddAttr.kProjectLocation")) );
    setCustomAttrNiceNameResource( "FurGlobals", "copyAttrMaps", (uiRes("m_initAddAttr.kCopyAttrMaps")) );
    setCustomAttrNiceNameResource( "FurGlobals", "furGlobalReference", (uiRes("m_initAddAttr.kFurGlobalReference")) );
    setCustomAttrNiceNameResource( "FurGlobals", "createEqualMap", (uiRes("m_initAddAttr.kCreateEqualMap")) );
    setCustomAttrNiceNameResource( "FurGlobals", "callback", (uiRes("m_initAddAttr.kCallback")) );
    setCustomAttrNiceNameResource( "FurGlobals", "wt", (uiRes("m_initAddAttr.kWt")) ); // mentalrayFurAddAttrs.mel

    // Fur Description nodes
    //
    setCustomAttrNiceNameResource( "FurDescription", "furReference", (uiRes("m_initAddAttr.kFurReference")) );

    // Fur attrs on other nodes
    //
    for( $t in { "mesh", "nurbsSurface", "subdiv" } ) {
        setCustomAttrNiceNameResource( $t, "equalizerMap", (uiRes("m_initAddAttr.kEqualizerMap")) );
        setCustomAttrNiceNameResource( $t, "flipFurNormals", (uiRes("m_initAddAttr.kFlipFurNormals")) );
        setCustomAttrNiceNameResource( $t, "surfaceReference", (uiRes("m_initAddAttr.kSurfaceReference")) );
        setCustomAttrNiceNameResource( $t, "referenceFile", (uiRes("m_initAddAttr.kReferenceFile")) ); 
        setCustomAttrNiceNameResource( $t, "furNameSpace", (uiRes("m_initAddAttr.kFurNameSpace")) );
        setCustomAttrNiceNameResource( $t, "furMeshArea", (uiRes("m_initAddAttr.kFurMeshArea")) );
        setCustomAttrNiceNameResource( $t, "furDirectionOffset", (uiRes("m_initAddAttr.kFurDirectionOffset")) );
    }
    setCustomAttrNiceNameResource( "joint", "attractorGroup", (uiRes("m_initAddAttr.kAttractorGroup")) );
    setCustomAttrNiceNameResource( "joint", "jointRotationDelay", (uiRes("m_initAddAttr.kJointRotationDelay")) );
    setCustomAttrNiceNameResource( "transform", "attractorEnd", (uiRes("m_initAddAttr.kAttractorEnd")) );
    setCustomAttrNiceNameResource( "transform", "Character", (uiRes("m_initAddAttr.kCharacter")) );
    setCustomAttrNiceNameResource( "hairSystem", "furAttrSystem", (uiRes("m_initAddAttr.kFurAttrSystem")) );
    setCustomAttrNiceNameResource( "expression", "furAnimTexture", (uiRes("m_initAddAttr.kFurAnimTexture")) );

    // Transfer Maps, and addLabelsToShapes.mel
    // 
    string $miLabel = (uiRes("m_initAddAttr.kMILabel"));
    for( $t in { "mesh", "nurbsSurface", "subdiv" } ) {
        setCustomAttrNiceNameResource( $t, "surfaceSamplingEnvelope", (uiRes("m_initAddAttr.kSurfaceSamplingEnvelope")) );
        setCustomAttrNiceNameResource( $t, "miLabel", $miLabel );
    }
    setCustomAttrNiceNameResource( "transform", "miLabel", $miLabel );

    // createTextureToGeom
    //
    setCustomAttrNiceNameResource( "mesh", "converterNode", (uiRes("m_initAddAttr.kConverterNode")) );
    setCustomAttrNiceNameResource( "textureToGeom", "shaderAssignment", (uiRes("m_initAddAttr.kShaderAssignment")) );
    setCustomAttrNiceNameResource( "textureToGeom", "shaderTemplate", (uiRes("m_initAddAttr.kShaderTemplate")) );

    // vertexBakeSet
    //
    setCustomAttrNiceNameResource( "vertexBakeSet", "filterSize", (uiRes("m_initAddAttr.kFilterSize")) );
    setCustomAttrNiceNameResource( "vertexBakeSet", "filterNormalTolerance", (uiRes("m_initAddAttr.kFilterNormalTolerance")) );

    // defaultRenderGlobals -- these don't seem to be required.  Even when env
    // var is set to enable the UI, it only shows up in places where the 
    // controls get -label overrides.
    //
    // setCustomAttrNiceNameResource( "renderGlobals", "bgImageFileName", _L10N( kBGImageFileName, "BG Image File Name" ) );
    // setCustomAttrNiceNameResource( "renderGlobals", "bgImageEnable", _L10N( kBGImageEnable, "BG Image Enable" ) );
    // setCustomAttrNiceNameResource( "renderGlobals", "bgImageComp", _L10N( kBGImageComp, "BG Image Comp" ) );
    // setCustomAttrNiceNameResource( "renderGlobals", "bgImageFrame Ext", _L10N( kBGImageFrameExt, "BG Image Frame Ext" ) );
    // setCustomAttrNiceNameResource( "renderGlobals", "bgImagePremult", _L10N( kBGImagePremult, "BG Image Premult" ) );
    // setCustomAttrNiceNameResource( "renderGlobals", "bgImageOversample", _L10N( kBGImageOversample, "BG Image Oversample" ) );
    // setCustomAttrNiceNameResource( "renderGlobals", "bgImageSepDepthEnable", _L10N( kBGImageSepDepthEnable, "BG Image Sep Depth Enable" ) );
    // setCustomAttrNiceNameResource( "renderGlobals", "bgImageSepDepthFile", _L10N( kBGImageSepDepthFile, "BG Image Sep Depth File" ) );
    // setCustomAttrNiceNameResource( "renderGlobals", "bgImageSepDepthOversample", _L10N( kBGImageSepDepthOversample, "BG Image Sep Depth Oversample" ) );

    // renderLayerBuiltinPreset.mel
    //
    setCustomAttrNiceNameResource( "samplerInfo", "cameraNearClipPlane", (uiRes("m_initAddAttr.kCameraNearClipPlane")) );
    setCustomAttrNiceNameResource( "samplerInfo", "cameraFarClipPlane", (uiRes("m_initAddAttr.kCameraFarClipPlane")) );

    // Vector Render
    //
    // Requires env var MAYA_VR_PER_SHAPE_ATTR to be set.  Then
    // shape gets Vector Render Control.  Push Add Attributes button.
    //
    for( $t in { "mesh", "nurbsSurface", "subdiv", "fluidShape" } ) {
        setCustomAttrNiceNameResource( $t, "vrOverwriteDefaults", (uiRes("m_initAddAttr.kVROverwriteDefaults")) );

        setCustomAttrNiceNameResource( $t, "vrFillObject", (uiRes("m_initAddAttr.kVRFillObject")) );
        setCustomAttrEnumResource( $t, "vrFillObject", 0, (uiRes("m_initAddAttr.kDefaultFill")) );
        setCustomAttrEnumResource( $t, "vrFillObject", 1, (uiRes("m_initAddAttr.kSingleColor")) );
        setCustomAttrEnumResource( $t, "vrFillObject", 2, (uiRes("m_initAddAttr.kTwoColor")) );
        setCustomAttrEnumResource( $t, "vrFillObject", 3, (uiRes("m_initAddAttr.kFourColor")) );
        setCustomAttrEnumResource( $t, "vrFillObject", 4, (uiRes("m_initAddAttr.kFullColor")) );
        setCustomAttrEnumResource( $t, "vrFillObject", 5, (uiRes("m_initAddAttr.kAverageColor")) );
        setCustomAttrEnumResource( $t, "vrFillObject", 6, (uiRes("m_initAddAttr.kAreaGradient")) );
        setCustomAttrEnumResource( $t, "vrFillObject", 7, (uiRes("m_initAddAttr.kMeshGradient")) );
        setCustomAttrEnumResource( $t, "vrFillObject", 8, (uiRes("m_initAddAttr.kNoFill")) );

        setCustomAttrNiceNameResource( $t, "vrEdgeWeight", (uiRes("m_initAddAttr.kVREdgeWeight")) );
        setCustomAttrNiceNameResource( $t, "vrEdgeStyle", (uiRes("m_initAddAttr.kVREdgeStyle")) );
        setCustomAttrNiceNameResource( $t, "vrEdgeColor", (uiRes("m_initAddAttr.kVREdgeColor")) );
        setCustomAttrNiceNameResource( $t, "vrEdgeColorR", (uiRes("m_initAddAttr.kVREdgeColorR")) );
        setCustomAttrNiceNameResource( $t, "vrEdgeColorG", (uiRes("m_initAddAttr.kVREdgeColorG")) );
        setCustomAttrNiceNameResource( $t, "vrEdgeColorB", (uiRes("m_initAddAttr.kVREdgeColorB")) );
        setCustomAttrNiceNameResource( $t, "vrHiddenEdges", (uiRes("m_initAddAttr.kVRHiddenEdges")) );
        setCustomAttrNiceNameResource( $t, "vrHiddenEdgesOnTransparent", (uiRes("m_initAddAttr.kVRHiddenEdgesOnTransparent")) );
        setCustomAttrNiceNameResource( $t, "vrOutlinesAtIntersections", (uiRes("m_initAddAttr.kVROutlinesAtIntersections")) );
        setCustomAttrNiceNameResource( $t, "vrEdgePriority", (uiRes("m_initAddAttr.kVREdgePriority")) );
    }

    // Component Editor: name given to "remember this layout" -- but not for Poly/Adv
    //
    setCustomAttrNiceNameResource( "objectSet", "tabName", (uiRes("m_initAddAttr.kTabName")) );
    setCustomAttrNiceNameResource( "objectSet", "baseName", (uiRes("m_initAddAttr.kBaseName")) );

    // PaintFX
    // 
    setCustomAttrNiceNameResource( "mesh", "lineWidthScale", (uiRes("m_initAddAttr.kLineWidthScale")) );
    setCustomAttrNiceNameResource( "stroke", "lastWX", (uiRes("m_initAddAttr.kLastWX")) );
    setCustomAttrNiceNameResource( "stroke", "lastWY", (uiRes("m_initAddAttr.kLastWY")) );
    setCustomAttrNiceNameResource( "stroke", "lastWZ", (uiRes("m_initAddAttr.kLastWZ")) );
    setCustomAttrNiceNameResource( "stroke", "lastVX", (uiRes("m_initAddAttr.kLastVX")) );
    setCustomAttrNiceNameResource( "stroke", "lastVY", (uiRes("m_initAddAttr.kLastVY")) );
    setCustomAttrNiceNameResource( "stroke", "lastVZ", (uiRes("m_initAddAttr.kLastVZ")) );
    setCustomAttrNiceNameResource( "brush", "springStiffness", (uiRes("m_initAddAttr.kSpringStiffness")) );
    setCustomAttrNiceNameResource( "brush", "springDamp", (uiRes("m_initAddAttr.kSpringDamp")) );
    setCustomAttrNiceNameResource( "brush", "springTravel", (uiRes("m_initAddAttr.kSpringTravel")) );

    // MentalRay attrs
    //
    for( $t in { "anisotropic", 
        "blinn", 
        "lambert", 
        "oceanShader", 
        "hairTubeShader", 
        "phong", 
        "phongE", 
        "rampShader", 
        "useBackground", 
        "layeredShader", 
        "shadingMap", 
        "surfaceShader", 
        "FurDescription", 
        "hairSystem" } )
    {
        setCustomAttrNiceNameResource( $t, "miFrameBufferWriteOperation", (uiRes("m_initAddAttr.kMIWriteOperation")) );
        setCustomAttrEnumResource( $t, "miFrameBufferWriteOperation", 0, (uiRes("m_initAddAttr.kNoOp")) );
        setCustomAttrEnumResource( $t, "miFrameBufferWriteOperation", 1, (uiRes("m_initAddAttr.kAdd")) );
        setCustomAttrEnumResource( $t, "miFrameBufferWriteOperation", 2, (uiRes("m_initAddAttr.kMultiply")) );
        setCustomAttrEnumResource( $t, "miFrameBufferWriteOperation", 3, (uiRes("m_initAddAttr.kOverwrite")) );
        
        if( $t != "lambert" ) {
            setCustomAttrNiceNameResource( $t, "miReflectionBlurLimit", (uiRes("m_initAddAttr.kMIReflectionBlurLimit")) );
        }
        if( $t != "useBackground" ) {
            setCustomAttrNiceNameResource( $t, "miRefractionBlurLimit", (uiRes("m_initAddAttr.kMIRefractionBlurLimit")) );
        }
        if(( $t != "hairTubeShader" ) 
            && ( $t != "rampShader" ) 
            && ( $t != "useBackground" )) 
        {
            setCustomAttrNiceNameResource( $t, "miScatterRadius", (uiRes("m_initAddAttr.kMIScatterRadius")) );
            setCustomAttrNiceNameResource( $t, "miScatterColor", (uiRes("m_initAddAttr.kMIScatterColor")) );
            setCustomAttrNiceNameResource( $t, "miScatterColorR", (uiRes("m_initAddAttr.kMIScatterColorR")) );
            setCustomAttrNiceNameResource( $t, "miScatterColorG", (uiRes("m_initAddAttr.kMIScatterColorG")) );
            setCustomAttrNiceNameResource( $t, "miScatterColorB", (uiRes("m_initAddAttr.kMIScatterColorB")) );
            setCustomAttrNiceNameResource( $t, "miScatterAccuracy", (uiRes("m_initAddAttr.kMIScatterAccuracy")) );

            setCustomAttrNiceNameResource( $t, "miScatterFalloff", (uiRes("m_initAddAttr.kMIScatterFalloff")) );
            setCustomAttrEnumResource( $t, "miScatterFalloff", 0, (uiRes("m_initAddAttr.kNone")) );
            setCustomAttrEnumResource( $t, "miScatterFalloff", 1, (uiRes("m_initAddAttr.kLinear")) );
            setCustomAttrEnumResource( $t, "miScatterFalloff", 2, (uiRes("m_initAddAttr.kQuadratic")) );
            setCustomAttrEnumResource( $t, "miScatterFalloff", 3, (uiRes("m_initAddAttr.kExponential")) );

            setCustomAttrNiceNameResource( $t, "miScatterLimit", (uiRes("m_initAddAttr.kMIScatterLimit")) ); 
            setCustomAttrNiceNameResource( $t, "miScatterCache", (uiRes("m_initAddAttr.kMIScatterCache")) ); 
        }
    }

    setCustomAttrNiceNameResource( "areaLight", "mentalrayControls", (uiRes("m_initAddAttr.kMentalrayControls")) );
    setCustomAttrNiceNameResource( "areaLight", "miExportMrLight", (uiRes("m_initAddAttr.kExportMRLight")) );
    setCustomAttrNiceNameResource( "areaLight", "miLightShader", (uiRes("m_initAddAttr.kLightShader")) );
    setCustomAttrNiceNameResource( "areaLight", "miPhotonEmitter", (uiRes("m_initAddAttr.kPhotonEmitter")) );
    setCustomAttrNiceNameResource( "areaLight", "emitPhotons", (uiRes("m_initAddAttr.kEmitPhotons")) );
    setCustomAttrNiceNameResource( "areaLight", "energy", (uiRes("m_initAddAttr.kEnergy")) );
    setCustomAttrNiceNameResource( "areaLight", "energyR", (uiRes("m_initAddAttr.kEnergyR")) );
    setCustomAttrNiceNameResource( "areaLight", "energyG", (uiRes("m_initAddAttr.kEnergyG")) );
    setCustomAttrNiceNameResource( "areaLight", "energyB", (uiRes("m_initAddAttr.kEnergyB")) );
    setCustomAttrNiceNameResource( "areaLight", "photonIntensity", (uiRes("m_initAddAttr.kPhotonIntensity")) );
    setCustomAttrNiceNameResource( "areaLight", "exponent", (uiRes("m_initAddAttr.kExponent")) );
    setCustomAttrNiceNameResource( "areaLight", "causticPhotons", (uiRes("m_initAddAttr.kCausticPhotons")) );
    setCustomAttrNiceNameResource( "areaLight", "causticPhotonsEmit", (uiRes("m_initAddAttr.kCausticPhotonsEmit")) );
    setCustomAttrNiceNameResource( "areaLight", "globIllPhotons", (uiRes("m_initAddAttr.kGlobIllPhotons")) );
    setCustomAttrNiceNameResource( "areaLight", "globIllPhotonsEmit", (uiRes("m_initAddAttr.kGlobIllPhotonsEmit")) );
    setCustomAttrNiceNameResource( "areaLight", "shadowMap", (uiRes("m_initAddAttr.kShadowMap")) );
    setCustomAttrNiceNameResource( "areaLight", "smapResolution", (uiRes("m_initAddAttr.kShadowMapResolution")) );
    setCustomAttrNiceNameResource( "areaLight", "smapSamples", (uiRes("m_initAddAttr.kShadowMapSamples")) );
    setCustomAttrNiceNameResource( "areaLight", "smapSoftness", (uiRes("m_initAddAttr.kShadowMapSoftness")) );
    setCustomAttrNiceNameResource( "areaLight", "smapBias", (uiRes("m_initAddAttr.kShadowMapBias")) );
    setCustomAttrNiceNameResource( "areaLight", "smapCamera", (uiRes("m_initAddAttr.kShadowMapCamera")) );
    setCustomAttrNiceNameResource( "areaLight", "smapFilename", (uiRes("m_initAddAttr.kShadowMapFilename")) );
    setCustomAttrNiceNameResource( "areaLight", "smapLightName", (uiRes("m_initAddAttr.kShadowMapLightName")) );
    setCustomAttrNiceNameResource( "areaLight", "smapSceneName", (uiRes("m_initAddAttr.kShadowMapSceneName")) );
    setCustomAttrNiceNameResource( "areaLight", "smapFrameExt", (uiRes("m_initAddAttr.kShadowMapFrameExt")) );
    setCustomAttrNiceNameResource( "areaLight", "smapDetail", (uiRes("m_initAddAttr.kShadowMapDetail")) );
    setCustomAttrNiceNameResource( "areaLight", "smapDetailSamples", (uiRes("m_initAddAttr.kShadowMapDetailSamples")) );
    setCustomAttrNiceNameResource( "areaLight", "smapDetailAccuracy", (uiRes("m_initAddAttr.kShadowMapDetailAccuracy")) );
    setCustomAttrNiceNameResource( "areaLight", "smapDetailAlpha", (uiRes("m_initAddAttr.kShadowMapDetailAlpha")) );
    setCustomAttrNiceNameResource( "areaLight", "smapWindow", (uiRes("m_initAddAttr.kShadowMapWindow")) );
    setCustomAttrNiceNameResource( "areaLight", "smapWindowXMin", (uiRes("m_initAddAttr.kShadowMapWindowXMin")) );
    setCustomAttrNiceNameResource( "areaLight", "smapWindowYMin", (uiRes("m_initAddAttr.kShadowMapWindowYMin")) );
    setCustomAttrNiceNameResource( "areaLight", "smapWindowXMax", (uiRes("m_initAddAttr.kShadowMapWindowXMax")) );
    setCustomAttrNiceNameResource( "areaLight", "smapWindowYMax", (uiRes("m_initAddAttr.kShadowMapWindowYMax")) );
    setCustomAttrNiceNameResource( "areaLight", "smapMerge", (uiRes("m_initAddAttr.kShadowMapMerge")) );
    setCustomAttrNiceNameResource( "areaLight", "smapTrace", (uiRes("m_initAddAttr.kShadowMapTrace")) );
    setCustomAttrNiceNameResource( "areaLight", "areaLight", (uiRes("m_initAddAttr.kAreaLight")) );
    setCustomAttrNiceNameResource( "areaLight", "areaShapeIntensity", (uiRes("m_initAddAttr.kAreaShapeIntensity")) );
    setCustomAttrNiceNameResource( "areaLight", "areaHiSamples", (uiRes("m_initAddAttr.kAreaHiSamples")) );
    setCustomAttrNiceNameResource( "areaLight", "areaHiSampleLimit", (uiRes("m_initAddAttr.kAreaHiSampleLimit")) );
    setCustomAttrNiceNameResource( "areaLight", "areaLoSamples", (uiRes("m_initAddAttr.kAreaLoSamples")) );
    setCustomAttrNiceNameResource( "areaLight", "areaVisible", (uiRes("m_initAddAttr.kAreaVisible")) );
    setCustomAttrNiceNameResource( "areaLight", "areaObject", (uiRes("m_initAddAttr.kAreaObject")) );

    // Area type attribute for areaLight and spotLight
    //
    for( $t in { "areaLight", "spotLight" } ) {
	    setCustomAttrNiceNameResource( $t, "areaType", (uiRes("m_initAddAttr.kAreaType")) );
	    setCustomAttrEnumResource( $t, "areaType", 0, (uiRes("m_initAddAttr.kRectangle")) );
	    setCustomAttrEnumResource( $t, "areaType", 1, (uiRes("m_initAddAttr.kDisc")) );
	    setCustomAttrEnumResource( $t, "areaType", 2, (uiRes("m_initAddAttr.kSphere")) );
	    setCustomAttrEnumResource( $t, "areaType", 3, (uiRes("m_initAddAttr.kCylinder")) );
	    setCustomAttrEnumResource( $t, "areaType", 4, (uiRes("m_initAddAttr.kCustom")) );
	}

    // AEmentalrayInstanceFlags
    //
    setCustomAttrNiceNameResource( "transform", "miProxyRenderable", (uiRes("m_initAddAttr.kMIProxyRenderable")) );

    // AEmentalrayMicroBevelTemplate: what node type?
    //
    //	setCustomAttrNiceNameResource( "", "microBevelNode", _L10N( kMicroBevelNode, "Micro Bevel Node" ) );
    //	setCustomAttrNiceNameResource( "", "microBevelSize", _L10N( kMicroBevelSize, "Micro Bevel Size" ) );

    // AEmentalrayRenderStats.mel
    //
    for( $t in { "mesh", "subdiv", "nurbsSurface", "FurFeedback", "hairSystem", "greasePlaneRenderShape" } ) {
        setCustomAttrNiceNameResource( $t, "miShadingSamplesOverride", (uiRes("m_initAddAttr.kMIShadingSamplesOverride")) );
        setCustomAttrNiceNameResource( $t, "miShadingSamples", (uiRes("m_initAddAttr.kMIShadingSamples")) );
        setCustomAttrNiceNameResource( $t, "miMaxDisplaceOverride", (uiRes("m_initAddAttr.kMIMaxDisplaceOverride")) );
        setCustomAttrNiceNameResource( $t, "miMaxDisplace", (uiRes("m_initAddAttr.kMIMaxDisplace")) );
        setCustomAttrNiceNameResource( $t, "miProxyFile", (uiRes("m_initAddAttr.kMIProxyFile")) );
        setCustomAttrNiceNameResource( $t, "miProxyBoundingBox", (uiRes("m_initAddAttr.kMIProxyBoundingBox")) );
        setCustomAttrNiceNameResource( $t, "miProxyBoundingBoxMin", (uiRes("m_initAddAttr.kMIProxyBoundingBoxMin")) );
        setCustomAttrNiceNameResource( $t, "miProxyBoundingBoxMinX", (uiRes("m_initAddAttr.kMIProxyBoundingBoxMinX")) );
        setCustomAttrNiceNameResource( $t, "miProxyBoundingBoxMinY", (uiRes("m_initAddAttr.kMIProxyBoundingBoxMinY")) );
        setCustomAttrNiceNameResource( $t, "miProxyBoundingBoxMinZ", (uiRes("m_initAddAttr.kMIProxyBoundingBoxMinZ")) );
        setCustomAttrNiceNameResource( $t, "miProxyBoundingBoxMax", (uiRes("m_initAddAttr.kMIProxyBoundingBoxMax")) );
        setCustomAttrNiceNameResource( $t, "miProxyBoundingBoxMaxX", (uiRes("m_initAddAttr.kMIProxyBoundingBoxMaxX")) );
        setCustomAttrNiceNameResource( $t, "miProxyBoundingBoxMaxY", (uiRes("m_initAddAttr.kMIProxyBoundingBoxMaxY")) );
        setCustomAttrNiceNameResource( $t, "miProxyBoundingBoxMaxZ", (uiRes("m_initAddAttr.kMIProxyBoundingBoxMaxZ")) );
        
        setCustomAttrNiceNameResource( $t, "miUpdateProxyBoundingBoxMode", (uiRes("m_initAddAttr.kUpdateBoundingBox")) );
  		setCustomAttrEnumResource( $t, "miUpdateProxyBoundingBoxMode", 0, (uiRes("m_initAddAttr.kProxyAndGeometry")) );
		setCustomAttrEnumResource( $t, "miUpdateProxyBoundingBoxMode", 1, (uiRes("m_initAddAttr.kProxyBoundingBox")) );
		setCustomAttrEnumResource( $t, "miUpdateProxyBoundingBoxMode", 2, (uiRes("m_initAddAttr.kGeometryBoundingBox")) );
		setCustomAttrEnumResource( $t, "miUpdateProxyBoundingBoxMode", 3, (uiRes("m_initAddAttr.kUpdateBoundingBoxNone")) );
    }

    // mentalrayGlobals
    //
    setCustomAttrNiceNameResource( "mentalrayGlobals", "miLabelGenerator", (uiRes("m_initAddAttr.kMILabelGenerator")) );
    setCustomAttrNiceNameResource( "mentalrayGlobals", "sunAndSkyShader", (uiRes("m_initAddAttr.kSunandSkyShader")) );
    setCustomAttrNiceNameResource( "mentalrayGlobals", "mrFactoryAutoload", (uiRes("m_initAddAttr.kMRFactoryAutoload")) );
    setCustomAttrNiceNameResource( "mentalrayGlobals", "regionRectX", (uiRes("m_initAddAttr.kRegionRectX")) );
    setCustomAttrNiceNameResource( "mentalrayGlobals", "regionRectY", (uiRes("m_initAddAttr.kRegionRectY")) );
    setCustomAttrNiceNameResource( "mentalrayGlobals", "regionRectWidth", (uiRes("m_initAddAttr.kRegionRectWidth")) );
    setCustomAttrNiceNameResource( "mentalrayGlobals", "regionRectHeight", (uiRes("m_initAddAttr.kRegionRectHeight")) );

    // createMentalRayGlobalsTab.mel
    //
    setCustomAttrNiceNameResource( "mia_physicalsky", "miSkyExposure", (uiRes("m_initAddAttr.kMISkyExposure")) );

    // mentalrayApproxEditor.mel
    //
    for( $t in { "subdiv", "mesh", "nurbsSurface" } ) {
        setCustomAttrNiceNameResource( $t, "miDisplaceApprox", (uiRes("m_initAddAttr.kMIDisplaceApprox")) );
        setCustomAttrNiceNameResource( $t, "miSurfaceApprox", (uiRes("m_initAddAttr.kMISurfaceApprox")) );
        setCustomAttrNiceNameResource( $t, "miCurveApprox", (uiRes("m_initAddAttr.kMICurveApprox")) );
        setCustomAttrNiceNameResource( $t, "miSubdivApprox", (uiRes("m_initAddAttr.kMISubdivApprox")) );
    }

    // mentalrayCustomTextEditor.mel
    //
    for( $t in { "nurbsSurface", 
        "mesh", 
        "ambientLight", 
        "directionalLight", 
        "pointLight", 
        "spotLight", 
        "camera" } ) 
    {
        setCustomAttrNiceNameResource( $t, "miText", (uiRes("m_initAddAttr.kMIText")) );
    }


	// xformManip for mental ray
	//
		setCustomAttrNiceNameResource( "xformManip", "miVisible", (uiRes("m_initAddAttr.kMiVisible")) );
		setCustomAttrEnumResource( "xformManip", "miVisible", 0, (uiRes("m_initAddAttr.kVisibleNo")) );
		setCustomAttrEnumResource( "xformManip", "miVisible", 1, (uiRes("m_initAddAttr.kVisibleYes")) );
		setCustomAttrEnumResource( "xformManip", "miVisible", 2, (uiRes("m_initAddAttr.kVisibleUseInherited")) );

		setCustomAttrNiceNameResource( "xformManip", "miTrace", (uiRes("m_initAddAttr.kMiTrace")) );
		setCustomAttrEnumResource( "xformManip", "miTrace", 0, (uiRes("m_initAddAttr.kTraceNo")) );
		setCustomAttrEnumResource( "xformManip", "miTrace", 1, (uiRes("m_initAddAttr.kTraceYes")) );
		setCustomAttrEnumResource( "xformManip", "miTrace", 2, (uiRes("m_initAddAttr.kTraceUseInherited")) );

		setCustomAttrNiceNameResource( "xformManip", "miShadow", (uiRes("m_initAddAttr.kMiShadow")) );
		setCustomAttrEnumResource( "xformManip", "miShadow", 0, (uiRes("m_initAddAttr.kShadowNo")) );
		setCustomAttrEnumResource( "xformManip", "miShadow", 1, (uiRes("m_initAddAttr.kShadowYes")) );
		setCustomAttrEnumResource( "xformManip", "miShadow", 2, (uiRes("m_initAddAttr.kShadowUseInherited")) );

		setCustomAttrNiceNameResource( "xformManip", "miCaustic", (uiRes("m_initAddAttr.kMiCaustic")) );
		setCustomAttrEnumResource( "xformManip", "miCaustic", 0, (uiRes("m_initAddAttr.kCausticHidden")) );
		setCustomAttrEnumResource( "xformManip", "miCaustic", 1, (uiRes("m_initAddAttr.kCausticDisabled")) );
		setCustomAttrEnumResource( "xformManip", "miCaustic", 2, (uiRes("m_initAddAttr.kCausticCastOnly")) );
		setCustomAttrEnumResource( "xformManip", "miCaustic", 3, (uiRes("m_initAddAttr.kCausticReceiveOnly")) );
		setCustomAttrEnumResource( "xformManip", "miCaustic", 4, (uiRes("m_initAddAttr.kCausticCastReceive")) );
		setCustomAttrEnumResource( "xformManip", "miCaustic", 5, (uiRes("m_initAddAttr.kCausticUseInherited")) );

		setCustomAttrNiceNameResource( "xformManip", "miGlobillum", (uiRes("m_initAddAttr.kMiGlobillum")) );
		setCustomAttrEnumResource( "xformManip", "miGlobillum", 0, (uiRes("m_initAddAttr.kGlobillumHidden")) );
		setCustomAttrEnumResource( "xformManip", "miGlobillum", 1, (uiRes("m_initAddAttr.kGlobillumDisabled")) );
		setCustomAttrEnumResource( "xformManip", "miGlobillum", 2, (uiRes("m_initAddAttr.kGlobillumCastOnly")) );
		setCustomAttrEnumResource( "xformManip", "miGlobillum", 3, (uiRes("m_initAddAttr.kGlobillumReceiveOnly")) );
		setCustomAttrEnumResource( "xformManip", "miGlobillum", 4, (uiRes("m_initAddAttr.kGlobillumCastReceive")) );
		setCustomAttrEnumResource( "xformManip", "miGlobillum", 5, (uiRes("m_initAddAttr.kGlobillumUseInherited")) );


    // Nonlinear deformers
    //
    setCustomAttrNiceNameResource( "nonLinear", "curvature", (uiRes("m_initAddAttr.kCurvature")) );
    setCustomAttrNiceNameResource( "nonLinear", "lowBound", (uiRes("m_initAddAttr.kLowBound")) );
    setCustomAttrNiceNameResource( "nonLinear", "highBound", (uiRes("m_initAddAttr.kHighBound")) );
    setCustomAttrNiceNameResource( "nonLinear", "startFlareX", (uiRes("m_initAddAttr.kStartFlareX")) );
    setCustomAttrNiceNameResource( "nonLinear", "startFlareZ", (uiRes("m_initAddAttr.kStartFlareZ")) );
    setCustomAttrNiceNameResource( "nonLinear", "endFlareX", (uiRes("m_initAddAttr.kEndFlareX")) );
    setCustomAttrNiceNameResource( "nonLinear", "endFlareZ", (uiRes("m_initAddAttr.kEndFlareZ")) );
    setCustomAttrNiceNameResource( "nonLinear", "curve", (uiRes("m_initAddAttr.kCurve")) );
    setCustomAttrNiceNameResource( "nonLinear", "amplitude", (uiRes("m_initAddAttr.kAmplitude")) );
    setCustomAttrNiceNameResource( "nonLinear", "wavelength", (uiRes("m_initAddAttr.kWavelength")) );
    setCustomAttrNiceNameResource( "nonLinear", "offset", (uiRes("m_initAddAttr.kOffset")) );
    setCustomAttrNiceNameResource( "nonLinear", "dropoff", (uiRes("m_initAddAttr.kNonlinearDropoff")) );
    setCustomAttrNiceNameResource( "nonLinear", "factor", (uiRes("m_initAddAttr.kFactor")) );
    setCustomAttrNiceNameResource( "nonLinear", "expand", (uiRes("m_initAddAttr.kExpand")) );
    setCustomAttrNiceNameResource( "nonLinear", "maxExpandPos", (uiRes("m_initAddAttr.kMaxExpandPos")) );
    setCustomAttrNiceNameResource( "nonLinear", "startSmoothness", (uiRes("m_initAddAttr.kStartSmoothness")) );
    setCustomAttrNiceNameResource( "nonLinear", "endSmoothness", (uiRes("m_initAddAttr.kEndSmoothness")) );
    setCustomAttrNiceNameResource( "nonLinear", "startAngle", (uiRes("m_initAddAttr.kStartAngle")) );
    setCustomAttrNiceNameResource( "nonLinear", "endAngle", (uiRes("m_initAddAttr.kEndAngle")) );
    setCustomAttrNiceNameResource( "nonLinear", "minRadius", (uiRes("m_initAddAttr.kMinRadius")) );
    setCustomAttrNiceNameResource( "nonLinear", "maxRadius", (uiRes("m_initAddAttr.kMaxRadius")) );
    setCustomAttrNiceNameResource( "nonLinear", "dropoffPosition", (uiRes("m_initAddAttr.kDropoffPosition")) );

    // joint node
    //
    setCustomAttrNiceNameResource( "joint", "lockInfluenceWeights", (uiRes("m_initAddAttr.kLockInfluenceWeights")) ); 


    // cMuscleStretch node
    //
    setCustomAttrNiceNameResource( "cMuscleStretch", "lengthOut", (uiRes("m_initAddAttr.kLengthOut")) ); 

    // cMuscleSpline node
    //
    setCustomAttrNiceNameResource( "cMuscleSpline", "curLen", (uiRes("m_initAddAttr.kCurLen")) ); 
    setCustomAttrNiceNameResource( "cMuscleSpline", "pctSquash", (uiRes("m_initAddAttr.kPercentSquash")) ); 
    setCustomAttrNiceNameResource( "cMuscleSpline", "pctStretch", (uiRes("m_initAddAttr.kPercentStretch")) );

    // cMuscleSmartConstraint node
    //
    setCustomAttrNiceNameResource( "cMuscleSmartConstraint", "trigger", (uiRes("m_initAddAttr.kTrigger")) );  


	// Extra attribute of "resolution" for Hardware Texturing resolution
    for( $t in { "anisotropic", 
        "blinn", 
        "lambert", 
        "oceanShader", 
        "hairTubeShader", 
        "phong", 
        "phongE", 
        "rampShader", 
        "useBackground", 
        "surfaceShader" } )
    {
        setCustomAttrNiceNameResource( $t, "resolution", (uiRes("m_initAddAttr.kResolution")) );
	}
        
    //stereoRigTransform node
    setCustomAttrNiceNameResource( "stereoRigTransform", "leftCam", (uiRes("m_initAddAttr.kLeftCam")) );
    setCustomAttrNiceNameResource( "stereoRigTransform", "rightCam", (uiRes("m_initAddAttr.kRightCam")) );
    setCustomAttrNiceNameResource( "stereoRigTransform", "centerCam", (uiRes("m_initAddAttr.kCenterCam")) );
    setCustomAttrNiceNameResource( "stereoRigTransform", "stereoRigType", (uiRes("m_initAddAttr.kStereoRigType")) );

    //ikHandle node
    setCustomAttrNiceNameResource( "ikHandle", "springRestPose", (uiRes("m_initAddAttr.kSpringRestPose")) );
    setCustomAttrNiceNameResource( "ikHandle", "springRestPoleVector", (uiRes("m_initAddAttr.kSpringRestPoleVector")) );
    setCustomAttrNiceNameResource( "ikHandle", "springAngleBias", (uiRes("m_initAddAttr.kSpringAngleBias")) );
    setCustomAttrNiceNameResource( "ikHandle", "springAngleBias_FloatValue", (uiRes("m_initAddAttr.kSpringAngleBiasFloatValue")) );
    setCustomAttrNiceNameResource( "ikHandle", "springAngleBias_Position", (uiRes("m_initAddAttr.kSpringAngleBiasPosition")) );
    setCustomAttrNiceNameResource( "ikHandle", "springAngleBias_Interp", (uiRes("m_initAddAttr.kSpringAngleBiasInterp")) );
    setCustomAttrEnumResource( "ikHandle", "springAngleBias_Interp", 0, (uiRes("m_initAddAttr.kSpringNone")) );
    setCustomAttrEnumResource( "ikHandle", "springAngleBias_Interp", 1, (uiRes("m_initAddAttr.kSpringLinear")) );
    setCustomAttrEnumResource( "ikHandle", "springAngleBias_Interp", 2, (uiRes("m_initAddAttr.kSpringSmooth")) );
    setCustomAttrEnumResource( "ikHandle", "springAngleBias_Interp", 3, (uiRes("m_initAddAttr.kSpringSpline")) );

    setCustomAttrNiceNameResource( "hikIKEffector", "pull", (uiRes("m_initAddAttr.kHikEffPull")) );
    setCustomAttrNiceNameResource( "hikIKEffector", "stiffness", (uiRes("m_initAddAttr.kHikEffResist")) );
    setCustomAttrNiceNameResource( "hikIKEffector", "PullOverride", (uiRes("m_initAddAttr.kHikEffPullOverride")) );
    setCustomAttrNiceNameResource( "hikIKEffector", "ResistOverride", (uiRes("m_initAddAttr.kHikEffResistOverride")) );
	
    // notes for any node that has  examples, attrPresets, or scripts that set notes
    for( $t in { "fluidShape", "fluidEmitter", "nCloth", "nParticle", "nurbsSurface", "heightField", "noise", "diskCache", "annotationShape", "locator", "transform", "FurDescription", "hairSystem" } ) {
        setCustomAttrNiceNameResource( $t, "notes", (uiRes("m_initAddAttr.kNotes")) );	 
    } 

	// ICEFlow plugin
	setCustomAttrNiceNameResource( "transform", "ManifestFile", (uiRes("m_initAddAttr.kManifestFile")) );
	setCustomAttrNiceNameResource( "transform", "FBXFile", (uiRes("m_initAddAttr.kExportedFbxFile")) );
	setCustomAttrNiceNameResource( "transform", "Version", (uiRes("m_initAddAttr.kInitiatorVersion")) );
	setCustomAttrNiceNameResource( "transform", "Initiator", (uiRes("m_initAddAttr.kInitiatorName")) );
	setCustomAttrNiceNameResource( "transform", "Language",	(uiRes("m_initAddAttr.kPreferredDelegateLanguage")) );
	setCustomAttrNiceNameResource( "transform", "GeometryCacheSet", (uiRes("m_initAddAttr.kGeometryCacheSetForExport")) );
	setCustomAttrNiceNameResource( "transform", "Selection", (uiRes("m_initAddAttr.kPreviousSelectionForDelegate")) );
	setCustomAttrNiceNameResource( "transform", "ICEFlowGeometryCached", (uiRes("m_initAddAttr.kPreserveObjectInDelegate")) );

    // mesh node extra attribute in Alembic
    //
    setCustomAttrNiceNameResource( "mesh", "noNormals", (uiRes("m_initAddAttr.kNoNormals")) );

    // dagNode node (ref. MAYA-42267)
    //
    setCustomAttrNiceNameResource( "dagNode", "hiddenInOutliner", (uiRes("m_initAddAttr.kHiddenInOutliner")) );
	setCustomAttrNiceNameResource( "dagNode", "useOutlinerColor", (uiRes("m_initAddAttr.kUseOutlinerColor")) );
	setCustomAttrNiceNameResource( "dagNode", "outlinerColor", (uiRes("m_initAddAttr.kOutlinerColor")) );

	string $solidName = (uiRes("m_initAddAttr.kSolid"));
	string $shellName = (uiRes("m_initAddAttr.kShell"));

	// bifrostContainer
	//
	setCustomAttrNiceNameResource( "bifrostContainer", "Liquid", (uiRes("m_initAddAttr.kLiquid")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "Pic", (uiRes("m_initAddAttr.kPic")) );

	setCustomAttrNiceNameResource( "bifrostContainer", "masterVoxelSize", (uiRes("m_initAddAttr.kMasterVoxelSize")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "masterVoxelSizeRenderFactor", (uiRes("m_initAddAttr.kMasterVoxelSizeRenderFactor")) );

	setCustomAttrNiceNameResource( "bifrostContainer", "density", (uiRes("m_initAddAttr.kMinDensity")) );

	setCustomAttrNiceNameResource( "bifrostContainer", "gravityMagnitude", (uiRes("m_initAddAttr.kGravityMagnitude")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "gravityDirection", (uiRes("m_initAddAttr.kGravityDirection")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "gravityDirectionX", (uiRes("m_initAddAttr.kGravityDirectionX")) ); 
	setCustomAttrNiceNameResource( "bifrostContainer", "gravityDirectionY", (uiRes("m_initAddAttr.kGravityDirectionY")) ); 
	setCustomAttrNiceNameResource( "bifrostContainer", "gravityDirectionZ", (uiRes("m_initAddAttr.kGravityDirectionZ")) ); 

	setCustomAttrNiceNameResource( "bifrostContainer", "emitEveryFrame", (uiRes("m_initAddAttr.kConstantEmission")) );

	setCustomAttrNiceNameResource( "bifrostContainer", "transportStepAdaptivity", (uiRes("m_initAddAttr.kTransportStepAdaptivity")) ); 
	setCustomAttrNiceNameResource( "bifrostContainer", "minSteps",  (uiRes("m_initAddAttr.kMinTransportSteps")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "maxSteps",  (uiRes("m_initAddAttr.kMaxTransportSteps")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "transportTimeScale",  (uiRes("m_initAddAttr.kTransportTimeScale")) );

	setCustomAttrNiceNameResource( "bifrostContainer", "dropletThreshold", (uiRes("m_initAddAttr.kDropletThreshold")) ); 
	setCustomAttrNiceNameResource( "bifrostContainer", "dropletMergeBackDepth", (uiRes("m_initAddAttr.kDropletMergeBackDepth")) ); 
	setCustomAttrNiceNameResource( "bifrostContainer", "surfaceBandWidth", (uiRes("m_initAddAttr.kSurfaceBandwidth")) ); 
	setCustomAttrNiceNameResource( "bifrostContainer", "interiorParticleDensity", (uiRes("m_initAddAttr.kInteriorParticleDensity")) ); 
	setCustomAttrNiceNameResource( "bifrostContainer", "surfaceParticleDensity", (uiRes("m_initAddAttr.kSurfaceParticleDensity")) ); 
	setCustomAttrNiceNameResource( "bifrostContainer", "solidVoxelScale", (uiRes("m_initAddAttr.kSolidVoxelScale")) ); 
	setCustomAttrNiceNameResource( "bifrostContainer", "forceVoxelScale", (uiRes("m_initAddAttr.kForceVoxelScale")) ); 
	setCustomAttrNiceNameResource( "bifrostContainer", "vorticityEnable", (uiRes("m_initAddAttr.kEnable")) ); 
	setCustomAttrNiceNameResource( "bifrostContainer", "vorticityDecay", (uiRes("m_initAddAttr.kDecay")) ); 
	setCustomAttrNiceNameResource( "bifrostContainer", "vorticityMult", (uiRes("m_initAddAttr.kMultiplier")) ); 
	setCustomAttrNiceNameResource( "bifrostContainer", "vorticityMax", (uiRes("m_initAddAttr.kMaximum")) ); 

	setCustomAttrNiceNameResource( "bifrostContainer", "Emitters", (uiRes("m_initAddAttr.kEmitters")));
	setCustomAttrNiceNameResource( "bifrostContainer", "Colliders", (uiRes("m_initAddAttr.kColliders")));
	setCustomAttrNiceNameResource( "bifrostContainer", "Accelerators", (uiRes("m_initAddAttr.kAccelerators")));
	setCustomAttrNiceNameResource( "bifrostContainer", "killplanes", (uiRes("m_initAddAttr.kKillplanes")));
	setCustomAttrNiceNameResource( "bifrostContainer", "Solid", $solidName);

	setCustomAttrNiceNameResource( "bifrostContainer", "AeroObject", (uiRes("m_initAddAttr.kAeroObject")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "SolidObject", (uiRes("m_initAddAttr.kSolidObject")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "AdaptiveMeshes", (uiRes("m_initAddAttr.kAdaptiveMeshes")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "airDensity", (uiRes("m_initAddAttr.kAirDensity")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "airTemperature", (uiRes("m_initAddAttr.kAirTemperature")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "smokeThreshold", (uiRes("m_initAddAttr.kBifrostContainerSmokeThreshold")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "flipParticleDensity", (uiRes("m_initAddAttr.kFlipParticleDensity")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "renderParticleDensity", (uiRes("m_initAddAttr.kRenderParticleDensity")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "surfaceTension", (uiRes("m_initAddAttr.kSurfaceTension")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "surfaceTensionEnable", (uiRes("m_initAddAttr.kSurfaceTensionEnable")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "viscosityScale", (uiRes("m_initAddAttr.kViscosityScale")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "adaptive", (uiRes("m_initAddAttr.kAdaptive")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "clipBBoxMax", (uiRes("m_initAddAttr.kClipBBoxMax")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "clipBBoxMin", (uiRes("m_initAddAttr.kClipBBoxMin")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "clipBBoxMaxX", (uiRes("m_initAddAttr.kClipBBoxMaxX")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "clipBBoxMaxY", (uiRes("m_initAddAttr.kClipBBoxMaxY")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "clipBBoxMaxZ", (uiRes("m_initAddAttr.kClipBBoxMaxZ")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "clipBBoxMinX", (uiRes("m_initAddAttr.kClipBBoxMinX")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "clipBBoxMinY", (uiRes("m_initAddAttr.kClipBBoxMinY")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "clipBBoxMinZ", (uiRes("m_initAddAttr.kClipBBoxMinZ")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "clipBBoxTransform", (uiRes("m_initAddAttr.kClipBBoxTransform")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "maxDepth", (uiRes("m_initAddAttr.kMaxDepth")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "minDepth", (uiRes("m_initAddAttr.kMinDepth")) );
	setCustomAttrNiceNameResource( "bifrostContainer", "transform", (uiRes("m_initAddAttr.kBifrostContainerTransform")) );


	// Bifrost attrs on meshes: accelerator
	// 
	setCustomAttrNiceNameResource( "mesh", "bifrostAcceleratorEnable", (uiRes("m_initAddAttr.kBifrostAcceleratorEnable")) );
	setCustomAttrNiceNameResource( "mesh", "bifrostAcceleratorMode", (uiRes("m_initAddAttr.kBifrostAcceleratorMode")) );
	setCustomAttrEnumResource( "mesh", "bifrostAcceleratorMode", 0, $solidName );
	setCustomAttrEnumResource( "mesh", "bifrostAcceleratorMode", 1, $shellName );
	setCustomAttrNiceNameResource( "mesh", "bifrostAcceleratorInfluence", (uiRes("m_initAddAttr.kBifrostAcceleratorInfluence")) );
	setCustomAttrNiceNameResource( "mesh", "bifrostAcceleratorInheritVelocity", (uiRes("m_initAddAttr.kBifrostAcceleratorInheritVelocity")) );
	setCustomAttrNiceNameResource( "mesh", "bifrostAcceleratorFalloffBandwidth", (uiRes("m_initAddAttr.kBifrostAcceleratorFalloffBandwidth")) );
	setCustomAttrNiceNameResource( "mesh", "bifrostAcceleratorDirectionMagnitude", (uiRes("m_initAddAttr.kBifrostAcceleratorDirectionMagnitude")) );
	setCustomAttrNiceNameResource( "mesh", "bifrostAcceleratorDirection", (uiRes("m_initAddAttr.kBifrostAcceleratorDirection")) );
	setCustomAttrNiceNameResource( "mesh", "bifrostAcceleratorDirectionX", (uiRes("m_initAddAttr.kBifrostAcceleratorDirectionX")) );
	setCustomAttrNiceNameResource( "mesh", "bifrostAcceleratorDirectionY", (uiRes("m_initAddAttr.kBifrostAcceleratorDirectionY")) );
	setCustomAttrNiceNameResource( "mesh", "bifrostAcceleratorDirectionZ", (uiRes("m_initAddAttr.kBifrostAcceleratorDirectionZ")) );
	setCustomAttrNiceNameResource( "mesh", "bifrostAcceleratorBoundaryLayerStrength", (uiRes("m_initAddAttr.kBifrostAcceleratorBoundaryLayerStrength")) );
	setCustomAttrNiceNameResource( "mesh", "bifrostAcceleratorBoundaryLayerBandwidth", (uiRes("m_initAddAttr.kBifrostAcceleratorBoundaryLayerBandwidth")) );

	// Bifrost attrs on meshes: collider
	// 
	setCustomAttrNiceNameResource( "mesh", "bifrostColliderEnable", (uiRes("m_initAddAttr.kBifrostColliderEnable")) );
	setCustomAttrNiceNameResource( "mesh", "bifrostColliderThickness", (uiRes("m_initAddAttr.kBifrostColliderThickness")) );
	setCustomAttrNiceNameResource( "mesh", "bifrostColliderMode", (uiRes("m_initAddAttr.kBifrostColliderMode")) );
	setCustomAttrEnumResource( "mesh", "bifrostColliderMode", 0, $solidName );
	setCustomAttrEnumResource( "mesh", "bifrostColliderMode", 1, $shellName );

	// Bifrost attrs on meshes: emitter
	// These attrs must be set in pairs, one for mesh, another for notifier
	string $label;

	$label = (uiRes("m_initAddAttr.kBifrostLiquidEnable")) ;
	setCustomAttrNiceNameResource( "mesh", "bifrostLiquidEnable", $label );
	setCustomAttrNiceNameResource( "bifrostAttrNotifier", "bifrostLiquidEnable", $label );
	$label = (uiRes("m_initAddAttr.kBifrostLiquidContinuousEmission")) ;
	setCustomAttrNiceNameResource( "mesh", "bifrostLiquidContinuousEmission", $label );
	setCustomAttrNiceNameResource( "bifrostAttrNotifier", "bifrostLiquidContinuousEmission", $label );
	$label = (uiRes("m_initAddAttr.kBifrostLiquidThickness")) ;
	setCustomAttrNiceNameResource( "mesh", "bifrostLiquidThickness", $label );
	setCustomAttrNiceNameResource( "bifrostAttrNotifier", "bifrostLiquidThickness", $label );
	$label = (uiRes("m_initAddAttr.kBifrostLiquidMode")) ;
	setCustomAttrNiceNameResource( "mesh", "bifrostLiquidMode", $label );
	setCustomAttrNiceNameResource( "bifrostAttrNotifier", "bifrostLiquidMode", $label );
	setCustomAttrEnumResource( "mesh", "bifrostLiquidMode", 0, $solidName );
	setCustomAttrEnumResource( "mesh", "bifrostLiquidMode", 1, $shellName );
	$label = (uiRes("m_initAddAttr.kBifrostLiquidDensity")) ;
	setCustomAttrNiceNameResource( "mesh", "bifrostLiquidDensity", $label );
	setCustomAttrNiceNameResource( "bifrostAttrNotifier", "bifrostLiquidDensity", $label );
	$label = (uiRes("m_initAddAttr.kBifrostLiquidExpansionRate")) ;
	setCustomAttrNiceNameResource( "mesh", "bifrostLiquidExpansionRate", $label );
	setCustomAttrNiceNameResource( "bifrostAttrNotifier", "bifrostLiquidExpansionRate", $label );
	$label = (uiRes("m_initAddAttr.kBifrostLiquidStictionStrength")) ;
	setCustomAttrNiceNameResource( "mesh", "bifrostLiquidStictionStrength", $label );
	setCustomAttrNiceNameResource( "bifrostAttrNotifier", "bifrostLiquidStictionStrength", $label );
	$label = (uiRes("m_initAddAttr.kBifrostLiquidStictionBandwidth")) ;
	setCustomAttrNiceNameResource( "mesh", "bifrostLiquidStictionBandwidth", $label );
	setCustomAttrNiceNameResource( "bifrostAttrNotifier", "bifrostLiquidStictionBandwidth", $label );

	$label = (uiRes("m_initAddAttr.kBifrostAeroEnable")) ;
	setCustomAttrNiceNameResource( "mesh", "bifrostAeroEnable", $label );
	setCustomAttrNiceNameResource( "bifrostAttrNotifier", "bifrostAeroEnable", $label );
	$label = (uiRes("m_initAddAttr.kBifrostAeroContinuousEmission")) ;
	setCustomAttrNiceNameResource( "mesh", "bifrostAeroContinuousEmission", $label );
	setCustomAttrNiceNameResource( "bifrostAttrNotifier", "bifrostAeroContinuousEmission", $label );
	$label = (uiRes("m_initAddAttr.kBifrostAeroThickness")) ;
	setCustomAttrNiceNameResource( "mesh", "bifrostAeroThickness", $label );
	setCustomAttrNiceNameResource( "bifrostAttrNotifier", "bifrostAeroThickness", $label );
	$label = (uiRes("m_initAddAttr.kBifrostAeroMode")) ;
	setCustomAttrNiceNameResource( "mesh", "bifrostAeroMode", $label );
	setCustomAttrNiceNameResource( "bifrostAttrNotifier", "bifrostAeroMode", $label );
	setCustomAttrEnumResource( "mesh", "bifrostAeroMode", 0, $solidName );
	setCustomAttrEnumResource( "mesh", "bifrostAeroMode", 1, $shellName );
	$label = (uiRes("m_initAddAttr.kBifrostAeroStictionStrength")) ;
	setCustomAttrNiceNameResource( "mesh", "bifrostAeroStictionStrength", $label );
	setCustomAttrNiceNameResource( "bifrostAttrNotifier", "bifrostAeroStictionStrength", $label );
	$label = (uiRes("m_initAddAttr.kBifrostAeroStictionBandwidth")) ;
	setCustomAttrNiceNameResource( "mesh", "bifrostAeroStictionBandwidth", $label );
	setCustomAttrNiceNameResource( "bifrostAttrNotifier", "bifrostAeroStictionBandwidth", $label );
	$label = (uiRes("m_initAddAttr.kBifrostAeroDensity")) ;
	setCustomAttrNiceNameResource( "mesh", "bifrostAeroDensity", $label );
	setCustomAttrNiceNameResource( "bifrostAttrNotifier", "bifrostAeroDensity", $label );
	$label = (uiRes("m_initAddAttr.kBifrostAeroTemperature")) ;
	setCustomAttrNiceNameResource( "mesh", "bifrostAeroTemperature", $label );
	setCustomAttrNiceNameResource( "bifrostAttrNotifier", "bifrostAeroTemperature", $label );

}
