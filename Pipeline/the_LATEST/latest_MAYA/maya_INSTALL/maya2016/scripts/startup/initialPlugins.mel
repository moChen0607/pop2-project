// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.


//
//
//  Creation Date:  May 1997
//
//  Description:
//      This script dynamicly load's DSO's based on preferences
//
//  Input Arguments:
//      None.
//
//  Return Value:
//      None.
//
//  Note:
//      None.
// 

{
	if(`optionVar -q loadNURBS` || !`optionVar -ex loadNURBS`)
	{
		catch (`dynamicLoad libNurbsUISlice.so`);
	}
	if(`optionVar -q loadPolygons` || !`optionVar -ex loadPolygons`)
	{
		catch (`dynamicLoad libPolyUISlice.so`);
	}

	if(`optionVar -q loadAnimation` || !`optionVar -ex loadAnimation`)
	{
		catch (`dynamicLoad libAnimUISlice.so`);
	}
	if(`optionVar -q loadDeformers` || !`optionVar -ex loadDeformers`)
	{
		catch (`dynamicLoad libDeformUISlice.so`);
	}
	if(`optionVar -q loadKinematics` || !`optionVar -ex loadKinematics`)
	{
		catch (`dynamicLoad libKinUISlice.so`);
	}

	if(`optionVar -q loadRendering` || !`optionVar -ex loadRendering`)
	{
		catch (`dynamicLoad libRenderUISlice.so`);
	}

	if(`optionVar -q loadProjectManager` || !`optionVar -ex loadProjectManager`)
	{
		catch (`dynamicLoad libProjectSlice.so`);
	}

	if(`optionVar -q loadHyperGraph` || !`optionVar -ex loadHyperGraph`)
	{
		catch (`dynamicLoad libExplorerSlice.so`);
	}

//	catch (`dynamicLoad libJasperSlice.so`);

	if(`optionVar -q loadSubdiv` || !`optionVar -ex loadSubdiv`)
	{
		catch (`dynamicLoad libSubdivEngine.so`);
		catch (`dynamicLoad libSubdiv.so`);
		catch (`dynamicLoad libSubdivUI.so`);
	}
	if(`optionVar -q loadDynamics` || !`optionVar -ex loadDynamics`)
	{
		catch (`dynamicLoad libDynUISlice.so`);
	}
	if ((`optionVar -q loadUrchin` || !`optionVar -ex loadUrchin`) ) {
		catch (`dynamicLoad libUrchinSlice.so`);
		catch (`dynamicLoad libUrchinUISlice.so`);
	}
	// Load plugin modules.  Ignore any errors produced.
	catch ( `initialPluginLoad` );
}
