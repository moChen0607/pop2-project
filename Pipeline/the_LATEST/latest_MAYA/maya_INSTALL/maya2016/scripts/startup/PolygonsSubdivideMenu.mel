// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.


global proc PolygonsSubdivideMenu(string $parent)
//
// Description:
//		Polygon Subdivide menu
//
{
	if (! `isTrue "PolygonsExists"`) return;
	
	setParent -m $parent; 

	if (`menu -q -ni $parent` == 0) {

			menuItem -label (uiRes("m_PolygonsSubdivideMenu.kSubdivProxy")) -ecr true 
				-image "polySmoothProxy.png"
				-annotation (getRunTimeCommandAnnotation("SmoothProxy"))
				-command "SmoothProxy"
				-dragMenuCommand "SmoothProxy"
				-dragDoubleClickCommand "SmoothProxyOptions"; 

			menuItem -optionBox 1 
				-image "polySmoothProxy.png" 
				-annotation (getRunTimeCommandAnnotation("SmoothProxyOptions"))
				-enableCommandRepeat false 
				-command "SmoothProxyOptions"; 

			menuItem -label (uiRes("m_PolygonsSubdivideMenu.kRemoveSubdivProxyMirror")) -ecr true 
				-image "polyUnmirrorSmoothProxy.png"
				-annotation `runTimeCommand -q -ann UnmirrorSmoothProxy`
				-dragDoubleClickCommand "performUnmirrorSmoothProxy 1"
				-dragMenuCommand "performUnmirrorSmoothProxy 0" 
				-command "UnmirrorSmoothProxy"; 

			menuItem -optionBox 1 -i "polyUnmirrorSmoothProxy.png" 
				-annotation (uiRes("m_PolygonsSubdivideMenu.kRemoveSubdivProxyMirrorOptionsAnnot"))
				-ecr false -c "UnmirrorSmoothProxyOptions";

			menuItem -label (uiRes("m_PolygonsSubdivideMenu.kNewCreasePolyTool")) -ecr true
				-i "polyCrease.png" 
				-annotation (uiRes("m_PolygonsSubdivideMenu.kNewCreasePolyToolAnnot"))
				-c "PolyCreaseTool" -dmc "PolyCreaseTool" -ddc "PolyCreaseToolOptions";
			
			menuItem -optionBox 1 -ecr false 
				-i "polyCrease.png" 
				-annotation (uiRes("m_PolygonsSubdivideMenu.kNewCreasePolyToolOptionsAnnot"))
				-c "PolyCreaseToolOptions";

			menuItem -divider true;

			menuItem
				-label (uiRes("m_PolygonsSubdivideMenu.kNewTogProxyDisplay"))
				-annotation (uiRes("m_PolygonsSubdivideMenu.kNewTogSmoothDisplayAnnot"))
				-image "polyToggleProxy.png"
				-command "SmoothingDisplayToggle"
				;

			menuItem
				-label (uiRes("m_PolygonsSubdivideMenu.kNewBothProxySubdivDisplay"))
				-annotation (uiRes("m_PolygonsSubdivideMenu.kNewBothProxySubdivDisplayAnnot"))
				-image "polyToggleProxySubdiv.png"
				-command "SmoothingDisplayShowBoth"
				;

		setParent -m ..;

	}
}







