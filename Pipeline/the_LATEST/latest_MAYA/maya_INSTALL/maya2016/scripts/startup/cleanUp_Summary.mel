// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//-----------------------------------------------------------------------
//
//  Creation Date:  January 16, 2003
//
//  Procedure Name:
//      cleanUp_Summary
//
//  Description:
//
//		Utility function used by the various components of the
//		"Optimize Scene Size" function (otherwise known as scene cleanup).
//
//		Records the results of a particular cleanup operation.  A short 
//		summary is given (just the name of the operation), as well as a
//		long one that describes how the operation modified the scene 
//		(how many nodes were removed, for example).  The short summaries
//		is written to the result line, while the long summaries are
//		written to the Script Editor.
//
//  Input Arguments: 
//
//		$short - short summary to be written to result line
//		$long - longer summary to be written to the Script Editor
//
//	Return Value: None.
//
//	Related Functions:
//
//		For progress reporting and interruptability, user-defined cleanup
//		steps might want to make use of the following utility functions:
//
//		cleanUp_StartProgress() - called before an operation begins
//		cleanUp_SetProgress() - called as the operation is running, to 
//								update the progress bar.
//		cleanUp_EndProgress() - called to signal that the operation is 
//								finished.
//		cleanUp_CheckInterrupt() - called between cleanup operations to
//								   detect when a previous operation has
//								   been interrupted.
//		cleanUp_Summary() - called to report the results of cleanup 
//							operations.
//
//-----------------------------------------------------------------------

global proc cleanUp_Summary( string $short, string $long )
{
	//	global variables are used to store the summaries of the
	//	various operations.
	//
	global string $gCleanUpSummary[];
	global string $gCleanUpSteps[];

	$gCleanUpSummary[size($gCleanUpSummary)] = $long;
	$gCleanUpSteps[size($gCleanUpSteps)] = $short;
}

