// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
// Creation Date:  12 Nov 2006
//
//<doc>
//<name containsMultibyte>
//
//<synopsis>
//		containsMultibyte(string $str)
//
//<description>
//		Determine whether or not a string contains multibyte characters.
//
//<returns>
//      int: returns 1 if the string contains multibyte characters
//           or 0 if it does not. 
//
//<examples>
//
//  // Determine whether or not a string contains multibyte characters
//  // 
//  // The result will be 0 if the string contains no multibyte characters
//  int numFound = containsMultibyte("Test String");
//  // Result: 0
//
//  // The result will be non-zero if the string contains 
//  // multibyte characters
//  // 
//  int numFound = containsMultibyte($localizedString);
//  // Result: 1
//
//</doc>
//
global proc int containsMultibyte(string $str)
{
    if (sizeBytes($str) > size($str))
    {
        return 1;
    }
    else 
    {
        return 0;
    }
}


