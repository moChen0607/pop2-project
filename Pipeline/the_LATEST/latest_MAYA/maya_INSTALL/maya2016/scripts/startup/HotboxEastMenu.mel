// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
// Creation Date:  31 May 1997
//
//  Procedure Name:
//      HotboxEastMenu
//
//  Description:
//		Create the user customizable Hotbox East Menu for hotbox
//
//  Input Arguments:
//      parent to parent the menu to.
//
//  Return Value:
//      None.
//


global proc HotboxEastMenu( string $parent )
{
	setParent -m $parent;
	if( `menu -q -ni $parent` != 0 ) {
		//
		//	Menu is built already - just clear it.
		//
		menu -e -deleteAllItems $parent; 
	}

	//  
	//  Create menu items
	//

	menuItem -rp "N" -label (localizedUIComponentLabel("Help Line"))
		-annotation (getRunTimeCommandAnnotation("ToggleHelpLine"))
		-command "toggleUIComponentVisibility \"Help Line\"; updatePrefsMenu";

	menuItem -rp "NE" -label (localizedUIComponentLabel("Status Line"))
		-annotation (getRunTimeCommandAnnotation("ToggleStatusLine"))
		-command "toggleUIComponentVisibility \"Status Line\"; updatePrefsMenu";

	menuItem -rp "E" -label (localizedHotboxMenuItem("Attributes"))
		-subMenu true
		-annotation (uiRes("m_HotboxEastMenu.kEditAttributesAnnot"));

		menuItem -rp "E" -label (localizedUIComponentLabel("Channel Box"))
			-annotation (getRunTimeCommandAnnotation("ToggleChannelBox"))
			-command ("if (`optionVar -q channelsLayersSeparate`) {\r\n\ttoggleUIComponentVisibility \"Channel Box\";\r\n} else {\r\n\ttoggleUIComponentVisibility \"Channel Box / Layer Editor\";\r\n}\r\n; " +
						"updatePrefsMenu");
			
		menuItem -rp "S" -label (localizedUIComponentLabel("Layer Editor"))
			-annotation (getRunTimeCommandAnnotation("ToggleLayerBar"))
			-command ("if (`optionVar -q channelsLayersSeparate`) {\r\n\ttoggleUIComponentVisibility \"Layer Editor\";\r\n} else {\r\n\ttoggleUIComponentVisibility \"Channel Box / Layer Editor\";\r\n}\r\n; " +
						"updatePrefsMenu");

		menuItem -rp "W" -label (localizedUIComponentLabel("Attribute Editor"))
			-annotation (getRunTimeCommandAnnotation("ToggleAttributeEditor"))
			-command "toggleUIComponentVisibility \"Attribute Editor\"; updatePrefsMenu";

		menuItem -rp "N" -label (localizedUIComponentLabel("Tool Settings"))
			-annotation (getRunTimeCommandAnnotation("ToggleToolSettings"))
			-command "toggleUIComponentVisibility \"Tool Settings\"; updatePrefsMenu";

	setParent -m $parent;

	menuItem -rp "SE" -label (localizedUIComponentLabel("Tool Box"))
		-annotation (getRunTimeCommandAnnotation("ToggleToolbox"))
		-command "toggleUIComponentVisibility \"Tool Box\"; updatePrefsMenu";

	menuItem -rp "S" -label (localizedUIComponentLabel("Time Slider"))
		-annotation (getRunTimeCommandAnnotation("ToggleTimeSlider"))
		-command "toggleUIComponentVisibility \"Time Slider\"; updatePrefsMenu";

	menuItem -rp "SW" -label (localizedUIComponentLabel("Range Slider"))
		-enable true
		-annotation (getRunTimeCommandAnnotation("ToggleRangeSlider"))
		-command "toggleUIComponentVisibility \"Range Slider\"; updatePrefsMenu";

	menuItem -rp "W" -label (localizedUIComponentLabel("Shelf"))
		-annotation (getRunTimeCommandAnnotation("ToggleShelf"))
		-command "toggleUIComponentVisibility \"Shelf\"; updatePrefsMenu";

	menuItem -rp "NW" -label (localizedUIComponentLabel("Command Line"))
		-annotation (getRunTimeCommandAnnotation("ToggleCommandLine"))
		-command "toggleUIComponentVisibility \"Command Line\"; updatePrefsMenu";
}
