// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
// Creation Date:  Jun, 1997
//
//  Description:
//		This file is called to update the 6th icon
//		to the left of the shelf.
//
//  Input Arguments:
//      None
//
//  Return Value:
//      None.
//
global proc changeToolIcon() {
	
	string $currentTool = `currentCtx`;
	global string $gSelect;
	global string $gLasso;
	global string $gPaintSelect;
	global string $gMove;
	global string $gRotate;
	global string $gScale;
	global string $gCurrentSacredTool;
	global string $gNonSacredToolWidget;
	global string $gNonSacredTool;
	global string $gToolBox;

	if ($currentTool == $gCurrentSacredTool) {
	}
	else if ($currentTool == $gSelect) {
		$gCurrentSacredTool = $gSelect;
	}
	else if ($currentTool == $gLasso) {
		$gCurrentSacredTool = $gLasso;
	} 
	else if ($currentTool == $gPaintSelect) {
		$gCurrentSacredTool = $gPaintSelect;
	} 
	else if ($currentTool == $gMove) {
		$gCurrentSacredTool = $gMove;
	} 
	else if ($currentTool == $gScale) {
		$gCurrentSacredTool = $gScale;
	} 
	else if ($currentTool == $gRotate) {
		$gCurrentSacredTool = $gRotate;
	} 
	else if ( `contextInfo -exists $currentTool` ){
		string $newIcon = `contextInfo -image1 $currentTool`;
				
		if ($newIcon != "") {
			if (`flowLayout -q -exists $gToolBox`) {
				setParent $gToolBox;		
				toolButton -edit -enable true
					-t $currentTool
					-i1 $newIcon
					$gNonSacredToolWidget;
				
				string $selected = `toolCollection -q -sl toolCluster`;
				if ( $selected == "" || $selected == "NONE" || $currentTool != `toolButton -q -t $selected` ) {
					toolButton -e -sl $gNonSacredToolWidget;
				}
			}
		} else {
			if (`toolButton -q -exists $gNonSacredToolWidget`) {
				 toolButton -edit -enable false 
					-i1 "vacantCell.png" $gNonSacredToolWidget;
			}
		}
		$gNonSacredTool = $currentTool;
	}

}
