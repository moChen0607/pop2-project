// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//  Procedure Name:
//      buildPreferenceMenu
//
//  Description:
//		Create the UI Elements menu
//
//  Input Arguments:
//      parent to parent the menu to.
//
//  Return Value:
//      None.
//

global proc buildPreferenceMenu ( string $parent ) {

	//	Clear out all menu items, and rebuild
	//	the menu to keep the menu in sync across
	//	the different Maya UI
	//
	if( `menu -q -ni $parent` != 0 ) {
		//
		//  Menu is built already - just return
		//
		updatePrefsMenu;
		return;
	}

	setParent -m $parent;

	//  
	//  Create menu items
	//
	menuItem -label (localizedUIComponentLabel("Status Line"))
		-checkBox true
		-annotation (getRunTimeCommandAnnotation("ToggleStatusLine"))
		-command "ToggleStatusLine"
		statusLineItem;

	menuItem -label (localizedUIComponentLabel("Shelf"))
		-checkBox true 
		-annotation (getRunTimeCommandAnnotation("ToggleShelf"))
		-command "ToggleShelf"
		shelfItem;

	menuItem -label (localizedUIComponentLabel("Time Slider"))
		-checkBox true 
		-annotation (getRunTimeCommandAnnotation("ToggleTimeSlider"))
		-command "ToggleTimeSlider"
		timelineItem;

	menuItem -label (localizedUIComponentLabel("Range Slider"))
		-enable true
		-checkBox true
		-annotation (getRunTimeCommandAnnotation("ToggleRangeSlider"))
		-command "ToggleRangeSlider"
		playbackRangeItem;

	menuItem -label (localizedUIComponentLabel("Command Line"))
		-checkBox true 
		-annotation (getRunTimeCommandAnnotation("ToggleCommandLine"))
		-command "ToggleCommandLine"
		commandLineItem;

	menuItem -label (localizedUIComponentLabel("Help Line"))
		-checkBox true 
		-annotation (getRunTimeCommandAnnotation("ToggleHelpLine"))
		-command "ToggleHelpLine"
		helpLineItem;

	menuItem -divider true;

	menuItem -label (localizedUIComponentLabel("Tool Box"))
		-checkBox true 
		-annotation (getRunTimeCommandAnnotation("ToggleToolbox"))
		-command "ToggleToolbox"
		toolboxItem;

	menuItem -divider true;

	menuItem -label (localizedUIComponentLabel("Attribute Editor"))
		-checkBox true 
		-annotation (getRunTimeCommandAnnotation("ToggleAttributeEditor"))
		-command "ToggleAttributeEditor"
		attrEditorItem;

	menuItem -label (localizedUIComponentLabel("Tool Settings"))
		-checkBox true 
		-annotation (getRunTimeCommandAnnotation("ToggleToolSettings"))
		-command "ToggleToolSettings"
		toolSettingsItem;

	menuItem -label (localizedUIComponentLabel("Channel Box"))
		-checkBox true 
		-annotation (getRunTimeCommandAnnotation("ToggleChannelBox"))
		-command "ToggleChannelBox"
		channelsItem;

	menuItem -label (localizedUIComponentLabel("Layer Editor"))
		-checkBox true 
		-annotation (getRunTimeCommandAnnotation("ToggleLayerBar"))
		-command "ToggleLayerBar"
		layersItem;

	menuItem -label (localizedUIComponentLabel("Channel Box / Layer Editor"))
		-checkBox true 
		-annotation (getRunTimeCommandAnnotation("ToggleChannelsLayers"))
		-command "ToggleChannelsLayers"
		channelsLayersItem;

	menuItem -divider true;

	menuItem -label (uiRes("m_buildPreferenceMenu.kHideUIElements")) 
		-annotation (getRunTimeCommandAnnotation("HideUIElements"))
		-command "HideUIElements";

	menuItem -label (uiRes("m_buildPreferenceMenu.kShowUIElements")) 
		-annotation (getRunTimeCommandAnnotation("ShowUIElements"))
		-command "ShowUIElements";

	menuItem -label (uiRes("m_buildPreferenceMenu.kRestoreUIElements"))
		-annotation (getRunTimeCommandAnnotation("RestoreUIElements"))
		-command "RestoreUIElements";

	setParent -menu ..;

	//	Run the proc that keeps the checkboxes in sync
	//	with what decorations on Maya's windows are shown
	//	or not shown
	//
	updatePrefsMenu;
}
