// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
// Creation Date:  13 April 1997
//
//
//  Procedure Name:
//      ModCurvesMenu
//
//  Description:
//		Create the MODELLING->Curves menu
//
//  Input Arguments:
//      parent to parent the menu to.
//
//  Return Value:
//      None.
//

global proc ModCurvesMenu( string $parent )
{
	int $dimWhenNoSelect = 0;

	setParent -m $parent;
	if( `menu -q -ni $parent` != 0 ) {
		//
		//	Menu is built already - just return
		//
		return;
	}
	menuItem -label (uiRes("m_ModCurvesMenu.kCVCurveTool"))
		-annotation (uiRes("m_ModCurvesMenu.kCVCurveToolAnnot"))
		-image "curveCV.png"
		-c "setToolTo curveContextCV" cvCurveItem;
		menuItem -optionBox true -image "curveCV.png"
			-annotation (uiRes("m_ModCurvesMenu.kCVCurveToolOptionsAnnot"))
			-c "setToolTo curveContextCV; toolPropertyWindow"
			cvCurveDialogItem;
	menuItem -label (uiRes("m_ModCurvesMenu.kEPCurveTool")) 
		-annotation (uiRes("m_ModCurvesMenu.kEPCurveToolAnnot"))
		-image "curveEP.png"
		-c "setToolTo curveContextEP" epCurveItem;
		menuItem -optionBox true -image "curveEP.png"
			-annotation (uiRes("m_ModCurvesMenu.kEPCurveToolOptionsAnnot"))
			-c "setToolTo curveContextEP; toolPropertyWindow"
			 epCurveDialogItem;
	menuItem -label (uiRes("m_ModCurvesMenu.kPencilCurveTool")) 
		-annotation (uiRes("m_ModCurvesMenu.kPencilCurveToolAnnot"))
		-image "pencil.png"
		-c "setToolTo pencilContext" pencilCurveItem;
		menuItem -optionBox true -image "pencil.png"
			-annotation (uiRes("m_ModCurvesMenu.kPencilCurveToolOptionsAnnot"))
			-c "setToolTo pencilContext; toolPropertyWindow" 
			pencilCurveDialogItem;

	menuItem -d true;

	menuItem -label (uiRes("m_ModCurvesMenu.kThreePointCircularArcTool"))
        -annotation (uiRes("m_ModCurvesMenu.kThreePointCircularArcToolAnnot"))
        -image "threePointArc.png"
        -c "setToolTo threePointArcContext" threePointArcItem;
        menuItem -optionBox true -image "threePointArc.png"
            -annotation (uiRes("m_ModCurvesMenu.kThreePointArcOptionsAnnot"))
            -c "setToolTo threePointArcContext; toolPropertyWindow"
            threePointArcDialogItem;

    menuItem -label (uiRes("m_ModCurvesMenu.kTwoPointCircularArcTool"))
       -annotation (uiRes("m_ModCurvesMenu.kTwoPointCircularArcToolAnnot"))
       -image "twoPointArc.png"
       -c "setToolTo twoPointArcContext" twoPointArcItem;
      menuItem -optionBox true -image "twoPointArc.png"
         -annotation (uiRes("m_ModCurvesMenu.kTwoPointArcOptionsAnnot"))
            -c "setToolTo twoPointArcContext; toolPropertyWindow"
            twoPointArcDialogItem;

    menuItem -d true;


	menuItem -label (uiRes("m_ModCurvesMenu.kOffsetCurve"))
		-c "performOffsetCurve 0;"
		-dmc "performOffsetCurve 2"
		-i "offsetCurve.png"
		-annotation (uiRes("m_ModCurvesMenu.kOffsetCurveAnnot"))
		offsetCrvItem;
		menuItem -optionBox true -i "offsetCurve.png"
			-annotation (uiRes("m_ModCurvesMenu.kOffsetCurveOptionsAnnot"))
			-c "performOffsetCurve 1"
			offsetCurveDialogItem;
	if( $dimWhenNoSelect )
		dimWhen -f "SomethingSelected" ($parent+"|offsetCrvItem");

	menuItem -label (uiRes("m_ModCurvesMenu.kOffsetCurveOnSurface"))
		-c "performOffsetCos 0;"
		-dmc "performOffsetCos 2"
		-i "offsetCos.png"
		-annotation (uiRes("m_ModCurvesMenu.kOffsetCurveOnSurfaceAnnot"))
		offsetCosItem;
		menuItem -optionBox true -i "offsetCos.png"
			-annotation (uiRes("m_ModCurvesMenu.kOffsetCurveOnSurfaceOptionsAnnot"))
			-c "performOffsetCos 1"
			offsetCosDialogItem;
	if( $dimWhenNoSelect )
		dimWhen -f "SomethingSelected" ($parent+"|offsetCosItem");

	menuItem -label (uiRes("m_ModCurvesMenu.kFilletCurve")) 
		-annotation (uiRes("m_ModCurvesMenu.kFilletCurveAnnot"))
		-c "performFilletCurve 0" -dmc "performFilletCurve 2" 
		-i "fillet.png" crvFilletItem;
		menuItem -optionBox true  -i "fillet.png" 
			-annotation (uiRes("m_ModCurvesMenu.kFilletCurveOptionsAnnot"))
			-c "performFilletCurve 1" 
			filletCurveDialogItem;
	if( $dimWhenNoSelect )
		dimWhen -f "SomethingSelected" ($parent+"|crvFilletItem");

	menuItem -d true;

	menuItem -label (uiRes("m_ModCurvesMenu.kDuplicateCurves")) 
			-c "performDuplicateCurve 0"
			-dmc "performDuplicateCurve 2" 
			-annotation (uiRes("m_ModCurvesMenu.kDuplicateCurvesAnnot"))
			-i "duplicateCurve.png" duplicateCurveItem ;
	menuItem -optionBox true -i "duplicateCurve.png"
			-annotation (uiRes("m_ModCurvesMenu.kDuplicateCurvesOptionsAnnot"))
			-c "performDuplicateCurve 1"
			duplicateCurveDialogItem;
	if( $dimWhenNoSelect )
   		dimWhen -f "SomethingSelected" ($parent+"|duplicateCurveItem");

	menuItem -label (uiRes("m_ModCurvesMenu.kFitBSpline"))
		-c "performFitBspline 0;"
		-dmc "performFitBspline 2"
		-annotation (uiRes("m_ModCurvesMenu.kFitBSplineAnnot"))
		-i "fitBSpline.png"
		fitBsplineItem;
		menuItem -optionBox true -i "fitBSpline.png"
			-annotation (uiRes("m_ModCurvesMenu.kFitBSplineOptionsAnnot"))
			-c "performFitBspline 1"
			fitBsplineDialogItem;
	if( $dimWhenNoSelect )
		dimWhen -f "SomethingSelected" ($parent+"|fitBsplineItem");
}

