// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

displayString -replace -value "All mental ray Shaders" m_initDefaultFilters.kAllMentalRayShaders;
displayString -replace -value "All Render Classifications" m_initDefaultFilters.kAllRenderClassifications;
displayString -replace -value "All Shading Nodes" m_initDefaultFilters.kAllShadingNodes;
displayString -replace -value "Asset" m_initDefaultFilters.kAsset;
displayString -replace -value "Asset Nodes" m_initDefaultFilters.kAssetNodes;
displayString -replace -value "Bake Sets" m_initDefaultFilters.kBakeSets;
displayString -replace -value "Cameras" m_initDefaultFilters.kCameras;
displayString -replace -value "Cameras and Image Planes" m_initDefaultFilters.kCamerasAndImagePlanes;
displayString -replace -value "Characters" m_initDefaultFilters.kCharacters;
displayString -replace -value "Clips" m_initDefaultFilters.kClips;
displayString -replace -value "Cluster Sets" m_initDefaultFilters.kClusterSets;
displayString -replace -value "mental ray Output Shaders" m_initDefaultFilters.kContourOutputMentalrayOutputShaders;
displayString -replace -value "Deformer Sets" m_initDefaultFilters.kDeformerSets;
displayString -replace -value "Driven by Anim Curve" m_initDefaultFilters.kDrivenByAnimCurve;
displayString -replace -value "Driven by Driven Key" m_initDefaultFilters.kDrivenByDrivenKey;
displayString -replace -value "Driven by Expression" m_initDefaultFilters.kDrivenByExpression;
displayString -replace -value "Geometry" m_initDefaultFilters.kGeometry;
displayString -replace -value "Hidden" m_initDefaultFilters.kHidden;
displayString -replace -value "IkHandles" m_initDefaultFilters.kIkHandles;
displayString -replace -value "Image Planes" m_initDefaultFilters.kImagePlanes;
displayString -replace -value "Joint Cluster Sets" m_initDefaultFilters.kJointClusterSets;
displayString -replace -value "Joints" m_initDefaultFilters.kJoints;
displayString -replace -value "Keyable" m_initDefaultFilters.kKeyable;
displayString -replace -value "Lattice Sets" m_initDefaultFilters.kLatticeSets;
displayString -replace -value "Lights" m_initDefaultFilters.kLights;
displayString -replace -value "Lights and Light Sets" m_initDefaultFilters.kLightsAndLightSets;
displayString -replace -value "Lights and Post Process" m_initDefaultFilters.kLightsAndPostProcess;
displayString -replace -value "Lights and Post Process except Shader Glow" m_initDefaultFilters.kLightsAndPostProcessExceptShader;
displayString -replace -value "Lights and Textures" m_initDefaultFilters.kLightsAndTextures;
displayString -replace -value "Lights: Illum. by Default" m_initDefaultFilters.kLightsIllumByDefault;
displayString -replace -value "Lights: Illum. Linked Objects" m_initDefaultFilters.kLightsIllumLinkedObject;
displayString -replace -value "Light Sets" m_initDefaultFilters.kLightsSets;
displayString -replace -value "Material Facades" m_initDefaultFilters.kMaterialFacades;
displayString -replace -value "Materials" m_initDefaultFilters.kMaterials;
displayString -replace -value "Materials, Textures and Lights" m_initDefaultFilters.kMaterialsTexturesAndLights;
displayString -replace -value "mental ray Contour Contrast Shaders" m_initDefaultFilters.kMentalrayContourContrastShade;
displayString -replace -value "mental ray Contour Shaders" m_initDefaultFilters.kMentalrayContourShaders;
displayString -replace -value "mental ray Contour Store Shaders" m_initDefaultFilters.kMentalrayContourStoreShaders;
displayString -replace -value "mental ray Data Conversion Shaders" m_initDefaultFilters.kMentalrayDataConversionShader;
displayString -replace -value "mental ray Displacement Shaders" m_initDefaultFilters.kMentalrayDisplacementShaders;
displayString -replace -value "mental ray Environment Shaders" m_initDefaultFilters.kMentalrayEnvironmentShaders;
displayString -replace -value "mental ray Geometry Shaders" m_initDefaultFilters.kMentalrayGeometryShaders;
displayString -replace -value "mental ray Layers" m_initDefaultFilters.kMentalrayLayers;
displayString -replace -value "mental ray Lens Shaders" m_initDefaultFilters.kMentalrayLensShaders;
displayString -replace -value "mental ray Light Shaders" m_initDefaultFilters.kMentalrayLightShaders;
displayString -replace -value "mental ray Lightmap Shaders" m_initDefaultFilters.kMentalrayLightmapShaders;
displayString -replace -value "mental ray Materials" m_initDefaultFilters.kMentalrayMaterials;
displayString -replace -value "mental ray Misc. Shaders" m_initDefaultFilters.kMentalrayMiscShaders;
displayString -replace -value "mental ray Output Shaders" m_initDefaultFilters.kMentalrayOutputShaders;
displayString -replace -value "mental ray Photon Emitter Shaders" m_initDefaultFilters.kMentalrayPhotonEmitterShaders;
displayString -replace -value "mental ray Photon Shaders" m_initDefaultFilters.kMentalrayPhotonShaders;
displayString -replace -value "mental ray Photon Volume Shaders" m_initDefaultFilters.kMentalrayPhotonVolumeShaders;
displayString -replace -value "mental ray Sample Compositing Shaders" m_initDefaultFilters.kMentalraySampleCompositingShaders;
displayString -replace -value "mental ray Shadow Shaders" m_initDefaultFilters.kMentalrayShadowShaders;
displayString -replace -value "mental ray State Shaders" m_initDefaultFilters.kMentalrayStateShaders;
displayString -replace -value "mental ray Texture Shaders" m_initDefaultFilters.kMentalrayTextureShaders;
displayString -replace -value "mental ray Volume Shaders" m_initDefaultFilters.kMentalrayVolumeShaders;
displayString -replace -value "Cameras" m_initDefaultFilters.kMulilisterCamera;
displayString -replace -value "NURBS Objects" m_initDefaultFilters.kNURBSObjects;
displayString -replace -value "No Shader Glow" m_initDefaultFilters.kNoShaderGlow;
displayString -replace -value "Non Linear Sets" m_initDefaultFilters.kNonLinearSets;
displayString -replace -value "Optical FX" m_initDefaultFilters.kOpticalFX;
displayString -replace -value "Partitions" m_initDefaultFilters.kPartitons;
displayString -replace -value "Polygon Objects" m_initDefaultFilters.kPolygonObjects;
displayString -replace -value "Post Process" m_initDefaultFilters.kPostProcess;
displayString -replace -value "Published" m_initDefaultFilters.kPublished;
displayString -replace -value "Render Nodes" m_initDefaultFilters.kRenderNodes;
displayString -replace -value "Render Passes" m_initDefaultFilters.kRenderPass;
displayString -replace -value "Render Pass Sets" m_initDefaultFilters.kRenderPassSet;
displayString -replace -value "Render Utilities" m_initDefaultFilters.kRenderUtilities;
displayString -replace -value "Renderable Object Sets" m_initDefaultFilters.kRenderableObjectSets;
displayString -replace -value "Renderable Objects" m_initDefaultFilters.kRenderableObjects;
displayString -replace -value "Renderable Objects" m_initDefaultFilters.kRenderableObjectsDynamicsExists;
displayString -replace -value "Rendering Nodes" m_initDefaultFilters.kRenderingNodes;
displayString -replace -value "Rotate" m_initDefaultFilters.kRotate;
displayString -replace -value "Scale" m_initDefaultFilters.kScale;
displayString -replace -value "Scale Rotate Translate" m_initDefaultFilters.kScaleRotateTranslate;
displayString -replace -value "Sets" m_initDefaultFilters.kSets;
displayString -replace -value "Shader Glow" m_initDefaultFilters.kShaderGlow;
displayString -replace -value "Shading Groups" m_initDefaultFilters.kShadingGroups;
displayString -replace -value "Shading Groups and Textures" m_initDefaultFilters.kShadingGroupsAndTextures;
displayString -replace -value "Shading Groups, Lights and Post Process" m_initDefaultFilters.kShadingGroupsLightsAndPostProcess;
displayString -replace -value "Shading Groups, Materials, Textures and Lights" m_initDefaultFilters.kShadingGroupsMaterialsTexturesLights;
displayString -replace -value "Shading Groups, Textures and Lights" m_initDefaultFilters.kShadingGroupsTexturesAndLights;
displayString -replace -value "Shading Nodes" m_initDefaultFilters.kShadingNodes;
displayString -replace -value "Skin Cluster Sets" m_initDefaultFilters.kSkinClusterSets;
displayString -replace -value "Subdiv Objects" m_initDefaultFilters.kSubdivObjects;
displayString -replace -value "Texture Placements" m_initDefaultFilters.kTexturePlacements;
displayString -replace -value "Textures" m_initDefaultFilters.kTextures;
displayString -replace -value "2D Textures" m_initDefaultFilters.kTextures2D;
displayString -replace -value "3D Textures" m_initDefaultFilters.kTextures3D;
displayString -replace -value "Translate" m_initDefaultFilters.kTranslate;
displayString -replace -value "Lights and Light Sets" m_initDefaultFilters.kUnionLightsAndLightSets;
displayString -replace -value "Materials and Shader Glow" m_initDefaultFilters.kUnionMaterialsShaderGlow;
displayString -replace -value "Shading Groups and Materials" m_initDefaultFilters.kUnionMaterialsShadingGroups;
displayString -replace -value "Renderable Objects and Renderable Object Sets" m_initDefaultFilters.kUnionObjectShapeObjectSet;
displayString -replace -value "User Defined" m_initDefaultFilters.kUserDefined;
displayString -replace -value "Uses Image File" m_initDefaultFilters.kUsesImageFile;
