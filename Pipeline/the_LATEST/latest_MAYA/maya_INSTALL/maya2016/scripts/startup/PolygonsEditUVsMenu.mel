// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.


//
// Description:
//		Polygon UV creation menu
//
global proc PolygonsEditUVsMenu(string $parent)
{
	if (! `isTrue "PolygonsExists"`) return;
	
	PolygonsEditTextureMenu $parent 0 "ls -sl";
}

global proc PolygonsEditTextureMenu(string $parent, int $creator, string $selectCmd)
//
// Description:
//		Polygon Edit UVs menu
//
{

	setParent -m $parent; 

	if (`menu -q -ni $parent` == 0) {

// Normalize

		menuItem -label (uiRes("m_PolygonsEditUVsMenu.kPolyUVsNormalizeUVs"))   -ecr true
			-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsNormalizeUVsAnnot"))
			-image "polyNormalizeUVs.png"
			-dmc "performPolyForceUV normalize 2"
			-c	 "NormalizeUVs" normalizePolyUVsItem;
		menuItem -optionBox 1
			-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsNormalizeUVsOptionAnnot"))
			-image "polyNormalizeUVs.png"
			-ecr false 
			-c "performPolyForceUV normalize 1" normalizePolyUVsOptionItem;

// Unitize

		string $unitizeLabel = (uiRes("m_PolygonsEditUVsMenu.kPolyUVsUnitizeLabel"));
		string $createUnitizedUVs = (uiRes("m_PolygonsEditUVsMenu.kPolyUVsCreateUnitizedUVs"));
		string $prefix = ($creator == 0 ? "" : ( "PolyRequestUVSetName \"" +$createUnitizedUVs+ "\" ") );
		string $cmd = $prefix + "performPolyForceUVArgList";
		string $version = "\"1\"";
		string $args0 = ("{\"0\", \"unitize\", \"" + $selectCmd + "\", \"" + ($creator == 1 ? "1" : "0") + "\"}");
		string $args1 = ("{\"1\", \"unitize\", \"" + $selectCmd + "\", \"" + ($creator == 1 ? "1" : "0") + "\"}");
		string $args2 = ("{\"2\", \"unitize\", \"" + $selectCmd + "\", \"" + ($creator == 1 ? "1" : "0") + "\"}");
		string $suffix = ($creator == 0 ? " \"\"" : "");
		string $dmc = "performPolyForceUVArgList \"1\" {\"2\", \"unitize\", \"ls -sl\", \"0\"} \"\"";
		string $c = ($cmd + " " + $version + " " + $args0 + $suffix);
		menuItem
			-label $unitizeLabel
			-ecr true 
			-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsUnitizeUVsAnnot"))
			-image "polyUnitizeUVs.png"
			-dmc $dmc
			-c	 $c unitizePolyUVsItem;
		string $c = ($cmd + " " + $version + " " + $args1 + $suffix);
		menuItem -optionBox 1
			-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsUnitizeUVsOptionAnnot"))
			-image "polyUnitizeUVs.png"
			-ecr false 
			-c $c unitizePolyUVsOptionItem;


		menuItem -label (uiRes("m_PolygonsEditUVsMenu.kPolyUVsFlipUVs"))   -ecr true
			-iol (uiRes("m_PolygonsEditUVsMenu.kFlipUvIconOverlay")) 
			-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsFlipUVsAnnot")) 
			-image "polyFlipUVs.png"
			-dmc "performPolyForceUV flip 2"
			-c	 "FlipUVs" flipUVItem;
		menuItem -optionBox 1
			-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsFlipUVsOptionAnnot"))
			-image "polyFlipUVs.png"
			-ecr false 
			-c "performPolyForceUV flip 1" flipUVOptionItem;

		// m2.1 Rotate uvs about vertex
		menuItem -label (uiRes("m_PolygonsEditUVsMenu.kPolyUVsRotateUVs"))  -ecr true
			-i "polyTextureRotateUV.png"
			-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsRotateUVsAnnot")) 
			-dmc "performPolyRotateUVs 2"
			-ddc "performPolyRotateUVs 1"
			-c "RotateUVs"
			rotatePolyUVsUVItem;
		menuItem -optionBox 1
			-ecr false
			-i "polyTextureRotateUV.png"
			-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsRotateUVsOptionAnnot")) 
			-c "performPolyRotateUVs 1"
			rotatePolyUVsOptionItem;

		menuItem -label (uiRes("m_PolygonsEditUVsMenu.kPolyUVsLayoutRectangle"))   -ecr true -i "polyUVRectangle.png"
			-annotation (getRunTimeCommandAnnotation("LayoutUVRectangle"))
			-dmc "polygonsMenuItemToShelf \"polyPerformAction polyUVRectangle v 0\""
			-c "LayoutUVRectangle" layoutUVRectangleTextureItem;

		menuItem -divider true;


		menuItem -label (uiRes("m_PolygonsEditUVsMenu.kPolyUVsGridUVs")) 
			-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsGridUVsAnnot")) 
			-c "performPolyGridUV 0" -i "polyGridUV.png";
		menuItem -optionBox 1
			-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsGridUVsOptionAnnot")) 
			-c "performPolyGridUV 1" -ecr false -i "polyGridUV.png";

		menuItem -label (uiRes("m_PolygonsEditUVsMenu.kPolyUVsAlignUVs")) 
			-c "performTextureViewAlignUVsOptions false"
			-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsAlignUVsAnnot"))
			-image "polyAlignUVs.png" ;
		menuItem -optionBox true
			-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsAlignUVsOptionAnnot"))
			-image "polyAlignUVs.png"
			-ecr false
			-c "performTextureViewAlignUVsOptions true";



			menuItem -label (uiRes("m_PolygonsEditUVsMenu.kPolyUVsWarpImage")) 
				-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsWarpImageAnnot")) 
				-echoCommand true
				-dragMenuCommand "WarpImageOptions"
				-c "WarpImageOptions" 
				-i "polyWarpImage.png"
				layoutPolyUVsWarpImageItem;



		menuItem -divider true;

		menuItem -label (uiRes("m_PolygonsEditUVsMenu.kPolyUVsMapUVBorder"))   -ecr true
			-i "polyMapUVBorder.png"
			-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsMapUVBorderAnnot")) 
			-ddc "performPolyUntangleUV map 1"
			-dmc "performPolyUntangleUV map 2"
			-c	 "MapUVBorder" mapUVBorderItem;
		menuItem -optionBox 1 -i "polyMapUVBorder.png" 
				-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsMapUVBorderOptionAnnot"))  
				-ecr false 
				-c "performPolyUntangleUV map 1" mapPolyUVsBorderOptionItem;

		menuItem -label (uiRes("m_PolygonsEditUVsMenu.kPolyUVsStraightenUVBorder")) 
			-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsStraightenUVBorderAnnot")) 
			-i "polyStraightenUVBorder.png"
			-c "performPolyStraightenUV 0";
		menuItem -optionBox 1
			-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsStraightenUVBorderOptionAnnot")) 
			-i "polyStraightenUVBorder.png"
			-c "performPolyStraightenUV 1" -ecr false;


		menuItem -divider true;

// relax, unfold and layout
	menuItem -label (uiRes("m_PolygonsEditUVsMenu.kOptimizeUVs"))   -ecr true
		-version "2015"
		-i "polyRelaxUVShell.png"
		-annotation (uiRes("m_PolygonsEditUVsMenu.kOptimzeUVsAnnot")) 
		-c	 "OptimzeUVs";

	menuItem -optionBox 1 -i "polyRelaxUVShell.png" 
		-annotation (uiRes("m_PolygonsEditUVsMenu.kOptimizeUVsOptionsAnnot"))  
		-ecr false 
		-c "OptimzeUVsOptions";

		menuItem -label (uiRes("m_PolygonsEditUVsMenu.kPolyUVsUnfoldUVs")) 
			-version "2015"
			-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsUnfoldUVsAnnot")) 
			-echoCommand true
			-dragMenuCommand "performUnfold 2"
			-c "performUnfold 0" 
			-i "textureEditorUnfoldUVsLarge.png"
			unfoldPolyUVsItem;
		menuItem -optionBox true
			-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsUnfoldUVsOptionAnnot")) 
			-c "performUnfold 1"
			-i "textureEditorUnfoldUVsLarge.png"
			unfoldPolyUVsOptItem;

		menuItem -label (uiRes("m_PolygonsEditUVsMenu.kPolyUVsLayoutUVs")) 
			-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsLayoutUVsAnnot")) 
			-c "performPolyLayoutUV 0" -i "polyLayoutUV.png";
		menuItem -optionBox 1
			-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsLayoutUVsOptionAnnot")) 
			-c "performPolyLayoutUV 1" -ecr false -i "polyLayoutUV.png";


		menuItem -divider true;

			menuItem -label (uiRes("m_PolygonsEditUVsMenu.kPolyUVsCutUVs"))   -ecr true -i "polyMapCut.png"
				-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsCutUVsAnnot")) 
				-dmc "polygonsMenuItemToShelf \"polyPerformAction polyMapCut e 0\""
				-c "CutUVs" cutPolyUVsTextureItem;

			menuItem -label (uiRes("m_PolygonsEditUVsMenu.kPolyUVsSplitUVs"))   -ecr true -i "polySplitUVs.png"
				-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsSplitUVsAnnot")) 
				-c "polySplitTextureUV" splitPolyUVsTextureItem;

			menuItem -label (uiRes("m_PolygonsEditUVsMenu.kPolyUVsSewUVs"))   -ecr true -i "polyMapSew.png"
				-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsSewUVsAnnot")) 
				-dmc "polygonsMenuItemToShelf \"polyPerformAction polyMapSew e 0\""
				-c "SewUVs" sewPolyUVsTextureItem;

			menuItem -label (uiRes("m_PolygonsEditUVsMenu.kPolyUVsMoveAndSewUVs")) 
				-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsMoveAndSewUVsAnnot")) 
				-c "performPolyMapSewMove 0" -i "polyMoveSew.png";
			menuItem -optionBox 1 
				-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsMoveAndSewUVsOptionAnnot")) 
				-c "performPolyMapSewMove 1" -ecr false -i "polyMoveSew.png";
			
			menuItem -label (uiRes("m_PolygonsEditUVsMenu.kPolyUVsMergeUVs")) 
				-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsMergeUVsAnnot")) 
				-c "performPolyMergeUV 0" -i "polyMergeUV.png" ;
			
			menuItem -optionBox 1
				-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsMergeUVsOptionAnnot")) 
				-c "performPolyMergeUV 1" -ecr false -i "polyMergeUV.png" ;

			menuItem -label (uiRes("m_PolygonsEditUVsMenu.kPolyUVsDeleteUVs"))   -ecr true -i "polyMapDel.png"
				-annotation (uiRes("m_PolygonsEditUVsMenu.kPolyUVsDeleteUVsAnnot")) 
				-dmc "polygonsMenuItemToShelf \"polyPerformAction polyMapDel f 0\""
				-c "DeleteUVs" delPolyUVsTextureItem;

		menuItem -divider true;
		
		menuItem 
			-enableCommandRepeat false 
        	-label (uiRes("m_PolygonsEditUVsMenu.kUVTextureEditor"))  
			-annotation (uiRes("m_PolygonsEditUVsMenu.kUVTexureEditorAnnot"))
			-image "textureEditor.png"
			-command "TextureViewWindow";

		setParent -m ..;

	}

}
