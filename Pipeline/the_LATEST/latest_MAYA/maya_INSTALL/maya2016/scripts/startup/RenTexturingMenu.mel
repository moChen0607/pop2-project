// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
// Creation Date:  31 January 2001
//
//  Procedure Name:
//      RenTexturingMenu
//
//  Description:
//		Create the RENDERING->Texturing menu
//
//  Input Arguments:
//      parent to parent the menu to.
//
//  Return Value:
//      None.
//

global proc RenTexturingMenu( string $parent )
{
	setParent -menu $parent;
	if( `menu -q -ni $parent` != 0 ) {
		//
		//	Menu is built already - just return
		//
		return;
	}

	// Painting
	menuItem -d true -dividerLabel (uiRes("m_RenTexturingMenu.kTexturingPainting"));
	
	// 3D Paint Tool.
	string $cmd = "Art3dPaintTool";
	string $annot = getRunTimeCommandAnnotation($cmd);
	menuItem -label (uiRes("m_RenTexturingMenu.kPaintTool")) 
		-image "art3dPaint.png"
		-annotation $annot
		-c $cmd
		art3dPaintItem;

		$cmd = "Art3dPaintToolOptions";
		$annot = getRunTimeCommandAnnotation($cmd);
		menuItem -optionBox true 
			-image "art3dPaint.png"
			-label (uiRes("m_RenTexturingMenu.kPaintToolOptionBox")) 
			-annotation $cmd
			-c $cmd
			art3dPaintDialogItem;
	
	// PSD
	menuItem -d true -dividerLabel (uiRes("m_RenTexturingMenu.kTexturingPSD"));
	
	menuItem -label (uiRes("m_RenTexturingMenu.kCreatePSDNetwork")) 
			-annotation (uiRes("m_RenTexturingMenu.kCreatePSDNetworkAnnotation")) 
			-image "createPsdNetwork.png"
		        -c "photoShopPaintTex" 
			createPsdTextureItem;
	menuItem -label (uiRes("m_RenTexturingMenu.kEditPSDNetwork")) 
			-annotation (uiRes("m_RenTexturingMenu.kEditPSDNetworkAnnotation")) 
			-image "editPsdNetwork.png"
		        -c "photoshopEditTexture" 
			editPsdTextureItem;
	menuItem -label (uiRes("m_RenTexturingMenu.kUpdatePSDNetworks")) 
			-annotation (uiRes("m_RenTexturingMenu.kUpdatePSDNetworksAnnotation")) 
			-image "updatePsdNetwork.png"
		        -c "psdUpdateTextures" 
			updatePsdTextureItem;

	// Projection
	menuItem -d true -dividerLabel (uiRes("m_RenTexturingMenu.kTexturingProjection"));
	
	//  Reference Objects
	refObjFeature();
	
	// Nurbs
	menuItem -d true -dividerLabel (uiRes("m_RenTexturingMenu.kTexturingNurbs"));

	menuItem -label (uiRes("m_RenTexturingMenu.kNURBSTexturePlacementTool")) 
		-i "texturePlacement.png"
		-annotation (uiRes("m_RenTexturingMenu.kNURBSTexturePlacementToolAnnotation")) 
		-c "NURBSTexturePlacementTool" 
		texturePlacementItem;
		menuItem -optionBox true -i "texturePlacement.png"
			-annotation (uiRes("m_RenTexturingMenu.kNURBSTexturePlacementToolOptionBox")) 
			-c "NURBSTexturePlacementToolOptions" 
			texturePlacementDialogItem;

}
