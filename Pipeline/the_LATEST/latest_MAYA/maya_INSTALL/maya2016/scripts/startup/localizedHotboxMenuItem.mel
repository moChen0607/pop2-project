// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  Feb 07, 2006
//
//  Description:
//      This script defines the procedure for getting the localized hotbox menu item.
//


//
//  Procedure Name:
//      localizedHotboxMenuItem
//
//  Description:
//		Returns the localized hotbox menu item.
//
//  Input Arguments:
//		The english version of the hotbox menu item.
//
//  Return Value:
//      The localized version of the hotbox menu item.
//
global proc string localizedHotboxMenuItem(string $menuItemEN)
{
	string $menuItem = "";
	switch($menuItemEN)
	{
		case "Hotbox Style":
			 $menuItem = (uiRes("m_localizedHotboxMenuItem.kHotboxStyle"));
			 break;	 
		case "Zones and Menu Rows":
			 $menuItem = (uiRes("m_localizedHotboxMenuItem.kZonesAndMenuRows"));
			 break;
		case "Zones Only":
			 $menuItem = (uiRes("m_localizedHotboxMenuItem.kZonesOnly"));
			 break;
		case "Center Zone Only":
			 $menuItem = (uiRes("m_localizedHotboxMenuItem.kCenterZoneOnly"));
			 break;		
		case "NURBS Mask":
			 $menuItem = (uiRes("m_localizedHotboxMenuItem.kNURBSMask"));
			 break;
		case "Hierarchy":
			 $menuItem = (uiRes("m_localizedHotboxMenuItem.kHierarchy"));
			 break;
		case "Animation Mask":
			 $menuItem = (uiRes("m_localizedHotboxMenuItem.kAnimationMask"));	 
			 break;
		case "Deformations Mask":
			 $menuItem = (uiRes("m_localizedHotboxMenuItem.kDeformationsMask"));
			 break;
		case "Dynamics Mask":
			 $menuItem = (uiRes("m_localizedHotboxMenuItem.kDynamicsMask"));	 
			 break;
		case "Polygons Mask":
			 $menuItem = (uiRes("m_localizedHotboxMenuItem.kPolygonsMask"));	 
			 break;
		case "Rendering Mask":
			 $menuItem = (uiRes("m_localizedHotboxMenuItem.kRenderingMask"));	 
			 break;
		case "Object/Components":
			 $menuItem = (uiRes("m_localizedHotboxMenuItem.kObjectComponents"));
			 break;		
		case "Set Editor":
			 $menuItem = (uiRes("m_localizedHotboxMenuItem.kSets"));			 
			 break;				
		case "Dynamic Relationships":
			 $menuItem = (uiRes("m_localizedHotboxMenuItem.kDynamicRelationships"));			 
			 break;				
		case "Attributes":
			 $menuItem = (uiRes("m_localizedHotboxMenuItem.kAttributes"));
			 break;				
			 
		default:
			 string $invalid = (uiRes("m_localizedHotboxMenuItem.kNoMenuItem"));
			 error (`format -s $menuItemEN $invalid`);
			 break;			 
	}
	return $menuItem;			 				
}

