// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

global proc string[] stringArrayMoveItem(
										 string $originalArray[],
										 int $itemPosition,						
										 int $direction
										 ){
//
//  Description:
//		This proc moves an item up or down one position in a stringArray.
//
//	Arguments:
//		string $originalArray[] the string array to modify
//		int $itemPosition the current position in the arrayof the item to move
//		int $direction 1=move down, -1=move up
//		
//	Return:
//		the modified string array
	
	string $result[];
	int $newPosition;
	
	//make sure we can move the item
	if ($newPosition > 1 || $newPosition < `size $originalArray`){
		$newPosition = $itemPosition + $direction;
	} else {
		error (uiRes("m_stringArrayMoveItem.kItemIsAlreadyAtStartOrEndOfTheArray"));
		return $result;
	}
	
	int $i;
	int $numItems = `size $originalArray`;
	
	//move up
	if ($direction == -1){
		for ($i=0;$i<$numItems;$i++){//need to loop 1 time less than size of array
			
			if ($i < $newPosition){
				$result[$i] = $originalArray[$i];
			}
			
			else if ($i == $newPosition){
				//if ($newPosition == $i){
				$result[$i] = $originalArray[$itemPosition];
				$result[$i+1] = $originalArray[$i];
				$i++;
				$newPosition--;
				
			} 
			
			else {

				$result[$i] = $originalArray[$i];
			}
		}
	}
	else //move down
	{
		for ($i=0;$i<$numItems;$i++){
			
			if ($i < $itemPosition){
				$result[$i] = $originalArray[$i];
			}
			
			
			else if ($i == $itemPosition){
				$result[$i] = $originalArray[$newPosition];
				$result[$i+1] = $originalArray[$itemPosition];
				$i++;

			} 
			
			else {
				$result[$i] = $originalArray[$i];
			} 
			
		}
		
	}
	return $result;

}
