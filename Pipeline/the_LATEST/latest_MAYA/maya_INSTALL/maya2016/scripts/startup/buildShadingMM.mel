// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  17 June 1997
//
//
//  Description:
//      This implements the Shading Marking Menu.
//





global proc doShadingMenuStyle(string $mode, int $isActiveOnly) {

	string $currPanel = `getPanel -withFocus`;
	if ("" != $currPanel && ("modelPanel" == `getPanel -to $currPanel`)) {
		modelEditor -e -da $mode -ao $isActiveOnly $currPanel;
		
		switch ($mode) {
		case "boundingBox":
		case "points":
		case "wireframe":
			modelEditor -e -displayLights "default" -displayTextures off $currPanel;
			break;
		}
	}
}


global proc buildShadingMM()
//
// Creates a marking menu that allows the user
// to select shading modes. It reuses
// the name tempMM for the name of the menu, to
// ensure that there's only one of these at
// any one time.
{
    if( `popupMenu -exists tempMM` )
    {
        deleteUI tempMM;
    }

    popupMenu -mm 1 -b 1 -aob 1 -p `findPanelPopupParent` tempMM;


	menuItem -rp "N" -label (uiRes("m_buildShadingMM.kPoints"))  
		-c ("doShadingMenuStyle \"points\" 0");

	menuItem -rp "NE" -label (uiRes("m_buildShadingMM.kSmoothShadedActive"))  
		-c ("doShadingMenuStyle \"smoothShaded\" 1");

	menuItem -rp "E" -label (uiRes("m_buildShadingMM.kSmoothShaded"))  
		-c ("doShadingMenuStyle \"smoothShaded\" 0");

	menuItem -rp "SE" -label (uiRes("m_buildShadingMM.kFlatShaded"))  
		-c ("doShadingMenuStyle \"flatShaded\" 0");

	menuItem -rp "S" -label (uiRes("m_buildShadingMM.kFlatShadedActive"))  
		-c ("doShadingMenuStyle \"flatShaded\" 1");
		
	menuItem -rp "SW" -label (uiRes("m_buildShadingMM.kBoundingBox"))  
		-c ("doShadingMenuStyle \"boundingBox\" 0");

	menuItem -rp "W" -label (uiRes("m_buildShadingMM.kWireframe"))  
		-c ("doShadingMenuStyle \"wireframe\" 0");

	setParent -m ..;
}
