// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  17 June 1997
//
//
//  Description:
//      This implements the Selection Polygon Marking Menu.
//



global proc doSelectPolygonMM() 
{
	menuItem -rp "N" -label (uiRes("m_buildPolyMM.kVertices"))  
		-c "selectMode -co; selectType -pv 1 -pe 0 -pf 0 -puv 0; select -cl;";
	menuItem -rp "E" -label (uiRes("m_buildPolyMM.kEdges"))  
		-c "selectMode -co; selectType -pv 0 -pe 1 -pf 0 -puv 0; select -cl;";
	menuItem -rp "S" -label (uiRes("m_buildPolyMM.kFaces"))  
		-c "selectMode -co; selectType -pv 0 -pe 0 -pf 1 -puv 0; select -cl;";
	menuItem -rp "W" -label (uiRes("m_buildPolyMM.kUVs")) 
		-c "selectMode -co; selectType -pv 0 -pe 0 -pf 0 -puv 1; select -cl;";
    setParent -m ..;
}


global proc buildPolyMM()
//
// Creates a marking menu that allows the user
// to select Polygon masks. It reuses
// the name tempMM for the name of the menu, to
// ensure that there's only one of these at
// any one time.
{
    if( `popupMenu -exists tempMM` )
    {
        deleteUI tempMM;
    }

	global string $gSelect;
	setToolTo $gSelect;

    popupMenu -alt 1 -mm 1 -b 1 -aob 1 -p `findPanelPopupParent` -pmc "doSelectPolygonMM" tempMM;

}





