// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//  Creation Date:  04 January 1999
//
//
//synopsis
//		int AWIsASubsetOfStringArray(string[] $subList, string[] $mainList)
//
//description
//		Determine if a list is a subset of another list.
//
//flags
//		string[]	$subList	Smaller list to test for membership
//		string[]	$mainList	Large list to search for $subList members
//
//returns
//		int : 1 if, and only if, every item in $subList has at least
//		one occurrence in $mainList.  0 is returned otherwise.
//
//examples
//  string $array1[] = `sphere`;
//  // Result: nurbsSphere1 makeNurbSphere1 //
//  string $array2[] = {"nurbsSphere1"};
//  // Result: nurbsSphere1 //
//  int $isSub = AWIsASubsetOfStringArray($array2, $array1);
//  // Result: 1 //
//  $isSub = AWIsASubsetOfStringArray($array1, $array2);
//  // Result: 0 //
//
//
global proc int AWIsASubsetOfStringArray(string $list1[], string $list2[])
{
	int    $result = 1;
	string $item;
	
	for ($item in $list1) {
		if (0 == AWNumberOfOccurrencesInStringArray($item, $list2)) {
			$result = 0;
			break;
		}
	}
	
	return $result;
}

