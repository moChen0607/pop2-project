// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
// Creation Date:  17 June 1997
//
//
//  Procedure Name:
//      updateLayerStates
//
//  Description:
//		This procedure modifies layer hide and template states.
//
//  Input Arguments:
//      $mode - which property is being modified
//		$state - the new state.
//
//  Return Value:
//      None.
//
global proc updateLayerStates( string $mode, int $state )
{
	global int $gHideLayerSetting;
	global int $gTemplateLayerSetting;

	switch ($mode) {
	case "-template":
		switch ($state) {
		case 0:
			templateLayer -all 0;
			break;
		case 1:
			templateLayer -noncurrent 1;
			hideShowLayer -all showHidden;
			break;
		}
		if (`menuItem -exists hideNonCurrentLayersItem`) {
			menuItem -e -cb 0 hideNonCurrentLayersItem;
			menuItem -e -cb $state templateNonCurrentLayersItem;
		}
		$gTemplateLayerSetting = !$gTemplateLayerSetting;
		$gHideLayerSetting = 0;
		break;
	case "-hide":
		switch ($state) {
		case 0:
			hideShowLayer -all showHidden;
			break;
		case 1:
			hideShowLayer -noncurrent hide;
			templateLayer -all 0;
			break;
		}
		if (`menuItem -exists hideNonCurrentLayersItem`) {
			menuItem -e -cb $state hideNonCurrentLayersItem;
			menuItem -e -cb 0 templateNonCurrentLayersItem;
		}
		$gHideLayerSetting = !$gHideLayerSetting;
		$gTemplateLayerSetting = 0;
		break;
	}
}

