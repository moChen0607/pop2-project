// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

global proc templateLayer( string $state, int $setting )
//
//
// Creation Date:	28 June 1996
//
//
//	Procedure Name:
//		templateLayer
//
//	Description:
//		This procedure queries the layer popup for the current
//		layer, and templates/untemplates the members of that
//		layer, or templates/untemplates the members of all layers,
//		based on the arguments passed to the proc.
//
//	Input Arguments:
//		$state, either -all or -active.
//		$setting, either "0" or "1"
//
//	Return Value:
//		None.
//
{
	//
	// Get the currently active "layer"
	//
	string $activeLayerName = `optionMenu -q -v layerPopup`;
	
    // If the layer is the universe, template/untemplate all
    //
	if ( $activeLayerName == "Universe" )
		$state = "-all";

	switch( $state ) {

		case "-active":
			// Template/untemplate the active 'layer'
			//
			toggle -template -state $setting $activeLayerName;

			break;

		case "-all":

			// Template/untemplate all the sets which are layers
			//
			string $allLayers[] = `listAllLayers`;
			for( $item in $allLayers )
			{
				toggle -template -state $setting $item;
			}
			break;

		case "-noncurrent":

			//
			// Template/untemplate all the sets which are layers
			// except for the current layer.
			//
			string $allLayers[] = `listAllLayers`;
			for( $item in $allLayers )
			{
				if( $item != $activeLayerName )
				{
					toggle -template -state $setting $item;
				}
			}
			break;
	}
}
