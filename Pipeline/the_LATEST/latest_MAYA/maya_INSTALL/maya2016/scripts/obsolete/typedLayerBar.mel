// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
// Creation Date: Oct 19, 1999
//
// Description:
//              This implements the group of controls to switch between 
//              Layer Bars.  
//

global string $gRenderLayerBar;
global string $gDisplayLayerBar;
global string $gLayerTypeMenu;
global proc layerTypeChangedCB()
{
	global string $gRenderLayerBar;
	global string $gDisplayLayerBar;
	global string $gLayerTypeMenu;

	string $current = `optionMenu -q -v $gLayerTypeMenu`;
	if ( $current == "Display Layers" )
	{
		frameLayout -e -vis false $gRenderLayerBar;
		frameLayout -e -vis true $gDisplayLayerBar;
		optionVar -stringValue whatLayerBarType "display";
	}
	else if ( $current == "Render Layers" )
	{
		frameLayout -e -vis false $gDisplayLayerBar;
		frameLayout -e -vis true $gRenderLayerBar;
		optionVar -stringValue whatLayerBarType "render";
	}
}
global proc createTypedLayerBar ( string $parent )
{
	global string $gRenderLayerBar;
	global string $gDisplayLayerBar;
	global string $gLayerTypeMenu;
	global string $layerWorkForm;

	string $layerBarType = "display";

	if( `optionVar -exists whatLayerBarType` ){
		$layerBarType = `optionVar -q whatLayerBarType`;
	}else{
		optionVar -stringValue whatLayerBarType $layerBarType;
	}

	// Create the layer bar container and selection menu
	string $layerBarFrame = `frameLayout
		-parent $parent
		-label "Layer Bar"
		-annotation "Layer Bar: Interface for layers."
		-borderVisible  false
		-borderStyle    "in"
		-labelVisible   false
		-collapse       false
		-collapsable    false`;	

	// make the frame fill the parent widget.
	formLayout -edit
		-attachForm		$layerBarFrame	"top"		0
		-attachForm		$layerBarFrame	"left"		0
		-attachForm		$layerBarFrame	"bottom"	0
		-attachForm		$layerBarFrame	"right"		0
		$parent;
	
	// The working form for the layer bar.
	$layerWorkForm = `formLayout -parent $layerBarFrame`;

	// The form will contain
	// layerTypeMenu
	// layerTypeForm
	$gLayerTypeMenu = `optionMenu -cc "layerTypeChangedCB"`;
	menuItem -label "Display Layers";
	menuItem -label "Render Layers";

	string $layerTypeForm = `formLayout -parent $layerWorkForm`;
	
	//  Create the Display Layer Bar
	if( `exists layerBar` ){
		eval "source layerBar";
		$gDisplayLayerBar = createLayerBar( $layerTypeForm );
		if ( $layerBarType == "display" ) {
			frameLayout -e -vis true $gDisplayLayerBar;
			optionMenu -e -sl 1 $gLayerTypeMenu;
		} else {
			frameLayout -e -vis false $gDisplayLayerBar;
		}
	}

	//  Create the Render Layer Bar
	if( `exists renderLayerBar` ){
		eval "source renderLayerBar";
		$gRenderLayerBar = createRenderLayerBar( $layerTypeForm );
		if ( $layerBarType == "render" ) {
			frameLayout -e -vis true $gRenderLayerBar;
			optionMenu -e -sl 2 $gLayerTypeMenu;
		} else {
			frameLayout -e -vis false $gRenderLayerBar;
		}
	}

	//
	//  Attach the option menu to the layer bar
	//

	formLayout -edit
	    -attachForm    $gLayerTypeMenu "top"    3
	    -attachForm    $gLayerTypeMenu "left"   0
	    -attachNone    $gLayerTypeMenu "bottom"
	    -attachNone    $gLayerTypeMenu "right"
	    -attachForm    $layerTypeForm  "top"    0
	    -attachControl $layerTypeForm  "left"   0 $gLayerTypeMenu
	    -attachNone    $layerTypeForm  "bottom"
	    -attachForm    $layerTypeForm  "right"  0
	    $layerWorkForm;
}
