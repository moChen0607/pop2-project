// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

global proc
createHelpPanel (string $whichPanel)
//
//  Description:
//		Define the editors that are used in this panel.  No
//		controls (widgets) are created at this point.
//
{
	//  create unique names for editors based on panel name
	//
	string $helpWidget = ($whichPanel + "HelpWidget");

}

global proc
addHelpPanel (string $whichPanel)
//
//  Description:
//		Add the panel to a layout.
//		Parent the editors to that layout and create any other
//		controls (widgets) required.
//
{
	string $helpWidget = ($whichPanel + "HelpWidget");

	// Make sure that there is no template active
	setUITemplate -pushTemplate NONE;

	// Define the standard panel
	//
	string $widgetList[];

	$widgetList[2] = `scriptedPanel -query -control $whichPanel`;
	$widgetList[0] = `formLayout`;
	$widgetList[3] = `frameLayout -visible true -borderVisible false
			-labelVisible false -collapsable false -collapse true
			-borderStyle "in"`;
	$widgetList[4] = `formLayout -visible true`;
	setParent $widgetList[0];
	$widgetList[5] = `formLayout -visible true`;

	formLayout -edit
		-attachForm $widgetList[3] top 0 
		-attachForm $widgetList[3] right 0
		-attachForm $widgetList[3] left 0

		-attachControl $widgetList[5] top 0 $widgetList[3]
		-attachForm $widgetList[5] bottom 0
		-attachForm $widgetList[5] right 0
		-attachForm $widgetList[5] left 0
		$widgetList[0];

	setParent $widgetList[0];

	//	menuBarLayout is turned on for this editor -
	//	create the top level menus
	//
	setParent $widgetList[2];

	//	Add support for the Context Sensitive Help Menu.
	//
//	addContextHelpProc $whichPanel "buildGraphEditorContextHelpItems";

	// Attach tools to the tool form
	//
	setParent $widgetList[4];
		toolButton 
			-doubleClickCommand toolPropertyWindow
			-collection toolCluster 
			-tool directKeySuperContext 
			-style "iconOnly"
			-image1 "directKeySmall.png"
			-width 26 -height 26
			directKeyTool;

		//	Layout the toolbar
		//
		formLayout -edit
			-attachForm directKeyTool "left" 0 	

			$widgetList[4];

	// Parent the editors to the editor layout
	//
	setParent $widgetList[5];
	htmlWidget $helpWidget;
	formLayout -edit
		-attachForm $helpWidget top 0 
		-attachForm $helpWidget right 0
		-attachForm $helpWidget left 0
		-attachForm $helpWidget bottom 0
		$widgetList[5];

	// Attach menus to the graph editor and the
	// outliner editor.  
	//
//	GraphEditorMenu $graphEd $outlineEd $widgetList;

	setParent -top;

	setUITemplate -popTemplate;
}

global proc
removeHelpPanel (string $whichPanel)
//
//  Description:
//		Remove the panel from a layout.
//		Delete controls.
//
{
	string $helpWidget = ($whichPanel + "HelpWidget");

}

global proc
deleteHelpPanel (string $whichPanel)
//
//  Description:
//		This proc will delete the contents of the panel, but not
//		the panel itself.
//
//  Note:
//		We only need to delete editors here.  Other UI will be taken care of
//		by the remove proc.
//
{
	string $helpWidget = ($whichPanel + "HelpWidget");

}

global proc string
saveStateHelpPanel (string $whichPanel)
//
//  Description:
//		This proc returns a string that when executed will restore the
//		current state of the panel elements.
//
{
	string $helpWidget = ($whichPanel + "HelpWidget");

	return ("");
}
