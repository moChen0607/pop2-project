import sys
sys.path.append(r"I:\Savannah\CollaborativeSpace\portal-origins-part-2\Pipeline\the_LATESTDEV\latest_MAYA\maya_SCRIPTS")
import pickrunner.pickrunner as pickrunner

pickrunner.main()


import pymel.core as pm
def test_large_scene():
    # create a grid of locators
    locatorDictH = {}
    gridOfLocators = (10, 10)
    spacing = 4
    offsetX = -4.5 * 4
    offsetY = 5
    for x in xrange(gridOfLocators[0]):
        for y in xrange(gridOfLocators[1]):
            locator = pm.spaceLocator()
            xCoord = (spacing * x) + offsetX
            yCoord = (spacing * y) + offsetY
            locator.translate.set([xCoord, yCoord, 0])
            locator.rotate.set([-45, -45, -45])
            position = (x,y)
            locatorDictH.update({position: locator})    

    # set-up connections
    for position, locator in locatorDictH.iteritems():
        x, y = position
        otherPositions = [(0, 1), (1, 0), (0, -1), (-1, 0)]
        motor = engine.MotorMaya(locator)
        motor.init_metadata_proxy()
        for num, pos in enumerate(otherPositions):
            posX = pos[0]
            posY = pos[1]
            try:
                adjacentLoc = locatorDictH[x+posX, y+posY]
            except KeyError:
                # skip, the index locator doesn't exist at this position
                continue

            adjMotor = engine.MotorMaya(adjacentLoc)
            adjMotor.init_metadata_proxy()
            if num == 0:  # up
                motor.members.up = adjMotor
            elif num == 1:  # left
                motor.members.left = adjMotor
            elif num == 2:  # down
                motor.members.down = adjMotor
            elif num == 3:  # right
                motor.members.right = adjMotor
# test_large_scene

test_large_scene()